[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/array/arrayutils/arrConcat.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n\n// concatinate a list of arrays\n/**\n * concatinate a list of arrays\n * @param  {Array} arrays [description]\n * @return {Array}           [description]\n */\nexport default  function arrConcat(...arrays) {\n\treturn Array.prototype.concat.apply([], arrays);\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrConcat.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "arrConcat",
    "memberof": "src/array/arrayutils/arrConcat.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrConcat.js~arrConcat",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrConcat.js",
    "importStyle": "arrConcat",
    "description": "concatinate a list of arrays",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "arrays",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 50,
    "kind": "file",
    "name": "src/array/arrayutils/arrCount.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport arrCurry from './arrCurry';\n\n/**\n * [description]\n * @param  {[type]} testFn [description]\n * @param  {[type]} arr   \n * @return {[type]}        [description]\n */\nexport default  arrCurry(\n\tfunction(testFn,arr) {\n\t\tlet len = arr.length;\n\t\tlet count = 0;\n\t\tfor(let i=0; i<len; i++) {\n\t\t\tif(testFn(arr[i])) count++;\n\t\t}\n\t\treturn count; //list.reduce((cnt,e) => (e || '').trim() == v ? cnt+1 : cnt, 0);\n\t});\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrCount.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 51,
    "kind": "file",
    "name": "src/array/arrayutils/arrCountVal.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n\n/**\n * is str a string\n * @param  {String} str\n * @return {boolean} - true if str is a string\n */\nfunction isString(str) {\n\treturn (typeof str === 'string')?str:null;\n}\n/**\n * [arrCountVal description]\n * @param  {[type]} list [description]\n * @param  {[type]} v    [description]\n * @return {[type]}      [description]\n */\nexport function arrCountVal(list,v) {\n\tv = isString(v) ? (v?v.trim():''):v;\n\tlet len = list.length;\n\tlet count = 0;\n\tfor(let i=0; i<len; i++) {\n\t\tif(list[i] === v) count++;\n\t}\n\treturn count; //list.reduce((cnt,e) => (e || '').trim() == v ? cnt+1 : cnt, 0);\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrCountVal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "isString",
    "memberof": "src/array/arrayutils/arrCountVal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrCountVal.js~isString",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrCountVal.js",
    "importStyle": null,
    "description": "is str a string",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if str is a string"
    },
    "ignore": true
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "arrCountVal",
    "memberof": "src/array/arrayutils/arrCountVal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrCountVal.js~arrCountVal",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrCountVal.js",
    "importStyle": "{arrCountVal}",
    "description": "[arrCountVal description]",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "src/array/arrayutils/arrCurry.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isArray from '../../utils/types/isArray';\n\n/**\n * THis decorates and array function so that it can have one of two forms\n * 1. arrayFunction(mappingFunction, array)\n * 2. arrayFunction(array)\n * 3. arrayFunction(mappingFunction) - return a new function that takes just an arra\n *\n * the originam\n * performs checks and currying for the functions below    \n * acts on a function of the form arrFunc(transFormFunction, arr)\n * @param  {Function} functionToDecorate [description]\n * @return {Function}        [description]\n */\nexport default function arrCurry(functionToDecorate) {\n\treturn function (transformElement,arr) {\n\t\tif( isFunction(transformElement) ) {\n\t\t\tif( arr === undefined ) return (array) => functionToDecorate(transformElement, array);\n\t\t\telse if(isArray(arr)) return functionToDecorate(transformElement,arr);\t\t\n\t\t}\n\t\tif( isArray(transformElement) ) {\n\t\t\tif( arr === undefined) {\n\t\t\t\tarr = transformElement;\n\t\t\t\treturn functionToDecorate(ID,arr);\n\t\t\t}\n\t\t}\n\t\tthrow new TypeError('Invalid argument, Please pass proper array argument');\n\t};\n}\n\n/**\n * is obj a function\n * @param  {any} fun - is a object that may be a function object\n * @return {boolean} - true if it is a function, false otherwise\n */\nfunction isFunction(fun) {\n\treturn (typeof fun === 'function')?fun:null;\n}\n\nfunction ID(x) { return x; }\n\n\n//\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrCurry.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "arrCurry",
    "memberof": "src/array/arrayutils/arrCurry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrCurry.js~arrCurry",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrCurry.js",
    "importStyle": "arrCurry",
    "description": "THis decorates and array function so that it can have one of two forms\n1. arrayFunction(mappingFunction, array)\n2. arrayFunction(array)\n3. arrayFunction(mappingFunction) - return a new function that takes just an arra\n\nthe originam\nperforms checks and currying for the functions below    \nacts on a function of the form arrFunc(transFormFunction, arr)",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "functionToDecorate",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Function"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "isFunction",
    "memberof": "src/array/arrayutils/arrCurry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrCurry.js~isFunction",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrCurry.js",
    "importStyle": null,
    "description": "is obj a function",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "fun",
        "description": "is a object that may be a function object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if it is a function, false otherwise"
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "ID",
    "memberof": "src/array/arrayutils/arrCurry.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrCurry.js~ID",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrCurry.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "src/array/arrayutils/arrDedup.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n\nimport arrCurry from './arrCurry';\n/**\n * [description]\n * @param  {Function} fn   [description]\n * @param  {Array}    arr  [description]\n * @return {Array}         [description]\n */\nexport default  arrCurry(function(fn,arr) {\n\tvar dict = new Map();\n\tvar result = [];\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tlet e = arr[i];\n\t\tlet v = fn(e);\n\t\tif (dict.get(v) === undefined) {\n\t\t\tdict.set(v, e);\n\t\t\tresult.push(e);\n\t\t}\n\t}\n\treturn result;\n});\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrDedup.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/array/arrayutils/arrDiff.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isArray from '../../utils/types/isArray';\n\n// return the difference of two arrays same as arr1 xor arr2\n/**\n * return the difference of two arrays same as arr1 xor arr2\n * @param  {Array} arr1 [description]\n * @param  {Array} arr2 [description]\n * @return {Array}      [description]\n */\nexport default  function arrDiff(arr1, arr2) {\n\tlet array = {};\n\tif (!isArray(arr1) || !isArray(arr2)) {\n\t\tthrow new TypeError('Invalid argument, Please pass proper array argument');\n\t}\n\n\tvar result = [];\n\tfor (let i = 0; i < arr2.length; i++) {\n\t\tarray[arr2[i]] = arr2[i];\n\t}\n\n\tfor (let i = 0; i < arr1.length; i++) {\n\t\tif (array[arr1[i]] === undefined)\n\t\t\tresult.push(arr1[i]);\n\t}\n\treturn result;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrDiff.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "function",
    "name": "arrDiff",
    "memberof": "src/array/arrayutils/arrDiff.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrDiff.js~arrDiff",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrDiff.js",
    "importStyle": "arrDiff",
    "description": "return the difference of two arrays same as arr1 xor arr2",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "arr1",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "arr2",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 61,
    "kind": "file",
    "name": "src/array/arrayutils/arrDistinct.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport arrEQ from '../arrEQ';\n/**\n * arrDistinct description, not array equal\n * @param  {[type]} arr1 [description]\n * @param  {[type]} arr2 [description]\n * @return {[type]}      [description]\n */\nexport function arrDistinct(arr1, arr2) {\n\treturn (!arrEQ(arr1, arr2));\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrDistinct.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "arrDistinct",
    "memberof": "src/array/arrayutils/arrDistinct.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrDistinct.js~arrDistinct",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrDistinct.js",
    "importStyle": "{arrDistinct}",
    "description": "arrDistinct description, not array equal",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr1",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr2",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 63,
    "kind": "file",
    "name": "src/array/arrayutils/arrHash.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport {strHash} from '../../string/strdict';\n\nexport default  function arrHash(arr) {\n\tlet len = arr.length;\n\tlet hash = 0;\n\tfor(let i=0; i<len;i++) {\n\t\thash=(hash*13|0)+(strHash(arr[i])|0);\n\t}\n\treturn hash;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrHash.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "arrHash",
    "memberof": "src/array/arrayutils/arrHash.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrHash.js~arrHash",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrHash.js",
    "importStyle": "arrHash",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "src/array/arrayutils/arrIntersect.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isArray from '../../utils/types/isArray';\n\n/**\n * return the intersection of two arrays\n * @param  {Array} arr1 [description]\n * @param  {Array} arr2 [description]\n * @return {Array}      [description]\n */\nexport default  function arrIntersect(arr1, arr2) {\n\tvar array = {};\n\tif (!isArray(arr1) || !isArray(arr2)) {\n\t\tthrow new TypeError('Invalid argument, Please pass proper array argument');\n\t}\n\n\tvar result = [];\n\tfor (var i = 0; i < arr1.length; i++) {\n\n\t\tif (array[arr1[i]] === undefined)\n\t\t\tarray[arr1[i]] = arr1[i];\n\t}\n\n\tfor ( i = 0; i < arr2.length; i++) {\n\t\tif (array[arr2[i]] !== undefined) {\n\n\t\t\tresult.push(arr2[i]);\n\t\t\tarray[arr2[i]] = undefined;\n\t\t}\n\t}\n\treturn result;\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrIntersect.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "arrIntersect",
    "memberof": "src/array/arrayutils/arrIntersect.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrIntersect.js~arrIntersect",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrIntersect.js",
    "importStyle": "arrIntersect",
    "description": "return the intersection of two arrays",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "arr1",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "arr2",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "src/array/arrayutils/arrMax.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport arrCurry from './arrCurry';\n\n/**\n * [description]\n * @param  {Function} fn   [description]\n * @param  {[type]}   arr  [description]\n * @return {[type]}        [description]\n */\nexport default  arrCurry(function(fn,arr) {\n\tvar min = fn(arr[0]);\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tmin = Math.max(min,fn(arr[i]));\n\t}\n\treturn min;\n});\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrMax.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/array/arrayutils/arrMean.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport arrCurry from './arrCurry';\n\n/**\n * [description]\n * @param  {Function} fn   [description]\n * @param  {[type]}   arr  [description]\n * @return {[type]}        [description]\n */\nexport default  arrCurry(function(fn,arr) {\n\tlet cnt = 0, result = 0.0, len = arr.length;\n\tfor (let i = 0; i < len; i++) {\n\t\tlet v = fn(arr[i]);\n\t\tif( typeof v === 'number') {\n\t\t\tresult += v;\n\t\t\tcnt++;\n\t\t}\n\t}\n\treturn result*1.0/cnt;\n});\n\n\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrMean.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/array/arrayutils/arrMin.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport arrCurry from './arrCurry';\n\n/**\n * [description]\n * @param  {Function} fn   [description]\n * @param  {[type]}   arr  [description]\n * @return {[type]}        [description]\n */\nexport default  arrCurry(function(fn,arr) {\n\tvar min = fn(arr[0]);\n\tfor (var i = 0; i < arr.length; i++) {\n\t\tmin = Math.min(min,fn(arr[i]));\n\t}\n\treturn min;\n});\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrMin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "file",
    "name": "src/array/arrayutils/arrOf.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * create an array of same values (aVal) where the result has n of those values\n * @param  {any} aVal  - a value to duplicate n times\n * @param  {int32} n    number of occurences in the array\n * @return {Array}      - Array of length (n) all filled aValue\n */\nexport default function arrOf(aVal,n) {\n\tlet v = [];\n\t// TODO: hndle if val is a function\n\tif(typeof aVal === 'function')\n\t\tfor(var i=0; i<n; i++) v.push(aVal(i));\n\telse for(var i=0; i<n; i++) v.push(aVal);\n\treturn v;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrOf.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "arrOf",
    "memberof": "src/array/arrayutils/arrOf.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrOf.js~arrOf",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrOf.js",
    "importStyle": "arrOf",
    "description": "create an array of same values (aVal) where the result has n of those values",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "aVal",
        "description": "a value to duplicate n times"
      },
      {
        "nullable": null,
        "types": [
          "int32"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "number of occurences in the array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "Array of length (n) all filled aValue"
    }
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "src/array/arrayutils/arrRemove.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * array subtraction arr - listToRemove  (return an array with all elements\n * of arr this is not in listToRemove)\n * @param  {Array} arr\n * @param  {Array} listToRemove\n * @return {Array} new array that contains all values of (arr) that are not in listToRemove\n */\nexport default  function arrRemove(arr, listToRemove) {\n\tif(!listToRemove || listToRemove.length === 0) return arr || [];\n\tif(!arr || arr.length === 0) return [];\n\treturn arr.filter( e => listToRemove.indexOf(e) === -1);\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrRemove.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "function",
    "name": "arrRemove",
    "memberof": "src/array/arrayutils/arrRemove.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrRemove.js~arrRemove",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrRemove.js",
    "importStyle": "arrRemove",
    "description": "array subtraction arr - listToRemove  (return an array with all elements\nof arr this is not in listToRemove)",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "listToRemove",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "new array that contains all values of (arr) that are not in listToRemove"
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/array/arrayutils/arrSplit.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * split an array into n more or less equal length arrays\n * @param  {int} n\n * @param  {Array} arr\n * @return {Array} - return an array of arrays where each inner array is approximately of length n or less\n */\nexport default  function arrSplit(n,arr) {\n\tif( n<= 0) throw new Error('array cannot be split to chunks < 0 : \\''+n+'\\'');\n\tif(arguments.length === 1) return (arr) => arrSplit(n,arr); // return a function\n\tlet len = arr.length;\n\tif(n >= len) return [arr];\n\tlet res = [],i;\n\tfor(i=n; i<len; i+= n) {\n\t\tres.push(arr.slice(i-n,i));\n\t}\n\tres.push(arr.slice(i-n));\n\treturn res;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrSplit.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "arrSplit",
    "memberof": "src/array/arrayutils/arrSplit.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrSplit.js~arrSplit",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrSplit.js",
    "importStyle": "arrSplit",
    "description": "split an array into n more or less equal length arrays",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "int"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "return an array of arrays where each inner array is approximately of length n or less"
    }
  },
  {
    "__docId__": 76,
    "kind": "file",
    "name": "src/array/arrayutils/arrSum.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport arrCurry from './arrCurry';\n\n/**\n * Add all elements of an array, optionall apply a transform function fn to each element\n * @param  {Function} fn   [description]\n * @param  {[type]}   arr  [description]\n * @return {[type]}        [description]\n */\nexport default  arrCurry(function(fn,arr) {\n\tif (arr.length === 0)\n\t\treturn 0;\n\tvar result = fn(arr[0]);\n\tfor (var i = 1; i < arr.length; i++)\n\t\tresult += fn(arr[i]);\n\treturn result;\n});\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrSum.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 77,
    "kind": "file",
    "name": "src/array/arrayutils/arrUnion.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isArray from '../../utils/types/isArray';\n\n/**\n * return the union of two arrays\n * @param  {Array} arr1 [description]\n * @param  {Array} arr2 [description]\n * @return {Array}      [description]\n */\nexport default  function arrUnion(arr1, arr2) {\n\n\tif(!arr1|| arr1.length === 0) return arr2 || [];\n\tif(!arr2|| arr2.length === 0) return arr1 || [];\n\n\tvar aSet = new Map();\n\tif (!isArray(arr1) || !isArray(arr2)) {\n\t\tthrow new TypeError('Invalid argument, Please pass proper array argument');\n\t}\n\n\tlet result = [];\n\tfor (let i = 0; i < arr1.length; i++) {\n\n\t\tif (aSet.get(arr1[i]) === undefined) {\n\t\t\taSet.set(arr1[i],arr1[i]);\n\t\t\tresult.push(arr1[i]);\n\t\t}\n\t}\n\n\tfor (let i = 0; i < arr2.length; i++) {\n\n\t\tif (aSet.get(arr2[i]) === undefined) {\n\t\t\tresult.push(arr2[i]);\n\t\t\taSet.set(arr2[i], arr2[i]);\n\t\t}\n\t}\n\treturn result;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrUnion.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 78,
    "kind": "function",
    "name": "arrUnion",
    "memberof": "src/array/arrayutils/arrUnion.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrUnion.js~arrUnion",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrUnion.js",
    "importStyle": "arrUnion",
    "description": "return the union of two arrays",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "arr1",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "arr2",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 79,
    "kind": "file",
    "name": "src/array/arrayutils/arrZip.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport newArray from './newArray';\n\n/**\n * zip and array, given an array of columns (each element is a column of values) converts and array of column arrays to and array row arrays\n * @param  {Aarry} arrays array of column arrays\n * @return {Array}           array of row arrays - [ [arrays[0][0],arrays[1][0], arrays[2][0], ... ], [arrays[0][1],arrays[1][1], arrays[2][1], ... ]\n */\nexport default  function arrZip(...arrays) {\n\tlet mx = arrMax(a=>a.length,arrays);\n\tconst cnt = arrays.length;\n\tlet res = newArray(mx,null);\n\tfor(let i=0; i<mx; i++) {\n\t\tlet el = [];\n\t\tfor(let j=0; j<cnt; j++){\n\t\t\tel.push(arrays[j][i]);\n\t\t}\n\t\tres[i] = el;\n\t}\n\treturn res;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/arrZip.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 80,
    "kind": "function",
    "name": "arrZip",
    "memberof": "src/array/arrayutils/arrZip.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/arrZip.js~arrZip",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/arrZip.js",
    "importStyle": "arrZip",
    "description": "zip and array, given an array of columns (each element is a column of values) converts and array of column arrays to and array row arrays",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "Aarry"
        ],
        "spread": false,
        "optional": false,
        "name": "arrays",
        "description": "array of column arrays"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "array of row arrays - [ [arrays[0][0],arrays[1][0], arrays[2][0], ... ], [arrays[0][1],arrays[1][1], arrays[2][1], ... ]"
    }
  },
  {
    "__docId__": 81,
    "kind": "file",
    "name": "src/array/arrayutils/filterIX.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport newArray from './newArray';\n\n/**\n * filter an attar and return the index found\n * @param  {Function} fn  \ttesting function for the filter\n * @param  {[any]}   arr \tarray of items to filter\n * @return {[integre]}      return an array of indexex\n */\nexport function filterIX(fn,arr) {\n\tlet ln = arr.length;\n\tlet res = newArray(ln,0);\n\tlet j = 0;\n\tfor (let i = 0; i < ln; i++) {\n\t\tif (fn(arr[i])) res[j++] = i;\n\t}\n\tres.length = j;\n\treturn res;\t\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/filterIX.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 82,
    "kind": "function",
    "name": "filterIX",
    "memberof": "src/array/arrayutils/filterIX.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/filterIX.js~filterIX",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/filterIX.js",
    "importStyle": "{filterIX}",
    "description": "filter an attar and return the index found",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "testing function for the filter"
      },
      {
        "nullable": null,
        "types": [
          "[any]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "array of items to filter"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[integre]"
      ],
      "spread": false,
      "description": "return an array of indexex"
    }
  },
  {
    "__docId__": 83,
    "kind": "file",
    "name": "src/array/arrayutils/index.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nimport _newArray from './newArray';\nexport const newArray = _newArray;\n\nimport _last from './last';\nexport const last = _last;\n\nimport _arrOf from './arrOf';\nexport const arrOf = _arrOf;\n\nimport _arrHash from './arrHash';\nexport const arrHash = _arrHash;\n\nimport _arrRemove from './arrRemove';\nexport const arrRemove = _arrRemove;\n\nimport _arrSplit from './arrSplit';\nexport const arrSplit = _arrSplit;\n\nimport _arrZip from './arrZip';\nexport const arrZip = _arrZip;\n\nimport _arrConcat from './arrConcat';\nexport const arrConcat = _arrConcat;\n\nimport _arrDiff from './arrDiff';\nexport const arrDiff = _arrDiff;\n\nimport _arrUnion from './arrUnion';\nexport const arrUnion = _arrUnion;\n\nimport _arrIntersect from './arrIntersect';\nexport const arrIntersect = _arrIntersect;\n\nimport _xor from './xor';\nexport const xor = _xor;\n\nimport _redim from './redim';\nexport const redim = _redim;\n\nimport _vecAdd from './vecAdd';\nexport const vecAdd = _vecAdd;\n\nimport _arrCurry from './arrCurry';\nexport const arrCurry = _arrCurry;\n\nimport _arrDedup from './arrDedup';\nexport const arrDedup = _arrDedup;\n\nimport _safeDedup from './safeDedup';\nexport const safeDedup = _safeDedup;\n\nimport _arrSum from './arrSum';\nexport const arrSum = _arrSum;\n\nimport _arrMin from './arrMin';\nexport const arrMin = _arrMin;\n\nimport _arrMax from './arrMax';\nexport const arrMax = _arrMax;\n\nimport _arrCount from './arrCount';\nexport const arrCount = _arrCount;\n\nimport _arrMean from './arrMean';\nexport const arrMean = _arrMean;\n\nexport * from './arrDistinct';\nexport * from './arrCountVal';\nexport * from './setHash';\nexport * from './zipToDict';\nexport * from './filterIX';\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 84,
    "kind": "variable",
    "name": "newArray",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~newArray",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{newArray}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 85,
    "kind": "variable",
    "name": "last",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~last",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{last}",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 86,
    "kind": "variable",
    "name": "arrOf",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrOf",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrOf}",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 87,
    "kind": "variable",
    "name": "arrHash",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrHash",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrHash}",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "arrRemove",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrRemove",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrRemove}",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 89,
    "kind": "variable",
    "name": "arrSplit",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrSplit",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrSplit}",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 90,
    "kind": "variable",
    "name": "arrZip",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrZip",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrZip}",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 91,
    "kind": "variable",
    "name": "arrConcat",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrConcat",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrConcat}",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 92,
    "kind": "variable",
    "name": "arrDiff",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrDiff",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrDiff}",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 93,
    "kind": "variable",
    "name": "arrUnion",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrUnion",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrUnion}",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 94,
    "kind": "variable",
    "name": "arrIntersect",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrIntersect",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrIntersect}",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 95,
    "kind": "variable",
    "name": "xor",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~xor",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{xor}",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 96,
    "kind": "variable",
    "name": "redim",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~redim",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{redim}",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 97,
    "kind": "variable",
    "name": "vecAdd",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~vecAdd",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{vecAdd}",
    "description": null,
    "lineNumber": 56,
    "undocument": true
  },
  {
    "__docId__": 98,
    "kind": "variable",
    "name": "arrCurry",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrCurry",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrCurry}",
    "description": null,
    "lineNumber": 59,
    "undocument": true
  },
  {
    "__docId__": 99,
    "kind": "variable",
    "name": "arrDedup",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrDedup",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrDedup}",
    "description": null,
    "lineNumber": 62,
    "undocument": true
  },
  {
    "__docId__": 100,
    "kind": "variable",
    "name": "safeDedup",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~safeDedup",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{safeDedup}",
    "description": null,
    "lineNumber": 65,
    "undocument": true
  },
  {
    "__docId__": 101,
    "kind": "variable",
    "name": "arrSum",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrSum",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrSum}",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 102,
    "kind": "variable",
    "name": "arrMin",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrMin",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrMin}",
    "description": null,
    "lineNumber": 71,
    "undocument": true
  },
  {
    "__docId__": 103,
    "kind": "variable",
    "name": "arrMax",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrMax",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrMax}",
    "description": null,
    "lineNumber": 74,
    "undocument": true
  },
  {
    "__docId__": 104,
    "kind": "variable",
    "name": "arrCount",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrCount",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrCount}",
    "description": null,
    "lineNumber": 77,
    "undocument": true
  },
  {
    "__docId__": 105,
    "kind": "variable",
    "name": "arrMean",
    "memberof": "src/array/arrayutils/index.js",
    "static": true,
    "longname": "src/array/arrayutils/index.js~arrMean",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/index.js",
    "importStyle": "{arrMean}",
    "description": null,
    "lineNumber": 80,
    "undocument": true
  },
  {
    "__docId__": 106,
    "kind": "file",
    "name": "src/array/arrayutils/last.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isArray from '../../utils/types/isArray';\n/**\n * Get the last element of an array\n * \n * @param  {[type]} arr      [description]\n * @param  {String} defaultV [description]\n * @return {[type]}          [description]\n */\nexport default function last(arr,defaultV='') {\n\tif(!isArray(arr))  return undefined;\n\tif( !arr || arr.length === 0) return defaultV;\n\treturn arr[arr.length-1];\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/last.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 107,
    "kind": "function",
    "name": "last",
    "memberof": "src/array/arrayutils/last.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/last.js~last",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/last.js",
    "importStyle": "last",
    "description": "Get the last element of an array",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "defaultV",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 108,
    "kind": "file",
    "name": "src/array/arrayutils/newArray.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * create a new array of length n\n * @param  {integer} n [description]\n * @param  {value} v optional value to initialize the array\n * @return {Array}   [description]\n */\nexport default  function newArray(n,v) { // seems to be faster way to create an array\n\tlet a = new Array(n);\n\tif( v === undefined) {\n\t\treturn a;\n\t} else {\n\t\tfor(let i=0; i<n; i++) {\n\t\t\ta[i] = v;\n\t\t}\n\t\treturn a;\n\t}\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/newArray.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 109,
    "kind": "function",
    "name": "newArray",
    "memberof": "src/array/arrayutils/newArray.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/newArray.js~newArray",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/newArray.js",
    "importStyle": "newArray",
    "description": "create a new array of length n",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "value"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "optional value to initialize the array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 110,
    "kind": "file",
    "name": "src/array/arrayutils/redim.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport newArray from './newArray';\n\n/**\n * @param  {[any]} arr\n * @param  {number} n\n * @return {[type]}\n */\nexport default  function redim(arr, n) {\n\tlet result = [];\n\tlet len = arr.length;\n\tlet len_n = len+n-1;\n\tlet _v = arr[0];\n\tfor (var i = 0; i < len_n; i += n) {\n\t\tif(len-i <= 0) break;\n\t\tvar r = newArray(Math.min(n, len-i), _v);\n\t\tvar j=0;\n\t\tfor(; j<n && i+j<len; j++) {\n\t\t\tr[j] = arr[i+j];\n\t\t}\n\t\tr.length = j;\n\t\tresult.push(r);\n\t}\n\treturn result;\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/redim.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 111,
    "kind": "function",
    "name": "redim",
    "memberof": "src/array/arrayutils/redim.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/redim.js~redim",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/redim.js",
    "importStyle": "redim",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "[any]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 112,
    "kind": "file",
    "name": "src/array/arrayutils/safeDedup.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * [safeDedup description]\n * @param  {Array} list [description]\n * @return {Array}      [description]\n */\nexport default  function safeDedup(list) {\n\tlet len = list.length;\n\tlet res = [];\n\tfor(let i=0; i<len; i++){\n\t\tlet v = list[i];\n\t\tif(res.indexOf(v) === -1) res.push(v);\n\t}\n\treturn res;\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/safeDedup.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 113,
    "kind": "function",
    "name": "safeDedup",
    "memberof": "src/array/arrayutils/safeDedup.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/safeDedup.js~safeDedup",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/safeDedup.js",
    "importStyle": "safeDedup",
    "description": "[safeDedup description]",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 114,
    "kind": "file",
    "name": "src/array/arrayutils/setHash.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * function to take the hash of an array of integers\n * @param {[int]} arrOfInt array of integers\n * @return {[type]}      [description]\n */\nexport function setHash(arrOfInt) {\n\tvar hash = 5381,\n\t\ti    = arrOfInt.length ;\n\tif( i > 5 ) i=5;\n\tlet j=i;\n\twhile(i--) {\n\t\thash = (hash * 33) ^ arrOfInt[j-i];\n\t}\n\n\t/* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n\t * integers. Since we want the results to be always positive, convert the\n\t * signed int to an unsigned by doing an unsigned bitshift. */\n\treturn hash >>> 0;    \n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/setHash.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 115,
    "kind": "function",
    "name": "setHash",
    "memberof": "src/array/arrayutils/setHash.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/setHash.js~setHash",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/setHash.js",
    "importStyle": "{setHash}",
    "description": "function to take the hash of an array of integers",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "[int]"
        ],
        "spread": false,
        "optional": false,
        "name": "arrOfInt",
        "description": "array of integers"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 116,
    "kind": "file",
    "name": "src/array/arrayutils/vecAdd.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isArray from '../../utils/types/isArray';\n\n/**\n * Add two vectors\n * @param  {[number]} a1\n * @param  {[number]} a2\n * @return {[number]}\n */\nexport default  function vecAdd(a1,a2) {\n\tif(a1 === undefined ){\n\t\tif(Array.isArray(a2)) return a2.slice();\n\t\telse return undefined;\n\t} else  if(a2 === undefined ){\n\t\tif(Array.isArray(a1)) return a1.slice();\n\t\telse return undefined;\n\t} else if(a1.length < a2.length) {\n\t\treturn a2.map((v,i) => v+(a1[i]||0));\n\t} else return a1.map((v,i) => v+(a2[i]||0));\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/vecAdd.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 117,
    "kind": "function",
    "name": "vecAdd",
    "memberof": "src/array/arrayutils/vecAdd.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/vecAdd.js~vecAdd",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/vecAdd.js",
    "importStyle": "vecAdd",
    "description": "Add two vectors",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "[number]"
        ],
        "spread": false,
        "optional": false,
        "name": "a1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[number]"
        ],
        "spread": false,
        "optional": false,
        "name": "a2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[number]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 118,
    "kind": "file",
    "name": "src/array/arrayutils/xor.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport newArray from './newArray';\n\n/**\n * remove all elements that are in both arrays\n *\n * @param  {[type]} array1\n * @param  {[type]} array2\n * @return {[type]}\n */\nexport default  function xor(array1, array2) {\n\tlet ixa =  arrIntersect(array1,array2);\n\t//console.log(ixa)\n\tlet set = new Set(ixa);\n\tlet len = ixa.length; ixa = undefined;\n\tlet res = newArray(array1.length + array2.length - 2*len,null);\n\t//console.log(\"len\",res.length)\n\tlet j=0;\n\tlen = array1.length;\n\tfor(let i=0; i<len; i++ ) {\n\t\tlet v = array1[i];\n\t\tif( !set.has(v) ) res[j++] = v;\n\t}\n\tlen = array2.length;\n\tfor(let i=0; i<len; i++ ) {\n\t\tlet v = array2[i];\n\t\tif( !set.has(v) ) res[j++] = v;\n\t}\n\t//console.log(\"len 1\", j)\n\tres.length = j;\n\n\treturn res;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/xor.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 119,
    "kind": "function",
    "name": "xor",
    "memberof": "src/array/arrayutils/xor.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/xor.js~xor",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/xor.js",
    "importStyle": "xor",
    "description": "remove all elements that are in both arrays",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "array1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "array2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 120,
    "kind": "file",
    "name": "src/array/arrayutils/zipToDict.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * @param  {[[string, any]]} aListOfPairs list of key value pairs\n * @return {[type]}\n */\nexport function zipToDict(aListOfPairs) {\n\treturn aListOfPairs.reduce( (dict, [k,v]) => { \n\t\tif(dict[k] !== undefined) throw new Error('duplicate key: '+k);\n\t\tdict[k] = v; \n\t\treturn dict;\n\t}, {});\n}\n\nexport function dictToZipB(aDict) {\n\treturn Object.keys(aDict).map( k => [k, aDict[k]]);\n}\nexport function dictToZip(aDict) {\n\treturn dictToZipB(aDict).sort( (a,b) => a[0] < b[0]?-1:1);\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrayutils/zipToDict.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "function",
    "name": "zipToDict",
    "memberof": "src/array/arrayutils/zipToDict.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/zipToDict.js~zipToDict",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/zipToDict.js",
    "importStyle": "{zipToDict}",
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "[[string, any]]"
        ],
        "spread": false,
        "optional": false,
        "name": "aListOfPairs",
        "description": "list of key value pairs"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 122,
    "kind": "function",
    "name": "dictToZipB",
    "memberof": "src/array/arrayutils/zipToDict.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/zipToDict.js~dictToZipB",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/zipToDict.js",
    "importStyle": "{dictToZipB}",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 123,
    "kind": "function",
    "name": "dictToZip",
    "memberof": "src/array/arrayutils/zipToDict.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrayutils/zipToDict.js~dictToZip",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrayutils/zipToDict.js",
    "importStyle": "{dictToZip}",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 124,
    "kind": "file",
    "name": "src/array/arrCMP.js",
    "content": "\r\n/**\r\n * Compare array, assumes the arry is sorted\r\n * returns -1, 0, +1  as required by a sotring compare function\r\n * @param  {[sorted_elements]} arr1\r\n * @param  {[sorted_elements]} arr2\r\n * @return {integer} -1 = less, 0 = equal, +1 = larger\r\n */\r\nexport default function arrCMP(arr1,arr2) {\r\n\tif( arr1 === arr2) return 0;\r\n\r\n\tlet len = Math.min(arr1.length, arr2.length);\r\n\tlet i=0;\r\n\r\n\t// some optimization reduce loop overhead cost\r\n\tif( len > 4 ){\r\n\t\tlet len1 = len - (len&3);\r\n\t\tfor(; i<len1; i += 4) {\r\n\t\t\tlet a = arr1[i], b = arr2[i];\r\n\t\t\tif(a < b) return -1;\r\n\t\t\tif(a > b) return 1;\r\n\r\n\t\t\ta = arr1[i+1], b = arr2[i+1];\r\n\t\t\tif(a < b) return -1;\r\n\t\t\tif(a > b) return 1;\r\n\r\n\t\t\ta = arr1[i+2], b = arr2[i+2];\r\n\t\t\tif(a < b) return -1;\r\n\t\t\tif(a > b) return 1;\r\n\r\n\t\t\ta = arr1[i+3], b = arr2[i+3];\r\n\t\t\tif(a < b) return -1;\r\n\t\t\tif(a > b) return 1;\r\n\t\t}\r\n\t}\r\n\tfor(i; i<len; i++) {\r\n\t\tlet a = arr1[i], b = arr2[i];\r\n\t\tif(a < b) return -1;\r\n\t\tif(a > b) return 1;  \r\n\t}\r\n\treturn 0;\r\n}",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrCMP.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 125,
    "kind": "function",
    "name": "arrCMP",
    "memberof": "src/array/arrCMP.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrCMP.js~arrCMP",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrCMP.js",
    "importStyle": "arrCMP",
    "description": "Compare array, assumes the arry is sorted\nreturns -1, 0, +1  as required by a sotring compare function",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "[sorted_elements]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[sorted_elements]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "integer"
      ],
      "spread": false,
      "description": "1 = less, 0 = equal, +1 = larger"
    }
  },
  {
    "__docId__": 126,
    "kind": "file",
    "name": "src/array/arrEQ.js",
    "content": "/**\r\n * Tests array for equality\r\n * @param  {[elements]} arr1\r\n * @param  {[elements]} arr2\r\n * @param  {Function} eqFn\r\n * @return {boolean}\r\n */\r\nexport default   function arrEQ(arr1,arr2, eqFn) {\r\n\tif( arr1 === arr2) return true;\r\n\tif(arr1.length !== arr2.length) return false;\r\n\tif(typeof eqFn === 'function') return _arrayEqual(arr1,arr2, eqFn);\r\n\tlet len = Math.min(arr1.length, arr2.length);\r\n\tlet i=0;\r\n\tif( len >= 8) {\r\n\t\tlet len1 = len - (len&7);\r\n\t\tfor(; i<len1; i += 8) {\r\n\t\t\tif(arr1[i]   !== arr2[i])   return false;\r\n\t\t\tif(arr1[i+1] !== arr2[i+1]) return false;\r\n\t\t\tif(arr1[i+2] !== arr2[i+2]) return false;\r\n\t\t\tif(arr1[i+3] !== arr2[i+3]) return false;\r\n\t\t\tif(arr1[i+4] !== arr2[i+4]) return false;\r\n\t\t\tif(arr1[i+5] !== arr2[i+5]) return false;\r\n\t\t\tif(arr1[i+6] !== arr2[i+6]) return false;\r\n\t\t\tif(arr1[i+7] !== arr2[i+7]) return false;\r\n\t\t} \r\n\t} \r\n\tif( len >= 4 ){\r\n\t\tlet len1 = len - (len&3);\r\n\t\tfor(; i<len1; i += 4) {\r\n\t\t\tif(arr1[i]   !== arr2[i])   return false;\r\n\t\t\tif(arr1[i+1] !== arr2[i+1]) return false;\r\n\t\t\tif(arr1[i+2] !== arr2[i+2]) return false;\r\n\t\t\tif(arr1[i+3] !== arr2[i+3]) return false;\r\n\t\t}    \r\n\t}\r\n\r\n\tswitch(len-i) {\r\n\tcase 3: if(arr1[i+2] !== arr2[i+2]) return false;\r\n\tcase 2: if(arr1[i+1] !== arr2[i+1]) return false;\r\n\tcase 1: if(arr1[i] !== arr2[i]) return false;\r\n\t}\r\n\r\n\treturn true;\r\n}\r\n\r\nfunction _arrayEqual(a,b, eq) {\r\n\tfor(let i= 0; i< a.length; i++ ) if( !eq(a[i],b[i] ) ) return false;\r\n\treturn true;\r\n}",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/arrEQ.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 127,
    "kind": "function",
    "name": "arrEQ",
    "memberof": "src/array/arrEQ.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrEQ.js~arrEQ",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/arrEQ.js",
    "importStyle": "arrEQ",
    "description": "Tests array for equality",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "[elements]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[elements]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr2",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "eqFn",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 128,
    "kind": "function",
    "name": "_arrayEqual",
    "memberof": "src/array/arrEQ.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/arrEQ.js~_arrayEqual",
    "access": "private",
    "export": false,
    "importPath": "nurulc.github.io/src/array/arrEQ.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 129,
    "kind": "file",
    "name": "src/array/flatten.js",
    "content": "import isArray from '../utils/types/isArray';\r\n/**\r\n * Use with a reducer\r\n * @param  {Array}  res\r\n * @param  {[type]} arr\r\n * @return {[type]}\r\n */\r\nexport function FLATTEN(res=[],arr) { return  isArray(arr)?res.concat(arr):(res.push(arr), res); }\r\n\r\n/**\r\n * Flatten an array to a depth of level, for example if level = 1, only flatten at the top level (depath1)\r\n * @param  {[with_inner_arra]} arr\r\n * @param  {integer} level - depth the given or undefined the flatten to the bottom\r\n * @return {[type]}\r\n */\r\nexport function flatten(arr, level) {\r\n\tif (!isArray(arr)) {\r\n\t\tthrow new TypeError('Invalid argument, Please pass proper array argument');\r\n\t}\r\n\tvar result = [];\r\n\tif (level === undefined)\r\n\t\treturn recursiveFlatten(arr, result);\r\n\telse\r\n\t\treturn recursiveFlattenWithDepth(arr, result, level);\r\n}\r\n\r\nfunction recursiveFlatten(arr, result) {\r\n\tfor (var i = 0; i < arr.length; i++) {\r\n\t\tif (isArray(arr[i])) {\r\n\t\t\trecursiveFlatten(arr[i], result);\r\n\t\t} else\r\n\t\t\tresult.push(arr[i]);\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n\r\n\r\nfunction recursiveFlattenWithDepth(arr, result, level) {\r\n\r\n\tfor (var i = 0; i < arr.length; i++) {\r\n\t\tif (isArray(arr[i]) && level > 0) {\r\n\t\t\trecursiveFlattenWithDepth(arr[i], result, level-1);\r\n\t\t} else result.push(arr[i]);\r\n\t}\r\n\treturn result;\r\n}\r\n\r\n\r\n\r\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/flatten.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 130,
    "kind": "function",
    "name": "FLATTEN",
    "memberof": "src/array/flatten.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/flatten.js~FLATTEN",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/flatten.js",
    "importStyle": "{FLATTEN}",
    "description": "Use with a reducer",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 131,
    "kind": "function",
    "name": "flatten",
    "memberof": "src/array/flatten.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/flatten.js~flatten",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/flatten.js",
    "importStyle": "{flatten}",
    "description": "Flatten an array to a depth of level, for example if level = 1, only flatten at the top level (depath1)",
    "lineNumber": 16,
    "params": [
      {
        "nullable": null,
        "types": [
          "[with_inner_arra]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "integer"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "depth the given or undefined the flatten to the bottom"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 132,
    "kind": "function",
    "name": "recursiveFlatten",
    "memberof": "src/array/flatten.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/flatten.js~recursiveFlatten",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/array/flatten.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 133,
    "kind": "function",
    "name": "recursiveFlattenWithDepth",
    "memberof": "src/array/flatten.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/flatten.js~recursiveFlattenWithDepth",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/array/flatten.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 134,
    "kind": "file",
    "name": "src/array/index.js",
    "content": "export * from './arrayutils';\nexport * from './intset';\nexport * from './prod';\nexport * from './flatten';\nimport _ap from './prod';\nimport _r from './reord';\nimport _arrEQ from './arrEQ';\nimport _arrCMP from './arrCMP';\nexport const reord = _r, \n \t\t\t arrProd=_ap,\n \t\t\t arrEQ = _arrEQ,\n \t\t\t arrCMP = _arrCMP;\nexport const __ARRAY__ = ['arrayutils', 'intset']; // inner parts",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "variable",
    "name": "reord",
    "memberof": "src/array/index.js",
    "static": true,
    "longname": "src/array/index.js~reord",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/index.js",
    "importStyle": "{reord}",
    "description": null,
    "lineNumber": 9,
    "undocument": true
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "__ARRAY__",
    "memberof": "src/array/index.js",
    "static": true,
    "longname": "src/array/index.js~__ARRAY__",
    "access": "private",
    "export": true,
    "importPath": "nurulc.github.io/src/array/index.js",
    "importStyle": "{__ARRAY__}",
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 137,
    "kind": "file",
    "name": "src/array/intset/asSortedSet.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport dedupSortedArr from './dedupSortedArr';\nimport hasNoDups from './hasNoDups';\nimport isSorted from './isSorted';\n\n/**\n * converts an array to sorted set, pure function - does not modify the input\n * @param  {[type]} array  - the array of (string|number) to sorted and dedup\n * @return {[type]}          return a deduped sorted array of (string|number)\n */\nexport default function asSortedSet(array) {\n\tlet arr;\n\tif( isSorted(array)) arr = array;\n\telse arr = array.slice(0).sort( (a,b) => a<b?-1:a===b?0:1);\n\treturn  hasNoDups(arr) || dedupSortedArr(arr);\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/asSortedSet.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "function",
    "name": "asSortedSet",
    "memberof": "src/array/intset/asSortedSet.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/asSortedSet.js~asSortedSet",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/asSortedSet.js",
    "importStyle": "asSortedSet",
    "description": "converts an array to sorted set, pure function - does not modify the input",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "array",
        "description": "the array of (string|number) to sorted and dedup"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "return a deduped sorted array of (string|number)"
    }
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "src/array/intset/dedupSortedArr.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n \n/**\n * removes all duplicates in a sorted array, pure function - does not modify the input\n * @param  {[Array]} arr assumes the array is sorted (will throw an exception if the array is not sorted)\n * @return {[Array]} returns a new array with no duplicates \n */\nexport default function dedupSortedArr(arr) {\n\tif( arr.length === 0) return arr;\n\tlet res = [];\n\tlet len=arr.length-1;\n\tfor(let i=0;i<len;i++){\n\t\tif(arr[i] > arr[i+1]) throw new Error(\"arr (param) is not sorted\");\n\t\tif(arr[i] !== arr[i+1]){\n\t\t\tres.push(arr[i]);\n\t\t}\n\t}\n\tres.push(arr[len]);\n\treturn res;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/dedupSortedArr.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "dedupSortedArr",
    "memberof": "src/array/intset/dedupSortedArr.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/dedupSortedArr.js~dedupSortedArr",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/dedupSortedArr.js",
    "importStyle": "dedupSortedArr",
    "description": "removes all duplicates in a sorted array, pure function - does not modify the input",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[Array]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "assumes the array is sorted (will throw an exception if the array is not sorted)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Array]"
      ],
      "spread": false,
      "description": "returns a new array with no duplicates"
    }
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "src/array/intset/findIndexOf.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n\n/**\n * find the index of an element is a sorted array representing a set, uses binary search\n * @param  {[Array]} aSet          Sorted array representing a set\n * @param  {[Any]} searchElement he item to search for within the array\n * @return {[Int]}               The index of the element which defaults to -1 when not found.\n */\nexport default function findIndexOf(aSet, searchElement) { \n\tlet minIndex = 0;\n\tlet maxIndex = aSet.length - 1;\n\tlet currentIndex;\n\tlet currentElement;\n \t\n\n\n\twhile (minIndex <= maxIndex) {\n\n\t\tcurrentIndex = (minIndex + maxIndex) >>> 1;\n\t\tcurrentElement = aSet[currentIndex];\n \n\t\tif (currentElement < searchElement) {\n\t\t\tminIndex = currentIndex + 1;\n\t\t}\n\t\telse if (currentElement > searchElement) {\n\t\t\tmaxIndex = currentIndex - 1;\n\t\t}\n\t\telse {\n\t\t\treturn currentIndex;\n\t\t}\n\t}\n \n\treturn -1;\n}\n\n\n\n\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/findIndexOf.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "findIndexOf",
    "memberof": "src/array/intset/findIndexOf.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/findIndexOf.js~findIndexOf",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/findIndexOf.js",
    "importStyle": "findIndexOf",
    "description": "find the index of an element is a sorted array representing a set, uses binary search",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "[Array]"
        ],
        "spread": false,
        "optional": false,
        "name": "aSet",
        "description": "Sorted array representing a set"
      },
      {
        "nullable": null,
        "types": [
          "[Any]"
        ],
        "spread": false,
        "optional": false,
        "name": "searchElement",
        "description": "he item to search for within the array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Int]"
      ],
      "spread": false,
      "description": "The index of the element which defaults to -1 when not found."
    }
  },
  {
    "__docId__": 143,
    "kind": "file",
    "name": "src/array/intset/hasNoDups.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n\n/**\n * checks if sorted array has no dups, pure function - does not modify the input\n * @param  {[Array]}  arr - sorted set of values\n * @return {[Boolean]}     - true if the sorted array has no diplicated, false otherwise (undefined is not a sorted set)\n */\nexport default function hasNoDups(arr /*sorted*/) {\n\tif( !arr ) return false\n\tlet len=arr.length-1;\n\tfor(let i=0;i<len;i++){\n\t\tif(arr[i] > arr[i+1]) throw new Error(\"arr (param) is not sorted\");\n\t\tif(arr[i]===arr[i+1]) {\n\t\t\treturn  undefined;\n\t\t}\n\t}\n\treturn arr;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/hasNoDups.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 144,
    "kind": "function",
    "name": "hasNoDups",
    "memberof": "src/array/intset/hasNoDups.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/hasNoDups.js~hasNoDups",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/hasNoDups.js",
    "importStyle": "hasNoDups",
    "description": "checks if sorted array has no dups, pure function - does not modify the input",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[Array]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "sorted set of values"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Boolean]"
      ],
      "spread": false,
      "description": "true if the sorted array has no diplicated, false otherwise (undefined is not a sorted set)"
    }
  },
  {
    "__docId__": 145,
    "kind": "file",
    "name": "src/array/intset/index.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nimport _asSortedSet from './asSortedSet';\nexport const asSortedSet = _asSortedSet;\n\nimport _range from './range';\nexport const range = _range;\n\nimport _dedupSortedArr from './dedupSortedArr';\nexport const dedupSortedArr = _dedupSortedArr;\n\nimport _hasNoDups from './hasNoDups';\nexport const hasNoDups = _hasNoDups;\n\nimport _isSorted from './isSorted';\nexport const isSorted = _isSorted;\n\nimport _similarity from './similarity';\nexport const similarity = _similarity;\n\nimport _intersectL from './intersectL';\nexport const intersectL = _intersectL;\n\nimport _intersect from './intersect';\nexport const intersect = _intersect;\n\nimport _max from './max';\nexport const max = _max;\n\nimport _unionL from './unionL';\nexport const unionL = _unionL;\n\nimport _subtract from './subtract';\nexport const subtract = _subtract;\n\nimport _findIndexOf from './findIndexOf';\nexport const findIndexOf = _findIndexOf;\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 146,
    "kind": "variable",
    "name": "asSortedSet",
    "memberof": "src/array/intset/index.js",
    "static": true,
    "longname": "src/array/intset/index.js~asSortedSet",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/index.js",
    "importStyle": "{asSortedSet}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 147,
    "kind": "variable",
    "name": "range",
    "memberof": "src/array/intset/index.js",
    "static": true,
    "longname": "src/array/intset/index.js~range",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/index.js",
    "importStyle": "{range}",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 148,
    "kind": "variable",
    "name": "dedupSortedArr",
    "memberof": "src/array/intset/index.js",
    "static": true,
    "longname": "src/array/intset/index.js~dedupSortedArr",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/index.js",
    "importStyle": "{dedupSortedArr}",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 149,
    "kind": "variable",
    "name": "hasNoDups",
    "memberof": "src/array/intset/index.js",
    "static": true,
    "longname": "src/array/intset/index.js~hasNoDups",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/index.js",
    "importStyle": "{hasNoDups}",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 150,
    "kind": "variable",
    "name": "isSorted",
    "memberof": "src/array/intset/index.js",
    "static": true,
    "longname": "src/array/intset/index.js~isSorted",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/index.js",
    "importStyle": "{isSorted}",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 151,
    "kind": "variable",
    "name": "similarity",
    "memberof": "src/array/intset/index.js",
    "static": true,
    "longname": "src/array/intset/index.js~similarity",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/index.js",
    "importStyle": "{similarity}",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 152,
    "kind": "variable",
    "name": "intersectL",
    "memberof": "src/array/intset/index.js",
    "static": true,
    "longname": "src/array/intset/index.js~intersectL",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/index.js",
    "importStyle": "{intersectL}",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 153,
    "kind": "variable",
    "name": "intersect",
    "memberof": "src/array/intset/index.js",
    "static": true,
    "longname": "src/array/intset/index.js~intersect",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/index.js",
    "importStyle": "{intersect}",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 154,
    "kind": "variable",
    "name": "max",
    "memberof": "src/array/intset/index.js",
    "static": true,
    "longname": "src/array/intset/index.js~max",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/index.js",
    "importStyle": "{max}",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 155,
    "kind": "variable",
    "name": "unionL",
    "memberof": "src/array/intset/index.js",
    "static": true,
    "longname": "src/array/intset/index.js~unionL",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/index.js",
    "importStyle": "{unionL}",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 156,
    "kind": "variable",
    "name": "subtract",
    "memberof": "src/array/intset/index.js",
    "static": true,
    "longname": "src/array/intset/index.js~subtract",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/index.js",
    "importStyle": "{subtract}",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 157,
    "kind": "variable",
    "name": "findIndexOf",
    "memberof": "src/array/intset/index.js",
    "static": true,
    "longname": "src/array/intset/index.js~findIndexOf",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/index.js",
    "importStyle": "{findIndexOf}",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 158,
    "kind": "file",
    "name": "src/array/intset/intersect.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport intersectL from './intersectL';\n/**\n * intersection of a list of sets (sorted arrays)\n * Intersects list sorted array sets (array that issorted and has no duplicates)\n * @param  {[Array]]} sortedL Array of sorted array representing a set (no duplicated)\n * @return {[Array]}         sorted array with no duplicates (a set)\n */\nexport default function intersect(sortedL/*list od sets*/) {\n\treturn intersectL(...sortedL);\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/intersect.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 159,
    "kind": "function",
    "name": "intersect",
    "memberof": "src/array/intset/intersect.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/intersect.js~intersect",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/intersect.js",
    "importStyle": "intersect",
    "description": "intersection of a list of sets (sorted arrays)\nIntersects list sorted array sets (array that issorted and has no duplicates)",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "[Array]]"
        ],
        "spread": false,
        "optional": false,
        "name": "sortedL",
        "description": "Array of sorted array representing a set (no duplicated)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Array]"
      ],
      "spread": false,
      "description": "sorted array with no duplicates (a set)"
    }
  },
  {
    "__docId__": 160,
    "kind": "file",
    "name": "src/array/intset/intersectL.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * Intersects two sorted array sets (array that issorted and has no duplicates)\n * @param  {[Array]} sortedA sorted array representing a set (no duplicated)\n * @param  {[Array]} sortedB sorted array representing a set (no duplicated)\n * @return {[Array]}         sorted array with no duplicates (a set)\n */\nfunction _intersect2(sortedA, sortedB) {\n\tlet res = [];\n\tlet j=0;\n\tlet lenA = sortedA.length;\n\tlet lenB = sortedB.length;\n\tfor(let i =0; i< lenA && j< lenB;i++) {\n\t\tlet iA = sortedA[i];\n\t\tif(iA == sortedB[j]) {\n\t\t\tres.push(iA);\n\t\t\tj++;\n\t\t} else {\n\t\t\twhile(j<lenB && iA > sortedB[j]) j++;\n\t\t\t\t\t\n\t\t\tif( j == lenB) return res;\n\t\t\tif(iA == sortedB[j]) {\n\t\t\t\tres.push(iA);\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t}\n\treturn res;   \n}\n\nfunction _intersect3(sortedA, sortedB,sortedC) {\n\tlet res = [];\n\tlet j = 0;\n\tlet k = 0;\n\tlet lenA = sortedA.length;\n\tlet lenB = sortedB.length;\n\tlet lenC = sortedC.length;\n\tfor(let i = 0; i< lenA && j< lenB&& k < lenC;i++) {\n\t\tlet iA = sortedA[i];\n\t\tif(iA === sortedB[j] && iA === sortedC[k]) {\n\t\t\tres.push(iA);\n\t\t\tj++; k++;\n\t\t} else {\n\t\t\twhile(j<lenB && iA > sortedB[j]) j++;  /* */     if( j === lenB) return res;          \n\t\t\twhile(k<lenC && iA > sortedC[k]) k++;  /* */     if( k === lenC) return res;\n\n\t\t\tif(iA === sortedB[j] && iA === sortedC[k]) {\n\t\t\t\tres.push(iA);\n\t\t\t\tj++; k++;\n\t\t\t}\n\t\t}\n\t}\n\treturn res;   \n}\n\n\n/**\n * intersection of an Array of sets, where each Set is represented as a sorted array of values (no dups)\n * @param  {[Array]} lsa Array of sets\n * @return {[Array]}     a Sorted array representing the intersection of all the sts\n */\nexport default  function intersectL(lsa) {\n\tif( !lsa || lsa.length == 0 || lsa.length == 1) return [];\n\tconst lsaLen = lsa.length;\n\tif( lsaLen == 2 ) return _intersect2(lsa[0],lsa[1]);\n\tif( lsaLen == 3 ) return _intersect3(lsa[0],lsa[1],lsa[2]);\n\t\t\n\t// ix = array set and position elements, where each element [ pos-in-set, set-array]\n\t//let ix = lsa.map((ls) => [0,ls]);\n\tlet ix = []; for(let i=0; i<lsaLen; i++) ix.push([0, lsa[i]]);\n\t//let sm = lsa.reduce( (s,l) => s.length > l.length? l : s, lsa[0]); // find shortest\n\t\t\n\tlet sm = lsa[0]; // ugly but fast version of find the shortest set;\n\tfor(let i=1; i<lsaLen; i++) \n\t\tif(lsa[i].length<sm.length) sm = lsa[i]; // find tthe shortest set (sm = shortest set)\n\t\t\n\tlet res = [];\n\tconst smLen = sm.length;\n\tfor(let i=0; i<smLen; i++) {\n\t\tlet v = sm[i];\n\t\t//let ixLen = ix.length; \n\t\tfor(let j =0; j<lsaLen; j++) { //move all the set positions, so that elememt at 'pos'  >= sm[i]\n\t\t\tlet [k, e] = ix[j];\n\t\t\tlet eLen = e.length;\n\t\t\twhile( k< eLen && e[k]< v) k++;\n\t\t\t\t\t\t\n\t\t\tix[j][0] = k; // update pos in set\n\t\t}\n\t\t//let v1 = ix.reduce( (s,[j,z]) => s === z[j] ? s : undefined, v );\n\t\t//let ln = ix.length;\n\t\t// make sure all the \n\t\tlet v1 = v;\n\t\tfor(let k=0; k<lsaLen; k++) {\n\t\t\tlet [j,z] = ix[k];\n\t\t\tif(j < z.length && v1 !== z[j]) {\n\t\t\t\tv1 = undefined;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif( v1 !== undefined ) res.push(v);\n\n\t}\n\treturn res;\n}\n\n\n/*\n[intersect([[0,1,2,3,5],[0,1,2,3,5,6],[0,1,2,4,5]]),\n intersect([[0,1],[0,1,2,3,5,6],[0,1,2,4,5]]),\n intersect([[0,1,2,3,5],[0,1,2,3,5,6],[4,5,7]]),\n intersect([[0,1,2,3,5,7],[0,3,5,6]])\n]\n*/\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/intersectL.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 161,
    "kind": "function",
    "name": "_intersect2",
    "memberof": "src/array/intset/intersectL.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/intersectL.js~_intersect2",
    "access": "private",
    "export": false,
    "importPath": "nurulc.github.io/src/array/intset/intersectL.js",
    "importStyle": null,
    "description": "Intersects two sorted array sets (array that issorted and has no duplicates)",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[Array]"
        ],
        "spread": false,
        "optional": false,
        "name": "sortedA",
        "description": "sorted array representing a set (no duplicated)"
      },
      {
        "nullable": null,
        "types": [
          "[Array]"
        ],
        "spread": false,
        "optional": false,
        "name": "sortedB",
        "description": "sorted array representing a set (no duplicated)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Array]"
      ],
      "spread": false,
      "description": "sorted array with no duplicates (a set)"
    },
    "ignore": true
  },
  {
    "__docId__": 162,
    "kind": "function",
    "name": "_intersect3",
    "memberof": "src/array/intset/intersectL.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/intersectL.js~_intersect3",
    "access": "private",
    "export": false,
    "importPath": "nurulc.github.io/src/array/intset/intersectL.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 163,
    "kind": "function",
    "name": "intersectL",
    "memberof": "src/array/intset/intersectL.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/intersectL.js~intersectL",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/intersectL.js",
    "importStyle": "intersectL",
    "description": "intersection of an Array of sets, where each Set is represented as a sorted array of values (no dups)",
    "lineNumber": 77,
    "params": [
      {
        "nullable": null,
        "types": [
          "[Array]"
        ],
        "spread": false,
        "optional": false,
        "name": "lsa",
        "description": "Array of sets"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Array]"
      ],
      "spread": false,
      "description": "a Sorted array representing the intersection of all the sts"
    }
  },
  {
    "__docId__": 164,
    "kind": "file",
    "name": "src/array/intset/isSorted.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * checks if array is sorted, pure function - does not modify the input\n * @param  {[type]}  arr - Array of values (string|number)\n * @return {[boolean]}     - true if the array is sorted, false otherwise (undefined is not a sorted set)\n */\nexport default function isSorted(arr /* may not be sorted sorted*/) {\n\tlet len=arr.length-1;\n\tfor(let i=0;i<len;i++){\n\t\tif(arr[i]>arr[i+1]){\n\t\t\treturn  false;\n\t\t}\n\t}\n\treturn true;\n}\n\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/isSorted.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 165,
    "kind": "function",
    "name": "isSorted",
    "memberof": "src/array/intset/isSorted.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/isSorted.js~isSorted",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/isSorted.js",
    "importStyle": "isSorted",
    "description": "checks if array is sorted, pure function - does not modify the input",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "Array of values (string|number)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[boolean]"
      ],
      "spread": false,
      "description": "true if the array is sorted, false otherwise (undefined is not a sorted set)"
    }
  },
  {
    "__docId__": 166,
    "kind": "file",
    "name": "src/array/intset/max.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * maximum of a sorted array\n * @param  {[any]} list \n * @return {any}\n */\nexport default function max(list) { \n    return (!list || list.length == 0) ? undefined : list[list.length-1];\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/max.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 167,
    "kind": "function",
    "name": "max",
    "memberof": "src/array/intset/max.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/max.js~max",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/max.js",
    "importStyle": "max",
    "description": "maximum of a sorted array",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "[any]"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 168,
    "kind": "file",
    "name": "src/array/intset/range.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport newArray from '../arrayutils/newArray';\n/**\n * Creates a set (array) of numbers [start ... (end-1)]\n * @param  {[int32]} start start value\n * @param  {[int32]} end   one mare then the last value in the result array\n * @return {[Array]}         [description]\n */\nexport default  function range(start, end) {\n\tif( end === undefined) { end = start; start = 0;}\n\tlet res = newArray(end-start);\n\tstart = start | 0;\n\tfor(let i=start; i<end; i++) res[i-start] = i;\n\treturn res;\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/range.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 169,
    "kind": "function",
    "name": "range",
    "memberof": "src/array/intset/range.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/range.js~range",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/range.js",
    "importStyle": "range",
    "description": "Creates a set (array) of numbers [start ... (end-1)]",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "[int32]"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "start value"
      },
      {
        "nullable": null,
        "types": [
          "[int32]"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "one mare then the last value in the result array"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Array]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 170,
    "kind": "file",
    "name": "src/array/intset/similarity.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * Show how similar two sets (sorted list) actually are\n * @param  {[Array]} sortedA [description]\n * @param  {[Array]} sortedB [description]\n * @return {[Array]}         where the array contains[same_count, different_count]\n */\nexport default  function similarity(sortedA, sortedB) {\n\tlet j=0;\n\tlet lenA = sortedA.length;\n\tlet lenB = sortedB.length;\n\tlet same = 0;\n\tfor(let i =0; i< lenA && j< lenB;i++) {\n\t\tlet iA = sortedA[i];\n\t\tif(iA == sortedB[j]) {\n\t\t\tsame++;\n\t\t\tj++;\n\t\t} else {\n\t\t\twhile(j<lenB && iA > sortedB[j]) j++;\n\t\t\t\t\t\n\t\t\tif( j == lenB) break;\n\t\t\tif(iA == sortedB[j]) {\n\t\t\t\tsame++\n\t\t\t\tj++;\n\t\t\t}\n\t\t}\n\t}\n\treturn [same, lenA+lenB-2*same];   \n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/similarity.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 171,
    "kind": "function",
    "name": "similarity",
    "memberof": "src/array/intset/similarity.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/similarity.js~similarity",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/similarity.js",
    "importStyle": "similarity",
    "description": "Show how similar two sets (sorted list) actually are",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[Array]"
        ],
        "spread": false,
        "optional": false,
        "name": "sortedA",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[Array]"
        ],
        "spread": false,
        "optional": false,
        "name": "sortedB",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Array]"
      ],
      "spread": false,
      "description": "where the array contains[same_count, different_count]"
    }
  },
  {
    "__docId__": 172,
    "kind": "file",
    "name": "src/array/intset/subtract.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * Set subtraction:  fromSet - elementsToRemove, assumes both sets are are represented by sorted array, and as per set definition there are no dups \n * @param {[Array]} fromSet array - array(set) of sorted elements (ascending order) and no duplicated\n * @param {[Array]} elementsToRemove array(set) - array of sorted elements (ascending order) and no duplicated\n * @return {[Array]} a new set, where (∀ x ∈ fromSet), then  (x ∈ result), if and only if (x ∉ elementsToRemove).\n */\nexport default function subtract(fromSet,elementsToRemove) {\n\tlet res = [];\n\tlet j=0;\n\tconst f_len=fromSet.length | 0;\n\tconst r_len = elementsToRemove.length | 0;\n\tfor(let i =0; i<f_len ;i++) {\n\t\t//console.log(i,j, \";\",fromSet[i], elementsToRemove[j])\n\t\tif( j>= r_len || fromSet[i] < elementsToRemove[j]) {\n\t\t\tres.push(fromSet[i]);\n\t\t} else {\n\t\t\twhile(j<r_len && fromSet[i] > elementsToRemove[j]) j++;\n\t\t\t\t\n\t\t\tif( j>=r_len || fromSet[i] != elementsToRemove[j] ) res.push(fromSet[i]);\n\t\t\telse j++;\n\t\t}\n\t}\n\treturn res;   \n}\n\n\n//subtract([1,2,3,4],[2,3,9])  -> [1,4]  \n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/subtract.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 173,
    "kind": "function",
    "name": "subtract",
    "memberof": "src/array/intset/subtract.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/subtract.js~subtract",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/subtract.js",
    "importStyle": "subtract",
    "description": "Set subtraction:  fromSet - elementsToRemove, assumes both sets are are represented by sorted array, and as per set definition there are no dups ",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[Array]"
        ],
        "spread": false,
        "optional": false,
        "name": "fromSet",
        "description": "array - array(set) of sorted elements (ascending order) and no duplicated"
      },
      {
        "nullable": null,
        "types": [
          "[Array]"
        ],
        "spread": false,
        "optional": false,
        "name": "elementsToRemove",
        "description": "array(set) - array of sorted elements (ascending order) and no duplicated"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Array]"
      ],
      "spread": false,
      "description": "a new set, where (∀ x ∈ fromSet), then  (x ∈ result), if and only if (x ∉ elementsToRemove)."
    }
  },
  {
    "__docId__": 174,
    "kind": "file",
    "name": "src/array/intset/unionL.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * Union of a list of sets: assumes both sets are are represented by sorted array, and as per set definition there are no dups \n * @param  {[Array]} lsa array[ array{set}... ] - array{set} of sorted elements (ascending order) and no duplicated\n * @return {[set]} a new set, where result = lsa[0] ∪ lsa[1] ∪ ...\n */\nexport default function unionL(lsa /* array of sets */) {\n\t//let mx = lsa.map(l => l.length);\n\n\tif(lsa.length === 0) return [];\n\tif( lsa.length == 1 ) return lsa[0];\n\tif( lsa.length == 2 ) return _union2(lsa[0],lsa[1]);\n\tif( lsa.length == 3 ) return _union3(lsa[0],lsa[1],lsa[2]);\n\tif( lsa.length == 4 ) return _union2(_union2(lsa[0],lsa[1]),_union2(lsa[2], lsa[3]));\n\tif( lsa.length == 5 ) return _union3(_union2(lsa[0],lsa[1]),_union2(lsa[2], lsa[3]),lsa[4]);\n\tif( lsa.length == 6 ) return _union3(_union2(lsa[0],lsa[1]),_union2(lsa[2], lsa[3]),_union2(lsa[4],lsa[5]));\n\t\t\n\tlet [first,second] = arrSplit2(lsa);\n\treturn _union2(unionL(first), unionL(second));\n}\n\n// union of two sets\nfunction _union2(sortedA, sortedB) {\n\tlet lenA = sortedA.length;\n\tlet lenB = sortedB.length;\n\tif( lenA === 0 ) return sortedB;\n\tif( lenB === 0 ) return sortedA;\n\t\t\n\tif( lenA === 1 && lenB === 1) {\n\t\tif(sortedA[0] === sortedB[0]) return sortedA;\n\t}\n\telse if( lenA === 1 ) return _union2(sortedB, sortedA);\n\telse if( lenB === 1 ) {\n\t\tlet b0 = sortedB[0];\n\t\tlet a0 = sortedA[0];\n\t\tif(lenA === 1 ) {\n\t\t\tif(a0 === b0) return sortedA;\n\t\t} else {\n\t\t\tif( b0 === a0 ) return sortedA;\n\t\t\tif( b0 === sortedA[lenA-1]) return sortedA;\n\t\t}\n\t}\n\tlet res = [];\n\tlet j=0, i=0;\n\t//let iA = sortedA[0];\n\tfor(; i< lenA && j< lenB; i++) {\n\t\tlet iA = sortedA[i] | 0;\n\t\tdo {\n\t\t\tlet jB = sortedB[j] | 0; \n\t\t\t//console.log(iA,jB);\n\t\t\tif(iA > jB) {\n\t\t\t\tres.push(jB);\n\t\t\t\tj++;\n\t\t\t\tif( j >= lenB) {\n\t\t\t\t\tres.push(iA);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if( iA === jB ){\n\t\t\t\tres.push(iA); \n\t\t\t\tj++;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tres.push(iA);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while( j < lenB );\n\t}\n\twhile(j<lenB) res.push(sortedB[j++]);\n\twhile(i<lenA) res.push(sortedA[i++]);\n\treturn res;   \n}\n\n\n\nfunction _union3(a,b,c) {\n\treturn _union2(_union2(a,b),c);\n}\n\n\n/**\n * Split an array into an array of arrays each with equal parts, expect possibly for the last element\n * @param  {[any]} list\n * @return {[[any],[any]]}\n */\nfunction arrSplit2(list) {\n\tlet len = list.length;\n\tlet half = len >>> 1;\n\treturn [list.slice(0,half), list.slice(len-half)];\n}\n\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/intset/unionL.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 175,
    "kind": "function",
    "name": "unionL",
    "memberof": "src/array/intset/unionL.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/unionL.js~unionL",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/intset/unionL.js",
    "importStyle": "unionL",
    "description": "Union of a list of sets: assumes both sets are are represented by sorted array, and as per set definition there are no dups ",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "[Array]"
        ],
        "spread": false,
        "optional": false,
        "name": "lsa",
        "description": "array[ array{set}... ] - array{set} of sorted elements (ascending order) and no duplicated"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[set]"
      ],
      "spread": false,
      "description": "a new set, where result = lsa[0] ∪ lsa[1] ∪ ..."
    }
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "_union2",
    "memberof": "src/array/intset/unionL.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/unionL.js~_union2",
    "access": "private",
    "export": false,
    "importPath": "nurulc.github.io/src/array/intset/unionL.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "_union3",
    "memberof": "src/array/intset/unionL.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/unionL.js~_union3",
    "access": "private",
    "export": false,
    "importPath": "nurulc.github.io/src/array/intset/unionL.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 90,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 178,
    "kind": "function",
    "name": "arrSplit2",
    "memberof": "src/array/intset/unionL.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/intset/unionL.js~arrSplit2",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/array/intset/unionL.js",
    "importStyle": null,
    "description": "Split an array into an array of arrays each with equal parts, expect possibly for the last element",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "[any]"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[[any],[any]]"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 179,
    "kind": "file",
    "name": "src/array/prod.js",
    "content": "import {flatten} from './flatten';\r\n\r\n/**\r\n * array cross product in n dimension, where n ils the number of arguments (length of list)\r\n * Note: this can produce enormous amounts of data for n > 1, for esample n = 2, list[0].length = x ,and list[1].length = y\r\n * the resultant array contains x*y values, x = 100, y=200 we produce 20,000 values;\r\n *\r\n * for diremsion n=3, z = 50\r\n * \r\n * @param  {[type]} list [description]\r\n * @return {[type]}         [description]\r\n */\r\nexport default function arrProd(...list) { \r\n\tif(list.length === 0) return [];\r\n\tif(list.length === 1) return [list[0]];\r\n\tlet len = list.length;\r\n\tlet row = [];\r\n\tfor(let i=0; i<len; i++) row.push('');\r\n\treturn xprod(list,0, row, []);\r\n}\r\n\r\n\r\nfunction xprod(list,ix, row, res) {\r\n\tif(ix >= list.length) {\r\n\t\tres.push(row.slice());\r\n\t\treturn res;\r\n\t}\r\n\telse {\r\n\t\tlet ls = list[ix];\r\n\t\tif( !Array.isArray(ls)) {\r\n\t\t\trow[ix] = ls || '';\r\n\t\t\txprod(list,ix+1, row, res);\r\n\t\t} else {\r\n\t\t\tls.forEach(v=> {\r\n\t\t\t\trow[ix] = v;\r\n\t\t\t\txprod(list,ix+1, row, res);\r\n\t\t\t});\r\n\t\t}\r\n\t\treturn res;\r\n\t}\r\n}\r\n\r\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/prod.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 180,
    "kind": "function",
    "name": "arrProd",
    "memberof": "src/array/prod.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/prod.js~arrProd",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/prod.js",
    "importStyle": "arrProd",
    "description": "array cross product in n dimension, where n ils the number of arguments (length of list)\nNote: this can produce enormous amounts of data for n > 1, for esample n = 2, list[0].length = x ,and list[1].length = y\nthe resultant array contains x*y values, x = 100, y=200 we produce 20,000 values;\n\nfor diremsion n=3, z = 50",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 181,
    "kind": "function",
    "name": "xprod",
    "memberof": "src/array/prod.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/prod.js~xprod",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/array/prod.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 182,
    "kind": "file",
    "name": "src/array/reord.js",
    "content": "// Given a list (fulllist) [A,B,C,D,E,F]\r\n// and a subset of the 'fulllist' but in a different order\r\n// return a new version of the full list honoring the requested order\r\n\r\n//===\r\nfunction idx(list, scale) {\r\n\treturn list.reduce((ret,v,i) => {ret[v] = (i+1)*scale; return ret;},{} );\r\n}\r\n\r\nfunction sIx(elem, mp, subIx, ret) {\r\n\tlet pos = mp[elem];\r\n\tif( pos === undefined) {\r\n\t\tret[elem]=subIx+1;\r\n\t\treturn subIx+1;\r\n\t}\r\n\tret[elem] = pos;\r\n\treturn pos;\r\n}\r\n/**\r\n * @param  {[type]} subListWithNewOrder\r\n * @param  {[type]} fullList\r\n * @return {[type]}\r\n */\r\nexport default function reord(subListWithNewOrder,fullList) {\r\n\tvar mp = idx(subListWithNewOrder||[],fullList.length);\r\n\t//\tconsole.log(mp);\r\n\tvar ret = {};\r\n\tfullList.reduce((v,e) => sIx(e,mp,v, ret), 0 );\r\n\t\r\n\tvar cmp = (a,b) => ret[a] - ret[b];\r\n\treturn (list) => { var l = (list||fullList).slice(0); l.sort(cmp); return l;};\r\n\r\n}\r\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/array/reord.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 183,
    "kind": "function",
    "name": "idx",
    "memberof": "src/array/reord.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/reord.js~idx",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/array/reord.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 184,
    "kind": "function",
    "name": "sIx",
    "memberof": "src/array/reord.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/reord.js~sIx",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/array/reord.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 185,
    "kind": "function",
    "name": "reord",
    "memberof": "src/array/reord.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/array/reord.js~reord",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/array/reord.js",
    "importStyle": "reord",
    "description": "",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "subListWithNewOrder",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "fullList",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 186,
    "kind": "file",
    "name": "src/dict/index.js",
    "content": "export * from './utils';\r\nexport const __DICT__ = ['utils'];",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/dict/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 187,
    "kind": "variable",
    "name": "__DICT__",
    "memberof": "src/dict/index.js",
    "static": true,
    "longname": "src/dict/index.js~__DICT__",
    "access": "private",
    "export": true,
    "importPath": "nurulc.github.io/src/dict/index.js",
    "importStyle": "{__DICT__}",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 188,
    "kind": "file",
    "name": "src/dict/utils/Accum.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nexport class Accum {\n\tconstructor() {\n\t\tthis.value = 0.0;\n\t\tthis._count = 0;\n\t\tthis._realCount = 0;\n\t\tthis.value2 = 0.0; //vaule^2\n\t}\n\tadd(value) {\n\t\tlet v = +value;\n\t\tthis._realCount++;\n\t\tif(!isNaN(v)){\n\t\t\tthis.value += v;\n\t\t\tthis.value2 += v*v;\n\t\t\tthis._count++;\n\t\t}\t\n\t}\n\n\tmap(fn) {\n\t\treturn range(this._count).map(i => fn(this.value,i,[this]));\n\t}\n\n\tsum() { return this.value; }\n\tcount() { return this._count; }\n\trealCount() { return this._realCount; }\n\tmean() { return this._count?(this.value/this._count):0; }\n\tstdDiv() {\n\t\tif(this._count === 0) return 0;\n\t\tlet mean = this.mean();\n\t\treturn Math.sqrt((this.value2-this._count*mean*mean)/(this._count-1.0));\n\t}\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/dict/utils/Accum.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 189,
    "kind": "class",
    "name": "Accum",
    "memberof": "src/dict/utils/Accum.js",
    "static": true,
    "longname": "src/dict/utils/Accum.js~Accum",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/dict/utils/Accum.js",
    "importStyle": "{Accum}",
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 190,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/dict/utils/Accum.js~Accum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/Accum.js~Accum#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "value",
    "memberof": "src/dict/utils/Accum.js~Accum",
    "static": false,
    "longname": "src/dict/utils/Accum.js~Accum#value",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "_count",
    "memberof": "src/dict/utils/Accum.js~Accum",
    "static": false,
    "longname": "src/dict/utils/Accum.js~Accum#_count",
    "access": "private",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "_realCount",
    "memberof": "src/dict/utils/Accum.js~Accum",
    "static": false,
    "longname": "src/dict/utils/Accum.js~Accum#_realCount",
    "access": "private",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "value2",
    "memberof": "src/dict/utils/Accum.js~Accum",
    "static": false,
    "longname": "src/dict/utils/Accum.js~Accum#value2",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 195,
    "kind": "method",
    "name": "add",
    "memberof": "src/dict/utils/Accum.js~Accum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/Accum.js~Accum#add",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 198,
    "kind": "method",
    "name": "map",
    "memberof": "src/dict/utils/Accum.js~Accum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/Accum.js~Accum#map",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true
  },
  {
    "__docId__": 199,
    "kind": "method",
    "name": "sum",
    "memberof": "src/dict/utils/Accum.js~Accum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/Accum.js~Accum#sum",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 200,
    "kind": "method",
    "name": "count",
    "memberof": "src/dict/utils/Accum.js~Accum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/Accum.js~Accum#count",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 201,
    "kind": "method",
    "name": "realCount",
    "memberof": "src/dict/utils/Accum.js~Accum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/Accum.js~Accum#realCount",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 202,
    "kind": "method",
    "name": "mean",
    "memberof": "src/dict/utils/Accum.js~Accum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/Accum.js~Accum#mean",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 203,
    "kind": "method",
    "name": "stdDiv",
    "memberof": "src/dict/utils/Accum.js~Accum",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/Accum.js~Accum#stdDiv",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 204,
    "kind": "file",
    "name": "src/dict/utils/groupByToDict.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport getColIx from '../../frame/getColIx';\nimport {MultiDict} from './MultiDict'\nimport haveFrame from '../../frame/haveFrame';\nimport {Frame} from '../../frame';\n\n/**\n * Returns an array of Frames, for each group\n * the name of the Frameis the value of the grouping\n * @param  {[type]} aFrame  [description]\n * @param  {[type]} colName [description]\n * @param  {[type]} cmp     [description]\n * @param  {[type]} mapFn   [description]\n * @return {[type]}         [description]\n */\nexport default function groupByToDict(aFrame, colName, cmp,mapFn) {\n\taFrame = haveFrame(aFrame);\n\tlet ix = getColIx(aFrame, colName);\n\tmapFn = mapFn || identity;\n\tlet dict = new MultiDict();\n\t\n\taFrame.data.forEach(row => dict.set(mapFn(row[ix]), row));\n\tlet arr = Object.keys(dict.dict).map(key => new Frame( dict.dict[key], aFrame.columns, ''+key));\n\n\tcmp = cmp || cmpStrNum;\n\tarr.sort((frame1, frame2) => cmp(frame1.name, frame2.name));\n\treturn arr;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/dict/utils/groupByToDict.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 205,
    "kind": "function",
    "name": "groupByToDict",
    "memberof": "src/dict/utils/groupByToDict.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dict/utils/groupByToDict.js~groupByToDict",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/dict/utils/groupByToDict.js",
    "importStyle": "groupByToDict",
    "description": "Returns an array of Frames, for each group\nthe name of the Frameis the value of the grouping",
    "lineNumber": 31,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "colName",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "cmp",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "mapFn",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 206,
    "kind": "file",
    "name": "src/dict/utils/groupToDict.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport haveFrame from '../../frame/haveFrame';\nimport getColIx from '../../frame/getColIx';\nimport {MultiDict} from './MultiDict'\nimport {Frame} from '../../frame';\n\n/**\n * [groupToDict description]\n * @param  {[type]} aFrame  [description]\n * @param  {[type]} colName [description]\n * @param  {[type]} cmp     [description]\n * @param  {[type]} mapFn   [description]\n * @return {[type]}         [description]\n */\nexport default function groupToDict(aFrame, colName, cmp,mapFn) {\n\taFrame = haveFrame(aFrame);\n\tlet ix = getColIx(aFrame, colName);\n\tmapFn = mapFn || identity;\n\tlet dict = new MultiDict();\n\taFrame.data.forEach(row => dict.set(mapFn(row[ix]), row));\n\tlet arr = Object.keys(dict.dict).map(key => [key, new Frame( dict.dict[key], aFrame.columns, ''+key)]);\n\treturn zipToDict(arr);\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/dict/utils/groupToDict.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 207,
    "kind": "function",
    "name": "groupToDict",
    "memberof": "src/dict/utils/groupToDict.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dict/utils/groupToDict.js~groupToDict",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/dict/utils/groupToDict.js",
    "importStyle": "groupToDict",
    "description": "[groupToDict description]",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "colName",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "cmp",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "mapFn",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 208,
    "kind": "file",
    "name": "src/dict/utils/index.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nexport * from './MultiDict';\nexport * from './MultiDictSet';\nimport _zipTo from './zipTo';\nexport const zipTo = _zipTo;\n\nexport * from './Accum';\nexport * from './SumDict';\nimport _groupByToDict from './groupByToDict';\nexport const groupByToDict = _groupByToDict;\n\nimport _groupToDict from './groupToDict';\nexport const groupToDict = _groupToDict;\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/dict/utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 209,
    "kind": "variable",
    "name": "zipTo",
    "memberof": "src/dict/utils/index.js",
    "static": true,
    "longname": "src/dict/utils/index.js~zipTo",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/dict/utils/index.js",
    "importStyle": "{zipTo}",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 210,
    "kind": "variable",
    "name": "groupByToDict",
    "memberof": "src/dict/utils/index.js",
    "static": true,
    "longname": "src/dict/utils/index.js~groupByToDict",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/dict/utils/index.js",
    "importStyle": "{groupByToDict}",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 211,
    "kind": "variable",
    "name": "groupToDict",
    "memberof": "src/dict/utils/index.js",
    "static": true,
    "longname": "src/dict/utils/index.js~groupToDict",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/dict/utils/index.js",
    "importStyle": "{groupToDict}",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 212,
    "kind": "file",
    "name": "src/dict/utils/MultiDict.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport haveFrame from '../../frame/haveFrame';\n/**\n *  Support one => many mapping\n */\nexport class MultiDict {\n\tconstructor() {\n\t\tthis._dict = {};\n\t}\n\n\t_elem() { return []; }\n\t/**\n\t * [put description]\n\t * @param  {String} key   [description]\n\t * @param  {object} value [description]\n\t * @return {this}       [description]\n\t */\n\tset(key,value) {\n\t\tlet list = this._dict[key];\n\t\tif( !list ) {\n\t\t\tlist = this._elem();\n\t\t\tthis._dict[key] = list;\n\t\t}\n\t\tlist.push(value);\n\t\treturn this;\n\t}\n\t/**\n\t * [add description]\n\t * @param {[type]} key   [description]\n\t * @param {[type]} value [description]\n\t */\n\tadd(key,value) {\n\t\treturn this.set(key,value);\n\t}\n\n\t/**\n\t * [put description]\n\t * @param  {[type]} key   [description]\n\t * @param  {[type]} value [description]\n\t * @return {[type]}       [description]\n\t */\n\tput(key,value) {\n\t\treturn this.set(key,value);\n\t}\n\n\t/**\n\t * [get description]\n\t * @param  {[type]} key [description]\n\t * @return {[type]}     [description]\n\t */\n\tget(key) { return this._dict[key]; }\n\tgetA(key) { return this._dict[key]; }\n\n\t/**\n\t * [dict description]\n\t * @return {[type]} [description]\n\t */\n\tget dict() { return this._dict; }\n\n\t/**\n\t * [description]\n\t * @param  {[type]} k [description]\n\t * @return {[type]}   [description]\n\t */\n\tget zip()  { return Object.keys(this.dict).map(k => [k, this._dict[k]]); }\n\n\t_toHtml() {\n\t\tlet keys = Object.keys(this.dict);\n\t\tkeys = keys.slice(0, Math.min(100,keys.length));\n\t\tlet head = '<table><tr><td>Key</td><td>Value</td></tr>';\n\t\tlet body = keys.map(k => '<tr><td>' +htmlEscape(k)+'</td><td>'+htmlEscape(this.dict[k].join(', '))+'</td></tr>');\n\t\tlet end = '</table>';\n\t\treturn head+body+end;\n\t}\n}\n\nfunction htmlEscape(str) {\n\treturn str\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/'/g, '&quot;')\n\t\t.replace(/'/g, '&#39;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;');\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/dict/utils/MultiDict.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 213,
    "kind": "class",
    "name": "MultiDict",
    "memberof": "src/dict/utils/MultiDict.js",
    "static": true,
    "longname": "src/dict/utils/MultiDict.js~MultiDict",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/dict/utils/MultiDict.js",
    "importStyle": "{MultiDict}",
    "description": " Support one => many mapping",
    "lineNumber": 21,
    "interface": false
  },
  {
    "__docId__": 214,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/dict/utils/MultiDict.js~MultiDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDict.js~MultiDict#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 215,
    "kind": "member",
    "name": "_dict",
    "memberof": "src/dict/utils/MultiDict.js~MultiDict",
    "static": false,
    "longname": "src/dict/utils/MultiDict.js~MultiDict#_dict",
    "access": "private",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 216,
    "kind": "method",
    "name": "_elem",
    "memberof": "src/dict/utils/MultiDict.js~MultiDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDict.js~MultiDict#_elem",
    "access": "private",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 217,
    "kind": "method",
    "name": "set",
    "memberof": "src/dict/utils/MultiDict.js~MultiDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDict.js~MultiDict#set",
    "access": "public",
    "description": "[put description]",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 218,
    "kind": "method",
    "name": "add",
    "memberof": "src/dict/utils/MultiDict.js~MultiDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDict.js~MultiDict#add",
    "access": "public",
    "description": "[add description]",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "[description]"
      }
    ]
  },
  {
    "__docId__": 219,
    "kind": "method",
    "name": "put",
    "memberof": "src/dict/utils/MultiDict.js~MultiDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDict.js~MultiDict#put",
    "access": "public",
    "description": "[put description]",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 220,
    "kind": "method",
    "name": "get",
    "memberof": "src/dict/utils/MultiDict.js~MultiDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDict.js~MultiDict#get",
    "access": "public",
    "description": "[get description]",
    "lineNumber": 66,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 221,
    "kind": "method",
    "name": "getA",
    "memberof": "src/dict/utils/MultiDict.js~MultiDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDict.js~MultiDict#getA",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "undocument": true
  },
  {
    "__docId__": 222,
    "kind": "get",
    "name": "dict",
    "memberof": "src/dict/utils/MultiDict.js~MultiDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDict.js~MultiDict#dict",
    "access": "public",
    "description": "[dict description]",
    "lineNumber": 73,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 223,
    "kind": "get",
    "name": "zip",
    "memberof": "src/dict/utils/MultiDict.js~MultiDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDict.js~MultiDict#zip",
    "access": "public",
    "description": "[description]",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "k",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 224,
    "kind": "method",
    "name": "_toHtml",
    "memberof": "src/dict/utils/MultiDict.js~MultiDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDict.js~MultiDict#_toHtml",
    "access": "private",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 225,
    "kind": "function",
    "name": "htmlEscape",
    "memberof": "src/dict/utils/MultiDict.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dict/utils/MultiDict.js~htmlEscape",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/dict/utils/MultiDict.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 226,
    "kind": "file",
    "name": "src/dict/utils/MultiDictSet.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport {MultiDict} from './MultiDict'\n/**\n * \n */\nexport class MultiDictSet extends MultiDict {\n\t/**\n\t * [put description]\n\t * @param  {String} key   [description]\n\t * @param  {object} value [description]\n\t * @return {this}       [description]\n\t */\n\tput(key,value) {\n\t\tlet list = this._dict[key];\n\t\tif( !list ) {\n\t\t\tlist = new Set();\n\t\t\tthis._dict[key] = list;\n\t\t}\n\t\tlist.add(value);\n\t\treturn this;\n\t}\n\n\t/**\n\t * [getA description]\n\t * @param  {[type]} key [description]\n\t * @return {[type]}     [description]\n\t */\n\tgetA(key) { return Array.from(this._dict[key]); }\n\n\t/**\n\t * [zip description]\n\t * @return {[type]} [description]\n\t */\n\tget zip() {\n\t\treturn Object.keys(this.dict).map(k => [k, this.getA(k)]);\n\t}\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/dict/utils/MultiDictSet.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 227,
    "kind": "class",
    "name": "MultiDictSet",
    "memberof": "src/dict/utils/MultiDictSet.js",
    "static": true,
    "longname": "src/dict/utils/MultiDictSet.js~MultiDictSet",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/dict/utils/MultiDictSet.js",
    "importStyle": "{MultiDictSet}",
    "description": "",
    "lineNumber": 21,
    "interface": false,
    "extends": [
      "src/dict/utils/MultiDict.js~MultiDict"
    ]
  },
  {
    "__docId__": 228,
    "kind": "method",
    "name": "put",
    "memberof": "src/dict/utils/MultiDictSet.js~MultiDictSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDictSet.js~MultiDictSet#put",
    "access": "public",
    "description": "[put description]",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "this"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 229,
    "kind": "method",
    "name": "getA",
    "memberof": "src/dict/utils/MultiDictSet.js~MultiDictSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDictSet.js~MultiDictSet#getA",
    "access": "public",
    "description": "[getA description]",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 230,
    "kind": "get",
    "name": "zip",
    "memberof": "src/dict/utils/MultiDictSet.js~MultiDictSet",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/MultiDictSet.js~MultiDictSet#zip",
    "access": "public",
    "description": "[zip description]",
    "lineNumber": 49,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 231,
    "kind": "file",
    "name": "src/dict/utils/SumDict.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n *  Dictionary to count the number of key value pairs,\n *  Note for any key we only support one value, if \n */\nexport class SumDict {\n\tconstructor(klass,dflt) {\n\t\tthis.klass = klass || Accum;\n\t\tthis._dict = {};\n\t\tthis._dflt = dflt;\n\t}\n\n\tset(key,value) {\n\t\tlet acc = this._dict[key];\n\t\tif( !acc ) {\n\t\t\tacc = new this.klass();\n\t\t\tthis._dict[key] = acc;\n\t\t}\n\t\tacc.add(value===undefined?this._dflt:value);\n\t\treturn this;\n\t}\n\n\tadd(key,value) {return this.set(key,value); }\n\tput(key,value) {return this.set(key,value); }\n\tget(key) {return this._dict[key]; }\n\n\tasZip() {\n\t\tlet keys = Object.keys(this._dict);\n\t\treturn flatten(\n\t\t\tkeys.map(k => {\n\t\t\t\tlet acc = this._dict[k];\n\t\t\t\tif( !acc ) return [[k, undefined]];\n\t\t\t\t// O: KEEP\n\t\t\t\treturn acc.map((val) =>[k, val]);\n\t\t\t} ) ,1);\n\t}\n\n\tget dict() { return this._dict; }\n}\n/**\n * create a dict from zip array - an array of key value pairs\n * @param  {[[key,value]]} aZipList [description]\n * @return {SumDict}          [description]\n */\nSumDict.fromZip = function(aZipList) {\n\tlet len = aZipList.length;\n\tlet dict = new SumDict();\n\tfor(let i=0; i< len; i++) {\n\t  let v = aZipList[i];\n\t  dict.put(v[0], v[1]);\n\t}\n\treturn dict;\n};\n\nSumDict.count = function(list) {\n\tlet _l;\n\tif( !Array.isArray(list) && typeof list === 'function') _l = list();\n\telse _l = list;\n\tif( _l === undefined || _l.length === undefined || _l.length === 0 ) return [];\n\t\n\tlet dict = _l.reduce((dict,v) => _dictAdd(dict,v), new Map());\n\n\tlet l = []/*new Array(list.length)*/, i = 0;\n\t//dict.forEach((v,k) => l[i++] = [k,v])\n\tdict.forEach((v,k) => l.push([k,v]));\n\t//l.length = i;\n\treturn l;\n};\n\n\n\nfunction _dictAdd(dict,v) {\n\tlet vx;\n\treturn dict.set(v, ((vx = dict.get(v)) === undefined ? 0 : vx)+1);\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/dict/utils/SumDict.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 232,
    "kind": "class",
    "name": "SumDict",
    "memberof": "src/dict/utils/SumDict.js",
    "static": true,
    "longname": "src/dict/utils/SumDict.js~SumDict",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/dict/utils/SumDict.js",
    "importStyle": "{SumDict}",
    "description": " Dictionary to count the number of key value pairs,\n Note for any key we only support one value, if ",
    "lineNumber": 21,
    "interface": false
  },
  {
    "__docId__": 233,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/dict/utils/SumDict.js~SumDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/SumDict.js~SumDict#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true
  },
  {
    "__docId__": 234,
    "kind": "member",
    "name": "klass",
    "memberof": "src/dict/utils/SumDict.js~SumDict",
    "static": false,
    "longname": "src/dict/utils/SumDict.js~SumDict#klass",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 235,
    "kind": "member",
    "name": "_dict",
    "memberof": "src/dict/utils/SumDict.js~SumDict",
    "static": false,
    "longname": "src/dict/utils/SumDict.js~SumDict#_dict",
    "access": "private",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 236,
    "kind": "member",
    "name": "_dflt",
    "memberof": "src/dict/utils/SumDict.js~SumDict",
    "static": false,
    "longname": "src/dict/utils/SumDict.js~SumDict#_dflt",
    "access": "private",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 237,
    "kind": "method",
    "name": "set",
    "memberof": "src/dict/utils/SumDict.js~SumDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/SumDict.js~SumDict#set",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true
  },
  {
    "__docId__": 238,
    "kind": "method",
    "name": "add",
    "memberof": "src/dict/utils/SumDict.js~SumDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/SumDict.js~SumDict#add",
    "access": "public",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 239,
    "kind": "method",
    "name": "put",
    "memberof": "src/dict/utils/SumDict.js~SumDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/SumDict.js~SumDict#put",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 240,
    "kind": "method",
    "name": "get",
    "memberof": "src/dict/utils/SumDict.js~SumDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/SumDict.js~SumDict#get",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "asZip",
    "memberof": "src/dict/utils/SumDict.js~SumDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/SumDict.js~SumDict#asZip",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 242,
    "kind": "get",
    "name": "dict",
    "memberof": "src/dict/utils/SumDict.js~SumDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/dict/utils/SumDict.js~SumDict#dict",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "undocument": true
  },
  {
    "__docId__": 243,
    "kind": "function",
    "name": "fromZip",
    "memberof": "src/dict/utils/SumDict.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dict/utils/SumDict.js~fromZip",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/dict/utils/SumDict.js",
    "importStyle": null,
    "description": "create a dict from zip array - an array of key value pairs",
    "lineNumber": 60,
    "params": [
      {
        "nullable": null,
        "types": [
          "[[key,value]]"
        ],
        "spread": false,
        "optional": false,
        "name": "aZipList",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "SumDict"
      ],
      "spread": false,
      "description": "[description]"
    },
    "ignore": true
  },
  {
    "__docId__": 244,
    "kind": "function",
    "name": "count",
    "memberof": "src/dict/utils/SumDict.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dict/utils/SumDict.js~count",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/dict/utils/SumDict.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 245,
    "kind": "function",
    "name": "_dictAdd",
    "memberof": "src/dict/utils/SumDict.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dict/utils/SumDict.js~_dictAdd",
    "access": "private",
    "export": false,
    "importPath": "nurulc.github.io/src/dict/utils/SumDict.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 87,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 246,
    "kind": "file",
    "name": "src/dict/utils/zipTo.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nexport default function zipTo(aDictType){\n\treturn function(aListOfPairs) {\n\t\treturn aListOfPairs.reduce( (dict, [k,v]) => aDictType.put(k,v), aDictType);\n\t};\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/dict/utils/zipTo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 247,
    "kind": "function",
    "name": "zipTo",
    "memberof": "src/dict/utils/zipTo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/dict/utils/zipTo.js~zipTo",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/dict/utils/zipTo.js",
    "importStyle": "zipTo",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 248,
    "kind": "file",
    "name": "src/frame/arrToCol.js",
    "content": "// jshint undef:true\r\n// jshint unused:true\r\n/*\r\nCopyright (c) 2020, Nurul Choudhury\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted, provided that the above\r\ncopyright notice and this permission notice appear in all copies.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n/**\r\n * [arrToCol description]\r\n * @param  {[type]} arr [description]\r\n * @return {[type]}     [description]\r\n */\r\nexport default function arrToCol(arr) {\r\n\treturn arr.map(x => [x] );\r\n}",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/arrToCol.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 249,
    "kind": "function",
    "name": "arrToCol",
    "memberof": "src/frame/arrToCol.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/arrToCol.js~arrToCol",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/arrToCol.js",
    "importStyle": "arrToCol",
    "description": "[arrToCol description]",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 250,
    "kind": "file",
    "name": "src/frame/BaseFrame.js",
    "content": "// jshint undef:true\r\n// jshint unused:true\r\n/*\r\nCopyright (c) 2020, Nurul Choudhury\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted, provided that the above\r\ncopyright notice and this permission notice appear in all copies.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nimport { vecAdd, arrHash} from '../array';\r\n/**\r\n *  Used to from the base class for a Frame,\r\n *  This is added to break circular import reference from hasFrame(aFrame) function\r\n *  Originally hasFrame imported frame and frame imported hasFrame. In order to break taht up\r\n *  we now include BaseFrame from both Frame and hasFrame.\r\n *  \r\n */\r\nexport default class BaseFrame {\r\n\t/**\r\n\t * [constructor description]\r\n\t * @param  {[type]} data    [description]\r\n\t * @param  {[type]} columns [description]\r\n\t * @param  {[type]} name    [description]\r\n\t * @param  {[type]} keyFunc [description]\r\n\t * @return {[type]}         [description]\r\n\t */\r\n\tconstructor(data,columns,name,keyFunc) {\r\n\t\tthis.keyFunc = keyFunc || this._getKey;\r\n\t\tthis.data = data||[];\r\n\t\tthis._columns = columns||[];\r\n\t\tthis._name = name || 'frame';\r\n\t}\r\n\r\n\t/**\r\n\t * Create a new frame based of this frame but with new data\r\n\t * @param {[[string]]} d    new data for the frame (but with the same columns\r\n\t * @param {String} name optional ne name\r\n\t */\r\n\tsetData(d,name) {\r\n\t\treturn new this.constructor(d, this.columns, name || this.name, this.keyFunc);\r\n\t}\r\n\r\n\t_getKey(i) {\r\n\t\treturn this.data[i][0];\r\n\t}\r\n\r\n\t/**\r\n\t * [getKey description]\r\n\t * @param  {[type]} i [description]\r\n\t * @return {[type]}   [description]\r\n\t */\r\n\tgetKey(i) {\r\n\t\treturn this.keyFunc(i);\r\n\t}\r\n\r\n\t/**\r\n\t * [columns description]\r\n\t * @return {[type]} [description]\r\n\t */\r\n\tget columns() { return this._columns||EMPTY_ARRAY; }\r\n\tset columns(columns) {\r\n\t\treturn new this.constructor(this.data, this.columns, this.name, this.keyFunc);\r\n\t}\r\n\tget length() { return (this.data || EMPTY_ARRAY).length; }\r\n\tget name() { return this._name; }\r\n\tset name(aName) {\r\n\t\treturn new this.constructor(this.data, this.columns, aName, this.keyFunc);\r\n\t}\r\n\tget hash() {\r\n\t\tif( this._hash !== -1 ) return this._hash;\r\n\t\treturn this._hash = this.data.reduce((h,arr) => (h*17|0)+arrHash(arr), 0);\r\n\t}\r\n\r\n\tequal(aFrame) {\r\n\t\tif(!aFrame) return false;\r\n\t\tif(this === aFrame) return true;\r\n\t\tif(this.length !== aFrame.length ) return false;\r\n\t\tif(!arrEqual(this.columns, aFrame.columns)) return false;\r\n\t\tlet len = this.length;\r\n\t\tlet d1 = this.data, d2 = aFrame.data;\r\n\t\tfor(let i=0; i<len; i++) {\r\n\t\t\tlet a1 = d1[i], a2 = d2[i];\r\n\t\t\tif( a1 === a2 ) continue;\r\n\t\t\tlet ln = a1.length;\r\n\t\t\tif( ln !== a2.length ) return false;\r\n\t\t\t\r\n\t\t\tfor(let j=0; j<ln; j++) {\r\n\t\t\t\tif( a1[j] !== a2[j]) return false;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true;\r\n\t}\r\n\t/**\r\n\t * [colIx description]\r\n\t * @param  {[type]} name [description]\r\n\t * @return {[type]}      [description]\r\n\t */\r\n\tcolIx(name) {\r\n\t\treturn this._columns.indexOf(name);\r\n\t}\r\n\r\n\r\n\r\n\t/**\r\n\t * Simple version of project to create a frame with only one column\r\n\t * @param  {[type]} colName [description]\r\n\t * @return {[type]}         [description]\r\n\t */\r\n\tcolumn(colName) {\r\n\t\tconst ix = this._columns.indexOf(colName);\r\n\t\tif( ix == -1 ) return [];\r\n\t\treturn new this.constructor(this.data.map( v => [v[ix]]), [this._columns[ix]], this._name, this.keyFunc);\r\n\t}\r\n\r\n\t/**\r\n\t * [rawColumn description]\r\n\t * @param  {[type]} colName [description]\r\n\t * @return {[type]}         [description]\r\n\t */\r\n\trawColumn(colName) {\r\n\t\tconst ix = this._columns.indexOf(colName);\r\n\t\tif( ix == -1 ) return [];\r\n\t\treturn this.data.map( v => v[ix]);\r\n\t}\r\n\r\n\t/**\r\n\t * [row description]\r\n\t * @param  {[type]} ix [description]\r\n\t * @return {[type]}    [description]\r\n\t */\r\n\trow(ix) { return this.data[ix]; }\r\n\r\n\r\n\t/**\r\n\t * Similar functionality to array slice\r\n\t * @param  {[type]} first [description]\r\n\t * @param  {[type]} last  [description]\r\n\t * @return {[type]}       [description]\r\n\t */\r\n\tslice(first,last) {\r\n\t\treturn new this.constructor(this.data.slice(first,last), this.columns, this._name, this.keyFunc);\r\n\t}\r\n\r\n\t/**\r\n\t * [numericColumns description]\r\n\t * @param  {[type]} aFrame [description]\r\n\t * @return {[type]}        [description]\r\n\t */\r\n\tnumericColumns(aFrame) {\r\n\t\tlet threshold = Math.trunc(this.length*0.9);\r\n\t\tlet a = this.data.map(row => row.map(v => (isNum(v))?1:(v === '' || v === undefined )? 0.5 : 0));\r\n\t\tlet sums = a.reduce(vecAdd,undefined); \r\n\t\treturn this.columns.map((c,i) => (sums[i]>threshold) ? c :undefined).filter(x => x);\r\n\t}\r\n \r\n\t/**\r\n\t * [asStrList description]\r\n\t * @return {[type]} [description]\r\n\t */\r\n\tasStrList() {\r\n\t\treturn this.data.map(x => x.join('\\t'));\r\n\t}\r\n\r\n\t/**\r\n\t * [description]\r\n\t * @param  {function} fn \ttakes function(row:array, ix, array)\r\n\t * @return {[type]}     [description]\r\n\t */\r\n\tforEachRaw(fn) { this.data.forEach( (row,ix,arr) => fn(row,ix,arr)); }\r\n\r\n\t/**\r\n\t * [description]\r\n\t * @param  {Function} fn       [description]\r\n\t * @param  {[string]}   newCols [description]\r\n\t * @return {Frame}            [description]\r\n\t */\r\n\t\r\n\tmapRaw(fn,newCols) { return new this.constructor(this.data.map(fn), newCols || this._columns, this._name, this.keyFunc); }\r\n\t\r\n\t/**\r\n\t * [description]\r\n\t * @param  {[type]} fn \t[description]\r\n\t * @return {[type]}     [description]\r\n\t */\r\n\tfilterRaw(fn) { return new this.constructor(this.data.filter(fn),this._columns, this._name, this.keyFunc); }\r\n\r\n\t/**\r\n\t * [description]\r\n\t * @param  {Function} fn   [description]\r\n\t * @param  {[type]}   ini  [description]\r\n\t * @return {[type]}        [description]\r\n\t */\r\n\treduceRaw(fn, ini) { return this.data.reduce( fn, ini); }\r\n\t\r\n\t\r\n}",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/BaseFrame.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 251,
    "kind": "class",
    "name": "BaseFrame",
    "memberof": "src/frame/BaseFrame.js",
    "static": true,
    "longname": "src/frame/BaseFrame.js~BaseFrame",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/BaseFrame.js",
    "importStyle": "BaseFrame",
    "description": " Used to from the base class for a Frame,\n This is added to break circular import reference from hasFrame(aFrame) function\n Originally hasFrame imported frame and frame imported hasFrame. In order to break taht up\n we now include BaseFrame from both Frame and hasFrame.\n ",
    "lineNumber": 25,
    "interface": false
  },
  {
    "__docId__": 252,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#constructor",
    "access": "public",
    "description": "[constructor description]",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "columns",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "keyFunc",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 253,
    "kind": "member",
    "name": "keyFunc",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#keyFunc",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 254,
    "kind": "member",
    "name": "data",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#data",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 255,
    "kind": "member",
    "name": "_columns",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#_columns",
    "access": "private",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 256,
    "kind": "member",
    "name": "_name",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#_name",
    "access": "private",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 257,
    "kind": "method",
    "name": "setData",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#setData",
    "access": "public",
    "description": "Create a new frame based of this frame but with new data",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "[[string]]"
        ],
        "spread": false,
        "optional": false,
        "name": "d",
        "description": "new data for the frame (but with the same columns"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "optional ne name"
      }
    ]
  },
  {
    "__docId__": 258,
    "kind": "method",
    "name": "_getKey",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#_getKey",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 259,
    "kind": "method",
    "name": "getKey",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#getKey",
    "access": "public",
    "description": "[getKey description]",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "i",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 260,
    "kind": "get",
    "name": "columns",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#columns",
    "access": "public",
    "description": "[columns description]",
    "lineNumber": 67,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 261,
    "kind": "set",
    "name": "columns",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#columns",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true
  },
  {
    "__docId__": 262,
    "kind": "get",
    "name": "length",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#length",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true
  },
  {
    "__docId__": 263,
    "kind": "get",
    "name": "name",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#name",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "undocument": true
  },
  {
    "__docId__": 264,
    "kind": "set",
    "name": "name",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#name",
    "access": "public",
    "description": null,
    "lineNumber": 73,
    "undocument": true
  },
  {
    "__docId__": 265,
    "kind": "get",
    "name": "hash",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#hash",
    "access": "public",
    "description": null,
    "lineNumber": 76,
    "undocument": true
  },
  {
    "__docId__": 266,
    "kind": "method",
    "name": "equal",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#equal",
    "access": "public",
    "description": null,
    "lineNumber": 81,
    "undocument": true
  },
  {
    "__docId__": 267,
    "kind": "method",
    "name": "colIx",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#colIx",
    "access": "public",
    "description": "[colIx description]",
    "lineNumber": 105,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 268,
    "kind": "method",
    "name": "column",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#column",
    "access": "public",
    "description": "Simple version of project to create a frame with only one column",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "colName",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 269,
    "kind": "method",
    "name": "rawColumn",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#rawColumn",
    "access": "public",
    "description": "[rawColumn description]",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "colName",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 270,
    "kind": "method",
    "name": "row",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#row",
    "access": "public",
    "description": "[row description]",
    "lineNumber": 138,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "ix",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "slice",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#slice",
    "access": "public",
    "description": "Similar functionality to array slice",
    "lineNumber": 147,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "first",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "last",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "numericColumns",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#numericColumns",
    "access": "public",
    "description": "[numericColumns description]",
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 273,
    "kind": "method",
    "name": "asStrList",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#asStrList",
    "access": "public",
    "description": "[asStrList description]",
    "lineNumber": 167,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "forEachRaw",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#forEachRaw",
    "access": "public",
    "description": "[description]",
    "lineNumber": 176,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "takes function(row:array, ix, array)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 275,
    "kind": "method",
    "name": "mapRaw",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#mapRaw",
    "access": "public",
    "description": "[description]",
    "lineNumber": 185,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "newCols",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Frame"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "filterRaw",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#filterRaw",
    "access": "public",
    "description": "[description]",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "reduceRaw",
    "memberof": "src/frame/BaseFrame.js~BaseFrame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/BaseFrame.js~BaseFrame#reduceRaw",
    "access": "public",
    "description": "[description]",
    "lineNumber": 200,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "ini",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 278,
    "kind": "file",
    "name": "src/frame/frame-utils/frameCount.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport haveFrame from '../haveFrame';\nimport getColIx from '../getColIx';\n\n/**\n * [frameCount description]\n * @param  {Frme} aFrame   [description]\n * @param  {string} colName  [description]\n * @param  {function} convName function to convert a name to a new name\n * @return {[name, count]}     a two element array with the name and count\n */\nexport default function frameCount(aFrame, colName, convName) {\n\taFrame = haveFrame(aFrame);\n\tlet name = aFrame.name;\n\tlet ix = getColIx(aFrame,colName);\n\t\n\tlet sum = aFrame.data.reduce((s,row) => s+(row[ix]?1:0),0);\n\tif( convName ) return [convName(name), sum];\n\treturn [name, sum];\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/frame-utils/frameCount.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 279,
    "kind": "function",
    "name": "frameCount",
    "memberof": "src/frame/frame-utils/frameCount.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/frameCount.js~frameCount",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/frameCount.js",
    "importStyle": "frameCount",
    "description": "[frameCount description]",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frme"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "colName",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "convName",
        "description": "function to convert a name to a new name"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[name, count]"
      ],
      "spread": false,
      "description": "a two element array with the name and count"
    }
  },
  {
    "__docId__": 280,
    "kind": "file",
    "name": "src/frame/frame-utils/frameFromBuffer.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport {Frame} from '../frame';\nimport {dataSplit} from '../../string/csv';\n/**\n * default splitter is pipe seperated values\n * @param  {[type]} buffer    [description]\n * @param  {function} splitter    function to split a string representing a row to an array of strings\n * @param  {{ noConvert: boolen,name: string, Fr: SomeFrameClass}} options\n * @return {[type]}           [description]\n */\nexport default function frameFromBuffer(buffer,splitter,options={}) {\n    let {Fr, name, noConvert} = options;\n\tFr = Fr || Frame;\n\tlet arr = buffer.replace(/\\r/g, '').split('\\n').filter(s => s);\n\tlet columns = splitter(arr[0]);\n\tlet array = dataSplit(arr.splice(1),splitter);\n\t[columns, array] = cleanData(columns, array);\n\tvar newFrame = new Fr(array,columns,name);\n\tif(!noConvert) newFrame = newFrame.convertData();\n\treturn newFrame; \n}\n\nfunction cleanData(columns, array) {\n\tif( !hasNoEmptyElem(columns) ) throw new Error(\"Invalid frame column\");\n\tlet n = columns.length;\n\treturn [columns, array.map(_cleanData(n)).filter(s => s)];\n}\n\n\nfunction hasNoEmptyElem(arr, v) {\n\tif( arguments.length === 1 ){\n\t\tfor(let i=0; i< arr.length; i++) \n\t\t\tif(!arr[i]) return undefined;\n\t} else {\n\t\tfor(let i=0; i< arr.length; i++) \n\t\t\tif(arr[i] === v ) return undefined;\n\t}\n\treturn arr;\n}\n\nfunction arrRemUndef(arr) {\n\tfor(let i=0; i< arr.length; i++) \n\t\tif(arr[i] === undefined) return arr.filter(v => v !== undefined);\n\treturn arr;\n}\n\nfunction _cleanData(n) {\n\treturn arr => {\n\t\tarr = arrRemUndef(arr);\n\t\tif(n !== arr.length) {\n\t\t\tif(n > arr.length) {\n\t\t\t\tarr = arr.slice(0);\n\t\t\t\twhile(arr.length < n) arr.push('');\n\t\t\t} else {\n\t            if(n === arr.length) return arr;\n\t\t\t\tif(n < arr.length) return arr.slice(0,n);\n\t\t\t}\n\t\t}\n\t\treturn hasNoEmptyElem(arr, undefined);\n\t}\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/frame-utils/frameFromBuffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 281,
    "kind": "function",
    "name": "frameFromBuffer",
    "memberof": "src/frame/frame-utils/frameFromBuffer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/frameFromBuffer.js~frameFromBuffer",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/frameFromBuffer.js",
    "importStyle": "frameFromBuffer",
    "description": "default splitter is pipe seperated values",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "splitter",
        "description": "function to split a string representing a row to an array of strings"
      },
      {
        "nullable": null,
        "types": [
          "{ noConvert: boolen,name: string, Fr: SomeFrameClass}"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 282,
    "kind": "function",
    "name": "cleanData",
    "memberof": "src/frame/frame-utils/frameFromBuffer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/frameFromBuffer.js~cleanData",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame-utils/frameFromBuffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 283,
    "kind": "function",
    "name": "hasNoEmptyElem",
    "memberof": "src/frame/frame-utils/frameFromBuffer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/frameFromBuffer.js~hasNoEmptyElem",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame-utils/frameFromBuffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 45,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 284,
    "kind": "function",
    "name": "arrRemUndef",
    "memberof": "src/frame/frame-utils/frameFromBuffer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/frameFromBuffer.js~arrRemUndef",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame-utils/frameFromBuffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 56,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 285,
    "kind": "function",
    "name": "_cleanData",
    "memberof": "src/frame/frame-utils/frameFromBuffer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/frameFromBuffer.js~_cleanData",
    "access": "private",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame-utils/frameFromBuffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 286,
    "kind": "file",
    "name": "src/frame/frame-utils/frameSum.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport haveFrame from '../haveFrame';\nimport getColIx from '../getColIx';\n\n\n/**\n * [frameSum description]\n * @param  {Frme} aFrame   the frme to operate on\n * @param  {string} colName  name of the column to sum\n * @param  {function} convName optional function to convert a name to a new name\n * @param  {function} convValue optional function to conver the value\n * @return {[type]}           [description]\n */\nexport default function frameSum(aFrame, colName, convName, convValue) {\n\taFrame = haveFrame(aFrame);\n\tlet name = aFrame.name;\n\tlet ix = getColIx(aFrame,colName);\n\tlet sum = aFrame.data.reduce((s,row) => s+row[ix],0);\n\tlet nn = ( convName  ) ? convName(name) : name;\n\tlet nv = ( convValue ) ? convValue(sum) : sum;\n\treturn [nn, nv];\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/frame-utils/frameSum.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 287,
    "kind": "function",
    "name": "frameSum",
    "memberof": "src/frame/frame-utils/frameSum.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/frameSum.js~frameSum",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/frameSum.js",
    "importStyle": "frameSum",
    "description": "[frameSum description]",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frme"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "the frme to operate on"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "colName",
        "description": "name of the column to sum"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "convName",
        "description": "optional function to convert a name to a new name"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "convValue",
        "description": "optional function to conver the value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 288,
    "kind": "file",
    "name": "src/frame/frame-utils/frameToString.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport haveFrame from '../haveFrame';\n/**\n * [frameToString description]\n * @param  {[type]} aFrame [description]\n * @return {[type]}        [description]\n */\nexport default function frameToString(aFrame) {\n\taFrame = haveFrame(aFrame);\n\tlet headers = aFrame.columns.join('\\t');\n\tlet lines = aFrame.data.map( l => l.join('\\t'));\n\treturn headers+'\\n'+lines.join('\\n');\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/frame-utils/frameToString.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 289,
    "kind": "function",
    "name": "frameToString",
    "memberof": "src/frame/frame-utils/frameToString.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/frameToString.js~frameToString",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/frameToString.js",
    "importStyle": "frameToString",
    "description": "[frameToString description]",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 290,
    "kind": "file",
    "name": "src/frame/frame-utils/frameWithIndex.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n//\nimport haveFrame from '../haveFrame';\n/**\n * [frameWithIndex description]\n * @param  {Frame} aFrame The frame to add the index to\n * @param  {string} indexName Name of the index column\n * @param  {boolean} atEnd if true the index is placed after the last column, otherwise it is the first column\n * @return {Frame}        new frame with an index column (remove and previous index column)\n */\nexport default function frameWithIndex(aFrame, indexName='_INDEX', atEnd) {\n\tif( ! aFrame ) return new aFrame.constructor([],[]);\n\taFrame = haveFrame(aFrame);\n\tlet cols;\n\tif(atEnd) \tcols = [...aFrame.columns.filter(n => n !== indexName),indexName]\n\telse \t\tcols = ['_INDEX', ...aFrame.columns.filter(n => n !== indexName)]\n\treturn aFrame.project(cols, {[indexName]: (_,ro) => ro.__index$ });\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/frame-utils/frameWithIndex.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 291,
    "kind": "function",
    "name": "frameWithIndex",
    "memberof": "src/frame/frame-utils/frameWithIndex.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/frameWithIndex.js~frameWithIndex",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/frameWithIndex.js",
    "importStyle": "frameWithIndex",
    "description": "[frameWithIndex description]",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "The frame to add the index to"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "indexName",
        "description": "Name of the index column"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "atEnd",
        "description": "if true the index is placed after the last column, otherwise it is the first column"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Frame"
      ],
      "spread": false,
      "description": "new frame with an index column (remove and previous index column)"
    }
  },
  {
    "__docId__": 292,
    "kind": "file",
    "name": "src/frame/frame-utils/index.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nimport _frameFromBuffer from './frameFromBuffer';\nexport const frameFromBuffer = _frameFromBuffer;\n\nimport _frameWithIndex from './frameWithIndex';\nexport const frameWithIndex = _frameWithIndex;\n\nimport _frameSum from './frameSum';\nexport const frameSum = _frameSum;\n\nimport _frameCount from './frameCount';\nexport const frameCount = _frameCount;\n\nimport _transpose from './transpose';\nexport const transpose = _transpose;\n\nimport _frameToString from './frameToString';\nexport const frameToString = _frameToString;\n\nimport _unionFrame from './unionFrame';\nexport const unionFrame = _unionFrame;\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/frame-utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 293,
    "kind": "variable",
    "name": "frameFromBuffer",
    "memberof": "src/frame/frame-utils/index.js",
    "static": true,
    "longname": "src/frame/frame-utils/index.js~frameFromBuffer",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/index.js",
    "importStyle": "{frameFromBuffer}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 294,
    "kind": "variable",
    "name": "frameWithIndex",
    "memberof": "src/frame/frame-utils/index.js",
    "static": true,
    "longname": "src/frame/frame-utils/index.js~frameWithIndex",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/index.js",
    "importStyle": "{frameWithIndex}",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 295,
    "kind": "variable",
    "name": "frameSum",
    "memberof": "src/frame/frame-utils/index.js",
    "static": true,
    "longname": "src/frame/frame-utils/index.js~frameSum",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/index.js",
    "importStyle": "{frameSum}",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 296,
    "kind": "variable",
    "name": "frameCount",
    "memberof": "src/frame/frame-utils/index.js",
    "static": true,
    "longname": "src/frame/frame-utils/index.js~frameCount",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/index.js",
    "importStyle": "{frameCount}",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 297,
    "kind": "variable",
    "name": "transpose",
    "memberof": "src/frame/frame-utils/index.js",
    "static": true,
    "longname": "src/frame/frame-utils/index.js~transpose",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/index.js",
    "importStyle": "{transpose}",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 298,
    "kind": "variable",
    "name": "frameToString",
    "memberof": "src/frame/frame-utils/index.js",
    "static": true,
    "longname": "src/frame/frame-utils/index.js~frameToString",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/index.js",
    "importStyle": "{frameToString}",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 299,
    "kind": "variable",
    "name": "unionFrame",
    "memberof": "src/frame/frame-utils/index.js",
    "static": true,
    "longname": "src/frame/frame-utils/index.js~unionFrame",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/index.js",
    "importStyle": "{unionFrame}",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 300,
    "kind": "file",
    "name": "src/frame/frame-utils/transpose.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport haveFrame from '../haveFrame';\nimport {range} from '../../array'\n/**\n * [transpose description]\n * @param  {[type]} frame [description]\n * @param  {[type]} pivot [description]\n * @return {[type]}       [description]\n */\nexport default function transpose(frame, pivot) {\n    frame = haveFrame(frame);\n\tlet len = frame.length;\n\tlet columns = frame.columns;\n\tlet data = columns.filter(c => c !== pivot).map((c,ix) => [c, ...frame.rawColumn(c)]);\n\tlet newColumns = (columns.indexOf(pivot) !== -1? frame.rawColumn(pivot):range(len)).map(v => ''+v);\n\tif(pivot && newColumns.indexOf(pivot) !== -1) pivot = undefined;\n\tnewColumns = [(pivot?pivot:\"__ROW\"), ...newColumns];\n\treturn new frame.constructor(data, newColumns, 'transpose-'+(frame.name||'frame'));\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/frame-utils/transpose.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 301,
    "kind": "function",
    "name": "transpose",
    "memberof": "src/frame/frame-utils/transpose.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/transpose.js~transpose",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/transpose.js",
    "importStyle": "transpose",
    "description": "[transpose description]",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "frame",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "pivot",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 302,
    "kind": "file",
    "name": "src/frame/frame-utils/unionFrame.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nunionFrame.js\n\nimport haveFrame from '../haveFrame';\nimport colEQ from '../../array/arrEQ';\nimport colCMP from '../../array/arrCMP';\n\n// import getColIx from '../getColIx';\n// import {range} from '../../array';\n// =============================\n// tuned for frame array\n// \n\nfunction isSorted(arr /* may not be sorted sorted*/) {\n\tlet len=arr.length-1;\n\tfor(let i=0;i<len;i++){\n\t\tif(colCMP(arr[i],arr[i+1]) > 0 ){\n\t\t\treturn  undefined;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction _union2(sortedA, sortedB) {\n\tlet lenA = sortedA.length;\n\tlet lenB = sortedB.length;\n\tif( lenA === 0 ) return sortedB;\n\tif( lenB === 0 ) return sortedA;\n\t\t\n\tif( lenA === 1 && lenB === 1) {\n\t\tif(colEQ(sortedA[0], sortedB[0])) return sortedA;\n\t}\n\telse if( lenA === 1 ) return _union2(sortedB, sortedA);\n\telse if( lenB === 1 ) {\n\t\tlet b0 = sortedB[0];\n\t\tlet a0 = sortedA[0];\n\t\tif(lenA === 1 ) {\n\t\t\tif(colEQ(a0, b0)) return sortedA;\n\t\t} else {\n\t\t\tif( colEQ(b0,a0) ) return sortedA;\n\t\t\tif( colEQ(b0, sortedA[lenA-1])) return sortedA;\n\t\t}\n\t}\n\tlet res = [];\n\tlet j=0, i=0;\n\t//let iA = sortedA[0];\n\tfor(; i< lenA && j< lenB; i++) {\n\t\tlet iA = sortedA[i];\n\t\tdo {\n\t\t\tlet jB = sortedB[j]; \n\t\t\t//console.log(iA,jB);\n\t\t\tlet cmpRes = colCMP(iA,jB); // compare the values\n\t\t\tif(/*iA > jB*/ cmpRes > 0) {\n\t\t\t\tres.push(jB);\n\t\t\t\tj++;\n\t\t\t\tif( j >= lenB) {\n\t\t\t\t\tres.push(iA);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if( /*iA === jB*/ cmpRes === 0 ){\n\t\t\t\tres.push(iA); \n\t\t\t\tj++;\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tres.push(iA);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while( j < lenB );\n\t}\n\twhile(j<lenB) res.push(sortedB[j++]);\n\twhile(i<lenA) res.push(sortedA[i++]);\n\treturn res;   \n}\n\n\n\n\n /**\n * assumes the frames are sorted, if notSorted is true, then the frames are sorted first;\n * requirements:\n * 1. the frames must have the same columns names\n * 2. the sorting is done in columns order\n * 3. The original fames are not modified  * @param  {[type]} frame1    [description]\n  * @param  {[type]} frame1    [description]\n  * @param  {[type]} frame2    [description]\n  * @param  {[type]} notSorted [description]\n  * @return {[type]}           [description]\n  */\nexport default function unionFrame(frame1, frame2, notSorted) {\n\tframe1 = haveFrame(frame1);\n\tframe2 = haveFrame(frame2);\n\tif( !colEQ(frame1.columns, frame2.columns) ) throw new Error('frames do not have the same columns: ('+frame1.comums.join(',')+')  ('+frame2.comums.join(',')+')');\n\tlet data1 = frame1.data, data2 = frame2.data;\n\n\tif(notSorted) {\n\t\tif(!isSorted(data1)) data1 = data1.slice(0).sort(colCMP);\n\t\tif(!isSorted(data2)) data2 = data2.slice(0).sort(colCMP);\n\t}\n\tlet arr = _union2(data1, data2);\n\treturn new frame1.constructor(arr, frame1.columns, 'union');\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/frame-utils/unionFrame.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 303,
    "kind": "function",
    "name": "isSorted",
    "memberof": "src/frame/frame-utils/unionFrame.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/unionFrame.js~isSorted",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame-utils/unionFrame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 304,
    "kind": "function",
    "name": "_union2",
    "memberof": "src/frame/frame-utils/unionFrame.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/unionFrame.js~_union2",
    "access": "private",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame-utils/unionFrame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 305,
    "kind": "function",
    "name": "unionFrame",
    "memberof": "src/frame/frame-utils/unionFrame.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame-utils/unionFrame.js~unionFrame",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame-utils/unionFrame.js",
    "importStyle": "unionFrame",
    "description": "assumes the frames are sorted, if notSorted is true, then the frames are sorted first;\nrequirements:\n1. the frames must have the same columns names\n2. the sorting is done in columns order\n3. The original fames are not modified  * @param  {[type]} frame1    [description]",
    "lineNumber": 103,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "frame1",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "frame2",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "notSorted",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 306,
    "kind": "file",
    "name": "src/frame/frame.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n// Frame - similar to pandas in python\n\n//import { getFreq } from './frequency';\nimport BaseFrame from './BaseFrame';\nimport { createAccesClass } from './frame_element';\nimport sortFrameBy from './sortframe';\nimport {groupBy} from './groupby';\nimport frameWithIndex from './frame-utils/frameWithIndex';\nimport { arrRemove, arrDedup, newArray } from '../array';\nimport {EMPTY_ARRAY} from '../utils/constants';\nimport {K,isA, isEmpty} from '../utils';\nimport {toNumber} from '../utils/sort-helper';\nimport {innerJoin, leftJoin, outerJoin} from './join-utils';\n//import {combineCmp, cmpNumOrStrBy, toNumber, revCmp} from '../utils/sort-helper';\n//import genColIxFunc from './genColIxFunc';\nimport haveFrame from './haveFrame';\nimport arrEqual from '../array/arrEQ';\nimport toHTML from './toHTML';\n//import {arrayUniq, _makeUnique} from './makeUnique';\nimport {_makeUnique} from './makeUnique';\nimport {vecAdd,zipToDict} from '../array/arrayutils';\n\n\n\nconst isString = isA.str;\nconst isFunc = isA.func;\nconst arrOfStr = isA.arrayOf(isA.str);\nfunction isNum(v) {return v !== '' && !isNaN(+v); }\nfunction Identity(x) { return x; }\n\n\n\n// function objName(o) {\n// \tif(typeof o === 'object' ) return o.constructor.name;\n// \treturn typeof o;\n// }\n\n\n\n\n/**\n * This pure data structure represent a database like table\n * internally it consists of rows and columns representing a generalized 2d matrix\n * You can also think of this like a limited excel sheet.\n * No operation will visibly modify the Frame, all operations create a new frame\n * The class takes considerable effort to reuse as much of the internal data as possible\n * to minimize the amount of garbage collection that is necessary.\n *\n * It easily handles large number of rows and columns and has been tested to work well\n * with over 1 million rows with hundreds of columns. The real limitation is the amount of ram\n * available to Javascript.\n * \n */\nexport class Frame extends BaseFrame {\n\t/**\n\t * construct a new frame, Note once you have passed the data and column arguments, you no longer own those\n\t * two items and should not modify them or any of their content\n\t * \n\t * @param  {Array} data    the data fot the frame is an array of rows and each row is an array of strings or numbers\n\t * @param  {Array} columns array of strings representing the column names\n\t * @param  {[type]} name    optional name for the frame\n\t * @param  {[type]} keyFunc optional function that is present will return the column represinting the unique key\n\t */\n\tconstructor(data,columns,name,keyFunc) {\n\t\tsuper(data,columns,name,keyFunc);\n\t\tthis._unique = undefined;\n\t\tthis._sortCols = EMPTY_ARRAY;\n\t\tthis._row = undefined;\n\t\tthis.AccessClass = columns?createAccesClass(this._columns):undefined;\n\t\tthis.showLen = 400;\n\t\tthis._hash = -1;\n\t}\n\n\t\n\n\t// ======================================================================\n\t/**\n\t * [asObj description]\n\t * @param  {[type]} ix [description]\n\t * @return {[type]}    [description]\n\t */\n\tasObj(ix) { return this._rowObj(this.data[ix], ix); }\n\t\n\t/**\n\t * Get an array of row objects\n\t * @return {[RowObject]} array of row objects\n\t */\n\tget rows() { \n\t\tif(this._rows === undefined) \n\t\t\tthis._rows = this.asObjList();\n\t\treturn this._rows; \n\t}\n\n\n\n\t/**\n\t * Convert several columns into a single column, \n\t *   the elements rae converted to theeir string representation\n\t *\n\t *   e.g aFrame.columns = ['name','street','city','state','zip']\n\t *     but we want to convert it into a ['name', 'address'] \n\t *     so: ['street','city','state','zip'] => ['address']\n\t *\n\t *   newFrame = aFrame.mergeCols(null, ['street','city','state','zip'], 'address',  \", \");\n\t * \n\t * @param  {array<string>} cols         columns to keep (may ne null or undefined)\n\t * @param  {array<string>} someColsToMerge     [description]\n\t * @param  {String} newNameForMergerCol [description]\n\t * @param  {string|function} sepOrMergeFunc      [description]\n\t * @return {Frame}                     [description]\n\t */\n\tmergeCols(cols, someColsToMerge, newNameForMergerCol, sepOrMergeFunc) {\n\t\t\n\t\tif( !cols || cols.length === 0) {\n\t\t\tcols = arrRemove(this.columns, someColsToMerge);\n\t\t}\n\t\tsepOrMergeFunc = sepOrMergeFunc === undefined?',':sepOrMergeFunc;\n\t\tlet mergeFunc = isString(sepOrMergeFunc)? (arr => arr.join(sepOrMergeFunc)) : sepOrMergeFunc;\n\t\tif( !isFunc(mergeFunc)) throw new Error('Merge function of seperator expected');\n\t\tlet nf = this.project(cols);\n\t\tlet mergeCols = this.project(someColsToMerge);\n\t\t\n\t\treturn new Frame( \n\t\t\tnf.data.map((row,ix) => row.concat(joinColsAt(ix)) ),\t\n\t\t\tcols.concat([newNameForMergerCol]),\n\t\t\tthis._name, \n\t\t\tthis.keyFunc );\n\t\t// =======\n\t\tfunction joinColsAt(ix) {\n\t\t\treturn [mergeFunc(mergeCols.data[ix].filter(x => x))];\n\t\t}\n\t}\n\n\t/**\n\t * [asObjList description]\n\t * @return {[type]} [description]\n\t */\n\tasObjList() {\n\t\treturn this.data.map((x,i) => this._rowObj(x,i));\n\t}\n\t/**\n\t * _rowObj This is an code efficient mathod of accessing the element of the 'rowLikeArray' \n\t * using the columns names of the frame. The RowElement created is a facade to the rowLikeArray,\n\t * it does not actuall copy the elements of the array to itself. It is just a convinient way\n\t * of retrieving the elements of the array by name.\n\t *\n\t * e.g. if the this.columns : ['name', 'age', 'sex']\n\t *\n\t * let arr = ['Jane', 21, 'Female'];\n\t * let ro = this._rowObj(arr,5);\n\t *\n\t * ro.sex   is the same as arr[2] == 'Female'\n\t * ro.name  === arr[0]\n\t * ro._index$ === 5\n\t *\n\t * Finally:\n\t * arr[2] = 'Male';\n\t * ro.sex === 'Male'\n\t * \n\t * @param  {row} rowLikeArray array representing the row, this array should have the same length as the rows in the frame\n\t * @param  {int32} ix row number\n\t * @return {RowObject}      row object representing the element\n\t */\n\t_rowObj(rowLikeArray,ix) {\n\t\treturn new this.AccessClass(rowLikeArray,ix);\n\t}\n\n\t/**\n\t * withIndex add an index column to the befining of the frame or at the end of the frame\n\t * @param  {boolean} indexName Name of the index defaults to _INDEX\n\t * @param  {boolean} atEnd if true the index is placed on the last column, otherwise it is the first column\n\t * @return {[type]} [description]\n\t */\n\twithIndex(indexName='_INDEX',atEnd) {\n\t\treturn frameWithIndex(this,indexName,atEnd);\n\t}\n\n\n\t/**\n\t * find a row using the test function fn. The test function recieves a row ia s RowObject facade, see _rowObj method.\n\t * @param  {Function} fn function with a test criterion for the find operation \n\t * @return {row_object}      undefined if nothing found or a RowObject for the row matching the test function\n\t */\n\tfind(fn) {\n\t\tlet row = this._rowObj();\n\t\tlet v = this.data.find((x,i) => fn(row.__unsafeSet(x,i),i));\n\t\treturn v ? this._rowObj(v): undefined;\n\t}\n\n\n\t/**\n\t * [description]\n\t * @param  {function} fn\tf(rowObject, )\n\t * @return {Array}     [description]\n\t */\n\tmap(fn) { return this.mapF(fn); }\n\n\t/**\n\t * Similar to Array.map\n\t * @param  {function} fn\ttakes fn(rowObject, index, this.data )\n\t * @return {Array}     [description]\n\t */\n\tmapF(fn) { \n\t\tlet ro = this._rowObj();\n\t\treturn this.data.map((row,i,arr) => fn(ro._unsafeSet(row,i),i,arr)); \n\t}\t\n\n\t/**\n\t * Similar to arry reduce except it works on frames\n\t * @param  {function} fn   reduce function (acc:T, r:RowObject, index, array)\n\t * @param  {T}   ini  initial value  of accumulator type T\n\t * @return {T}        return the accumulator\n\t */\n\treduce(fn, ini) { return this.data.reduce( (acc, x, ix, arr) => fn(acc, this._rowObj(x,ix), ix, arr), ini); }\n\t\n\t/**\n\t * Concatinate frames and return a new frame (does not modify any of the input frames)\n\t * @param  {...Frame} frames list of frames\n\t * @return {Frame}           concatination of all the frames\n\t */\n\tconcat(...frames) {\n\t\tframes = frames.map(haveFrame);\n\t\tframes = frames.filter( f => f && f.length > 0);\n\t\tif( frames.length === 0) return this;\n\t\tframes.forEach(f => {\n\t\t\tlet notSame = this.columns.find( v => f.columns.indexOf(v) === -1);\n\t\t\tif( notSame ) throw new Error('incompatible columns: ['+this.columns.join(',')+'] <> ['+f.columns.join(',')+']');\n\t\t});\n\t\tlet arrays = frames.map( \n\t\t\tf => arrEqual(this.columns, f.columns)? \n\t\t\t\tf.data : \n\t\t\t\tf.project(this.columns).data\n\t\t);\n\t\tlet res = [].concat(...[this.data,...arrays]);\n\t\treturn new this.constructor(res, this._columns, this._name, this.keyFunc);\n\t}\n\t\n\n\t/**\n\t * similar to an array forEach\n\t * @param  {function} fn \ttakes function(row:array, ix, array)\n\t */\n\tforEachF(fn) { this.data.forEach((row, ix, arr) => fn(this._rowObj(row,ix), ix, arr)); }\n\n\t/**\n\t * same as filter but returns the index of the filtered lines\n\t * @param  {function} func filter function\n\t * @return {[int32]}  returns an array of row indexes (indicies)\n\t */\n\tfilterIX(func) {  \n\t\tif ( ! (typeof func === 'function') && this) \n\t\t\tthrow new TypeError();\n\t\tvar data = this.data;\n\t\tvar len = data.length >>> 0,\n\t\t\tres = [],//new Array(len), // preallocate array\n\t\t\ti = -1;\n\t\t\n\t\twhile (++i !== len) if (func(data[i], i, this.asObj(i))) res.push(i); //res[c++] = i;\n\t\t//res.length = c; // shrink down array to proper size\n\t\treturn res;\n\t}\t\n\n\t/**\n\t * Takes a filter function or an array of row indicies and returns a new Frame with the selected rows\n\t * @param  {function_array} fnOrArray filter function (r:RowObject,ix,array) or an array of index into the data\n\t * @return {[type]}           A new frame with rows filtered out\n\t */\n\tfilter(fnOrArray) { \n\t\tif(!this) throw new TypeError('Filter cannot be use as a raw function');\n\t\tif ( typeof fnOrArray === 'function')  {\n\t\t\tlet fn = fnOrArray;\n\t\t\tlet row = this._rowObj();\n\t\t\treturn new this.constructor(\n\t\t\t\tthis.data.filter( (x,ix,arr) => fn(row.__unsafeSet(x,ix),ix,arr)), \n\t\t\t\tthis._columns, this._name, \n\t\t\t\tthis.keyFunc); \n\t\t}\n\t\telse if( Array.isArray(fnOrArray) ) { // expects an array of integer index into the frame return s teh values for all valid index\n\t\t\tlet elements = fnOrArray;\n\t\t\tlet len = elements.length >>> 0;\n\t\t\tlet res = []; //new Array(len);\n\t\t\tlet data = this.data;\n\t\t\tlet dlen = data.length;\n\t\t\tlet i = -1;\n\t\t\tlet newColName = fnOrArray.map(i => this._columns[i] || 'COL_'+i);\n\t\t\twhile(++i !== len) {\n\t\t\t\tlet ix = elements[i];\n\t\t\t\tif(typeof ix !== 'number') continue;\n\t\t\t\tif(ix <0 || ix >= dlen) continue;\n\t\t\t\tlet r = data[ix];\n\t\t\t\tif(r !== undefined) res.push(r);\n\t\t\t} \n\t\t\treturn new this.constructor(res, newColName, this._name, this.keyFunc); \n\t\t}\n\t}\n\n\t/**\n\t * remove all redundent copies of strings, this is the only destructive operation oan aframe\n\t * while still maintaining functional purity\n\t * @return {[type]}        [description]\n\t */\n\tmakeUnique() {\n\t\t//if(this._unique) return this;\n\t\tlet len = this.columns.length;\n\t\tlet columns = this.columns, data = this.data;\n\t\tlet res = {};\n\t\tfor(let i=0; i<len; i++) {\n\t\t\tres[columns[i]] = Object.keys(_makeUnique(data, i)).sort();\n\t\t}\n\t\t//this._unique = retain?res:true;\n\t\treturn this;\n\t}\n\n\n\t/**\n\t * \n\t *   colsMapping can be a \n\t *   \t\t1. rearranged list of col names from the frame e.g [ 'B', 'A', 'F']\n\t *   \t\t2. or rearranged list of col names [ \n\t *   \t\t   ...('columnName' | 'oldName=newName' | 'newColumnName')\n\t *   \t\t   ] \n\t *   example of usage:\n\t *   list - Frame with list.data:\n\t *\n\t *\t\t\t   [ [ 'jan', 'mon', 1, 2 ],\n\t *\t\t\t\t [ 'jan', 'tue', 2, 6 ],\n\t *\t\t\t\t [ 'jan', 'wed', 3, 4 ],\n\t *\t\t\t\t [ 'jan', 'thu', undefined, 1 ],\n\t *\t\t\t\t ...\n\t *\n\t *\n\t *\t\t\t  list.columns: [ 'mon', 'weekday', 'v1', 'v2' ],\n\t *\n\t *\tadd column 'nurul' with value 123, change 'weekday' to uppercase, 'v1' conver undefined to 0\t\t  \n\t *\t\t\t\n\t *\t\t\t// Note the names if mapper are the new column names\n\t *\t\t\tvar mapper = {\n\t *\t\t\t\t nurul: (v, rowObj, i,row) => \"123\",\n\t *\t\t\t\t weekday: (v) => v.toUpperCase(),\n\t *\t\t\t\t v1: (v) => v===undefined?0:v\n\t *\t\t\t};\n\t *\n\t *\t\t\tlist.project([ 'mon', 'weekday','nurul' , 'v1', 'v2' ], mapper);\n\t *\n\t *\tresult:\n\t *\t\n\t *\t\t\t [ \t[ 'jan', 'MON', '123', 1, 2 ],\n\t *\t\t\t\t[ 'jan', 'TUE', '123', 2, 6 ],\n\t *\t\t\t\t[ 'jan', 'WED', '123', 3, 4 ],\n\t *\t\t\t\t  'jan', 'THU', '123', 0, 1 ],\n\t *\t\t\t\t...\n\t *\n\t *    another expample:\n\t *    \n\t *            // Note the use. of the now column names\n\t *            function toNm(x) { x? (+x) : 0; }\n\t *            var mapper1 = {\n\t *\t\t\t     nurul: () => \"123\",\n\t *\t\t\t     \"Week Day\": v => v?v.toUpperCase(): '',\n\t *\t\t\t     v1: (v) => v===undefined?0:v,\n\t *\t\t\t     v3: (v, rowObj) => toNm(rowObj.v1) + toNm(rowObj.v2) // sum of v1 and v2\n\t *\t\t      }; \n\t *\t\t      list.project([ 'mon=Month', 'weekday=Week Day','nurul' , 'v1', 'v2', 'v3' ], mapper);\t    \n\t *\n\t *\tthe result is the same as the previous example, but the columns names will now be\n\t *\t\t\t['Month', 'Week Day', 'nurul', 'v1', 'v2', 'v3' ]\n\t * \n\t * [project description]\n\t * @param  {selected_columns}  colsMapping array of strings\n\t * @param  {Object}  mappingObj  a mapping object with { newColumnNam: mappingFunction(oldCellValue, rowObj, rowNumber, rawRowArray)}\n\t * @param  {function}  filter    a filter function applied to the original row to determine if the row should be included\n\t * @param  {function}  tester    if a function to test if a column/row should have a mapping applied\n\t * @return {Frame}              a new Frame with the selected columns, mappings, and filters applied \n\t */\n\tproject(colsMapping,mappingObj,filter=undefined, tester=undefined) {\n\t\tif(filter && !isA.func( filter ) ) throw new TypeError('filter must be a function');\n\t\tif(tester && !isA.func(tester) ) throw new TypeError('tester must be a function');\n\t\tif(mappingObj && !isA.obj(mappingObj)) throw new TypeError('mappingObj must be a object');\n\t\tif(colsMapping !== undefined) {\n\t\t\tif(isA.func(colsMapping)) {\n\t\t\t\tcolsMapping = colsMapping(this, mappingObj); // apply the function to get the actual mapping\n\t\t\t}\n\t\t\tif( !isEmpty(colsMapping) && !arrOfStr(colsMapping) ) {\n\t\t\t\tthrow new TypeError('colsMapping must be an array of strings or undefined');\n\t\t\t}\n\t\t}\n\t\tif( isEmpty(colsMapping) && isEmpty(mappingObj) && isEmpty(filter) ) return this; //someCols = this.columns.slice(0);\n\t\tif( isEmpty(colsMapping) ) colsMapping = this.columns;\n\t\tif( filter && !isFunc(filter)) throw new TypeError('Filter: '+filter+' must be a function');\n\t\tlet mappedCols = colsMapping\n\t\t\t.map(n => n.split('=')) // convert 'original column name' and 'new column name' pair \n\t\t\t.map(([originalName,newName]) => [originalName, newName||originalName] );\n\t\t//check if we are only renaming the columns, then the data does can stay the same, just the columns are renamed\n\t\tif( mappingObj === undefined && filter === undefined && arrEqual(this.columns,mappedCols.map(([a]) => a)) ) {\n\t\t\treturn new this.constructor(this.data,mappedCols.map(([,b]) => b), this.name + '1');\n\t\t}\n\n\t\tlet ixList = mappedCols.map( ([name]) => this.colIx(name));// get index of column in the original data\n\n\t\tlet newCols = mappedCols.map(([,newName]) => newName);\n\t\tif( arrDedup(newCols).length !== newCols.length) {\n\t\t\tthrow new Error('project - new column names must be uinque ['+ newCols.join(',')+']');\n\t\t}\n\t\tconst len = this.data.length;\n\t\tconst data = this.data;\n\t\tlet result = filter?[]:newArray(len,[]);\n\t\t\n\t\t\n\t\tlet len2 = ixList.length;\n\t\tlet fn;\n\n\t\tif( mappingObj ){\n\t\t\tlet colMapFn = newCols.map(name => mappingObj[name]);\n\t\t\tlet roV = this._rowObj();\n\t\t\tfor(let i=0; i<len; i++) {\n\t\t\t\tlet row = [];//newArray(len2,dummy);\n\t\t\t\tlet inrow = data[i];\n\t\t\t\tlet ro = (tester || mappingObj || filter) ? roV.__unsafeSet(inrow,i): undefined;\n\t\t\t\tif(filter && !filter(ro)) continue;\n\t\t\t\tfor(let j=0; j<len2; j++) {\n\t\t\t\t\tlet pos = ixList[j];\n\t\t\t\t\tlet v = pos === -1?'': inrow[pos];\n\n\t\t\t\t\tif(tester && !tester(ro, newCols[j])) row.push(v);\n\t\t\t\t\telse {\n\t\t\t\t\t\tif( (fn = colMapFn[j]) !== undefined) v = fn(v, ro, pos, inrow);\n\t\t\t\t\t\trow.push(v!==undefined?v:'');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(filter) result.push(row); \n\t\t\t\telse result[i] = row;\n\t\t\t}\n\n\t\t}\n\t\telse {\n\t\t\tlet ro = this._rowObj();\n\t\t\tfor(let i=0; i<len; i++) {\n\t\t\t\tlet row =[];\n\t\t\t\tlet inrow = data[i];\n\t\t\t\tif(filter) {\n\t\t\t\t\t//ro = ro.__unsafeSet(inrow,i);\n\t\t\t\t\tif(!filter(ro.__unsafeSet(inrow,i)) ) continue;\n\t\t\t\t}\n\t\t\t\tfor(let j=0; j<len2; j++) {\n\t\t\t\t\tlet pos = ixList[j]; // get position (index) in origimal data\n\t\t\t\t\tlet v = pos === -1?'': inrow[pos];\n\t\t\t\t\trow.push(v);\n\t\t\t\t}\t\n\t\t\t\tif(filter) result.push(row); \n\t\t\t\telse result[i] = row;\t\t\t\n\t\t\t}\n\t\t\t\t\n\t\t}\n\n\t\t\n\t\t//result = this.data.map(row => projectRow(row, ixList));\n\t\treturn new this.constructor( result, newCols, this._name, this.keyFunc);\n\t}\n\t/**\n\t * select a more convinient interface to project\n\t * The primary diffenrence is the setting of new columns or adding new columns has \n\t * been made more convinient\n\t *\n\t *  Example of setting columns\n\t *   ['column', \n\t *   \t'oldColumn=newColumnName', \n\t *   \t['oldCol1=newColName1', (v,ro) => some-operation],\n\t *   \t['newCol', someValue],\n\t *   \t['newCol2', (v,ro) => someComputedValue]\n\t *   ]\n\t * \n\t * @param  {[type]} columns [description]\n\t * @param  {[type]} where   this is a filter function similar to SQL select ... from table where expr\n\t * @return {[type]}         [description]\n\t */\n\tselect(columns, where) {\n\t\tlet cols = columns.map( name => {\n\t\t\tlet nameStr = name;\n\t\t\tlet func;\n\n\t\t\tif(Array.isArray(name)) [nameStr,func] = name;\n\t\t\t\n\t\t\tif( !isString(nameStr)) throw new TypeError('expected a column name');\n\t\t\tlet [oldName, newName] = nameStr.split('=');\n\t\t\treturn [oldName, (newName|| oldName), func];\n\t\t});\n\n\t\tfunction toFunc(v) {\n\t\t\tif(isFunc(v)) return v;\n\t\t\treturn K(v);\n\t\t}\n\t\tlet mapper = cols.filter(([ , ,fn]) => fn !== undefined)\n\t\t\t.map(([ ,nn,fn]) => [nn, toFunc(fn)]);\n\t\tlet colMap = undefined;\n\t\tif(mapper.length) colMap = zipToDict(mapper);\n\t\t\n\t\treturn this.project(\n\t\t\tcols.map(([oldName, newName]) => oldName+'='+newName),\n\t\t\tcolMap, \n\t\t\twhere);\n\n\t}\n\t/**\n\t * Convinience method as an alias for the __project__ methos\n\t * @param  {[type]}  mapper [description]\n\t * @param  {[type]}  filter [description]\n\t * @param  {[type]}  tester [description]\n\t * @return {[type]}         [description]\n\t */\n\tupdate(mapper,filter,tester) {\n\t\treturn this.project(undefined,mapper,filter,tester);\n\t}\n\n\t/**\n\t * Returns a function that can be used iteratively to project one array to another.\n\t * This is \n\t * @param  {[type]}  colsMapping [description]\n\t * @param  {[type]}  mappingObj  [description]\n\t * @return {function}            mapping function (inputArray, outputArray) rearranges the input array to the output array\n\t */\n\ttrProject(colsMapping,mappingObj) {\n\t\tif( !colsMapping || colsMapping.length === 0 ) return () => []; //nothing to maporiginalName\n\t\tlet mappedCols = colsMapping\n\t\t\t.map(n => n.split('=')) // convert 'original column name' and 'new column name' pair \n\t\t\t.map(([originalName,newName]) => [originalName, newName||originalName] );\n\n\n\t\t//check if we are only renaming the columns, then the data does can stay the same, just the columns are renamed\n\t\tif( mappingObj === undefined && arrEqual(this.columns,mappedCols.map(([originalName,newName]) => originalName)) ) {\n\t\t\treturn (inrow,row) => {\n\t\t\t\tif(!row) return inrow.slice(0);\n\t\t\t\tfor(let i =0; inrow.length; i++) row[i] = inrow[i];\n\t\t\t\treturn row;\n\t\t\t};\n\t\t}\n\n\t\tlet ixList = mappedCols.map( ([name]) => this.colIx(name));//.filter( x => x != -1);\n\t\t//let someCols = mappedCols.map(([name]) => name);\n\t\tlet newCols = mappedCols.map(([,newName]) => newName);\n\t\tlet nc = arrDedup(newCols);\n\t\tif( nc.length !== newCols.length) {\n\t\t\tthrow new Error('project - new column names must be uinque ['+ newCols.join(',')+']');\n\t\t}\n\t\t\n\t\tlet len2 = ixList.length;\n\t\t\n\t\t//element mapping function supplied\n\t\tif( mappingObj !== undefined){\n\t\t\tlet colMapFn = newCols.map(name => mappingObj[name]);\n\t\t\treturn (\n\t\t\t\t(inrow, row,ix=0) => {\n\t\t\t\t\tlet fn;\n\t\t\t\t\tconst push = ( row === undefined) ? \n\t\t\t\t\t\t( v => row.push(v)) :\n\t\t\t\t\t\t( (v,j) => row[j] = v );\n\t\t\t\t\trow = row || [];\n\t\t\t\t\tfor(let j=0; j<len2; j++) {\n\t\t\t\t\t\tlet pos = ixList[j]|0;\n\t\t\t\t\t\tlet v = pos === -1?'': inrow[pos];\n\t\t\t\t\t\tif( (fn = colMapFn[j]) !== undefined) {\n\t\t\t\t\t\t\tv = fn(v, this._rowObj(inrow), ix, inrow);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpush(v,j);\n\t\t\t\t\t}\n\t\t\t\t\treturn row;\n\t\t\t\t}\n\t\t\t);\n\n\t\t}\n\t\telse { // no\n\t\t\treturn (inrow, row) => {\n\t\t\t\tif( row === undefined) {\n\t\t\t\t\trow = [];\n\t\t\t\t\tfor(let j=0; j<len2; j++) {\n\t\t\t\t\t\tlet pos = ixList[j]|0;\n\t\t\t\t\t\tlet v = pos === -1?'': inrow[pos];\n\t\t\t\t\t\trow.push(v);\n\t\t\t\t\t}\t\n\t\t\t\t}else {\n\t\t\t\t\tfor(let j=0; j<len2; j++) {\n\t\t\t\t\t\tlet pos = ixList[j]|0;\n\t\t\t\t\t\tlet v = pos === -1?'': inrow[pos];\n\t\t\t\t\t\trow[j] = v;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn row;\t\t\t\n\t\t\t};\n\t\t\t\t\n\t\t}\n\t}\n\n\t/**\n\t * Creates a filter function the for the additional join checck\n\t * Note the primary joining action (primary criterion) is the joinOp which look like this\n\t * joinOp => 'commonColumnNameInBothFrames' or 'colFram1==colFrame2'\n\t * \n\t * @param  {Function} fn function to compare 2 rows a and b \n\t * @param  {[type]}   aFrame\n\t * @return {[type]}\n\t */\n\t_genAuxJoinFilter(fn,aFrame) {\n\t\tlet self = this;\n\t\tif( fn === undefined ) return fn;\n\t\tlet roSelf = self._rowObj(),\n\t\t\troAFrame = aFrame._rowObj();\n\t\treturn function(a,b) {\n\t\t\tif( Array.isArray(a) && Array.isArray(b) ) return fn(roSelf.__unsafeSet(a), roAFrame.__unsafeSet(b));\n\t\t\treturn fn(a,b);\n\t\t};\n\t}\n\n\t/**\n\t * [innerJoin description]\n\t * @param  {Frame} aFrame    [description]\n\t * @param  {Array} colsToMap array of array of (strings) representing column names '1.colName' or '2.colName' \n\t * @param  {string} joinOn    'colFromThis==colFrom_aFrame'\n\t * @param  {function} filter    [description]\n\t * @return {Frame}           [description]\n\t */\n\tinnerJoin(aFrame, colsToMap, joinOn, filter) {\n\t\treturn innerJoin(this,aFrame, colsToMap, joinOn, this._genAuxJoinFilter(filter,aFrame));\n\t}\n\n\n\t/**\n\t * [leftJoin description]\n \t * @param  {Frame} aFrame    [description]\n\t * @param  {Array} colsToMap array of (strings) representing column names '1.colName' or '2.colName' \n\t * @param  {string} joinOn    'colFromThis==colFrom_aFrame'\n\t * @param  {function} filter    [description]\n\t * @return {Frame}           [description]\n\t */\n\tleftJoin(aFrame, colsToMap, joinOn, filter) {\n\t\treturn leftJoin(this,aFrame, colsToMap, joinOn, this._genAuxJoinFilter(filter,aFrame));\n\t}\n\n\t/**\n\t * [outerJoin description]\n\t * @param  {Frame} aFrame    [description]\n\t * @param  {Array} colsToMap array of array of (strings) representing column names '1.colName' or '2.colName' \n\t * @param  {string} joinOn    'colFromThis==colFrom_aFrame'\n\t * @param  {function} filter    [description]\n\t * @return {Frame}           [description]\n\t */\n\touterJoin(aFrame, colsToMap, joinOn, filter) {\n\t\treturn outerJoin(this,aFrame, colsToMap, joinOn, this._genAuxJoinFilter(filter,aFrame));\n\t}\n\n\n\t/** \n\t * similar semantics to SQL groupBy, assumes list has bee sorted by 'groupCols'\n\t * aFrame.groupBy(['mon',\"weekday\"], [gbSum('v1','sumV1'), gbCount('weekday', 'numWeekDays'),\n\t *                                  \tgbMin('v2', 'minV2'), gbMax('v1','maxV1'),\n\t *                                    \tgbMean('v1','meanV1')\n\t *\t\t\t\t\t\t\t\t\t  ])\n\t * \n\t * @param  {[type]} groupCols                  [description]\n\t * @param  {[type]} listOfAccumulatorFunctions [description]\n\t * @param  {[type]} toSort                     [description]\n\t * @return {[type]}                            [description]\n\t */\n\tgroupBy(groupCols, listOfAccumulatorFunctions, toSort) {\n\t\tlet aFrame = this;\n\t\tif(toSort === undefined || toSort === true) {\n\t\t\taFrame.sorted = undefined;\n\t\t\taFrame = aFrame.sort(groupCols.filter(name => isString(name)));\n\t\t}\n\t\treturn groupBy(groupCols, aFrame, listOfAccumulatorFunctions);\n\t}\n\n\t/**\n\t * [sort description]\n\t * @param  {[type]} colNames [description]\n\t * @param  {[type]} cmpFn    [description]\n\t * @return {[type]}          [description]\n\t */\n\tsort(colNames,cmpFn) { // the cmpFn is optional\n\t\treturn sortFrameBy(colNames,this,cmpFn);\n\t}\n\n\tget unique() {\n\t\tif(this._unique === undefined) {\n\t\t\tthis.makeUnique();\n\t\t}\n\t\treturn this._unique;\n\t}\n\n\tget numericColumns() {\n\t\tconst threshold = Math.trunc(this.length * 0.9);\n\t\tconst a = this.data.map(row => row.map(v => ((isNum(v) || !v) ? 1 : 0)));\n\t\tconst sums = a.reduce(vecAdd);\n\n\t\treturn this.columns.map((c, i) => ((sums[i] > threshold) ? c : undefined)).filter(Identity);\n\t}\n\t/**\n\t * The default behavior of this method is to convert numeric strings into and return\n\t * a new frame will the converted data. It tries to reuse as much of the data as possible\n\t * \n\t * If a conversion list is supplied, each element of the list consists of the following\n\t *    [ \n\t *    \ttestFunc(aValue) -- This takes a value a returns true or false\n\t *    \tconvertFn(aValue) -- and returns the new value\n\t *    ]\n\t * for each cell we apply the testFunc if false then try the next testFunc in the list\n\t * if the testFunc return true, the apply the convertFn to the cell value to the new value\n\t * if non of the testFn succeeds then the cell remains unchanged\n\t * \n\t * @param  {[[testFn, convertFn]...} convList this parameter is optional \n\t * @return {Frame}          returns a new Frame with the converted values\n\t */\n\tconvertData(convList) {\n\t\tlet _data = newArray(this.length, []);\n\t\tif(convList === undefined || convList.length === 0) {\n\t\t\tlet len = this.length;\n\t\t\tlet data = this.data;\n\t\t\tfor(let i = 0; i<len; i++) {\n\t\t\t\tlet row = data[i];\n\t\t\t\tif( row.some(x => typeof x === 'string' && isNum(x)) ) {\n\t\t\t\t\trow = row.map(v => isNum(v) ?toNumber(v): v);\n\t\t\t\t}\n\t\t\t\t_data[i] = row;\n\t\t\t}\n\t\t} else {\n\t\t\t//throw new Error('custom conversion is not supported');\n\t\t\t\n\t\t\tlet len = this.length;\n\t\t\tlet data = this.data;\n\t\t\tlet dummy = data.length?data[0].slice(0):[];\n\t\t\tlet rlen = this.columns.length;\n\n\t\t\tlet cLen = convList.length;\n\t\t\tfor(let i = 0; i<len; i++) {\n\t\t\t\tlet row = data[i];\n\t\t\t\tlet changed = false;\n\t\t\t\tfor(let col=0; col<rlen; col++) {\n\t\t\t\t\tdummy[col] = row[col];\n\t\t\t\t\tfor(let k=0; k<cLen; k++) {\n\t\t\t\t\t\tif(convList[k][0](row[col])) {\n\t\t\t\t\t\t\tdummy[col] = convList[k][1](row[col]);\n\t\t\t\t\t\t\tchanged = true;\n\t\t\t\t\t\t\tbreak;\t\n\t\t\t\t\t\t} \n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif(changed) _data[i] = dummy.slice(0);\n\t\t\t\telse _data[i] = row;\n\t\t\t}\n\n\t\t}\n\t\tif(arrEqual(this.data,_data)) {\n\t\t\t// nothing changed\n\t\t\treturn this;\n\t\t}\n\t\treturn this.constructor(_data,this.columns,this.name,this.keyFunc);\n\t}\n\n\t\n\t/*\n\t * return a frame where all rows are unique, i.e. remove duplicate rows,\n\t * @return {Frame} returns a sorted frame with no duplicates\n\t */\n\tdistinct() {\n\t\treturn this.groupBy(this.columns,undefined,true);\n\t}\n\t\n\n\t/**\n\t * Return a string represent of the frame formatted as an HTML table\n\t * @return {[type]} [description]\n\t */\n\t_toHtml() {\n\t\treturn toHTML(this);\n\t}\n\n\n}\n\nfunction toString(x) {\n\treturn x.toString();\n}\n\nFrame.HTMLFormat = {\t\n\tnumber: toString,\n\tother: toString\n};\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/frame.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 307,
    "kind": "variable",
    "name": "isString",
    "memberof": "src/frame/frame.js",
    "static": true,
    "longname": "src/frame/frame.js~isString",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 308,
    "kind": "variable",
    "name": "isFunc",
    "memberof": "src/frame/frame.js",
    "static": true,
    "longname": "src/frame/frame.js~isFunc",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 309,
    "kind": "variable",
    "name": "arrOfStr",
    "memberof": "src/frame/frame.js",
    "static": true,
    "longname": "src/frame/frame.js~arrOfStr",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 310,
    "kind": "function",
    "name": "isNum",
    "memberof": "src/frame/frame.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame.js~isNum",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 311,
    "kind": "function",
    "name": "Identity",
    "memberof": "src/frame/frame.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame.js~Identity",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 312,
    "kind": "class",
    "name": "Frame",
    "memberof": "src/frame/frame.js",
    "static": true,
    "longname": "src/frame/frame.js~Frame",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame.js",
    "importStyle": "{Frame}",
    "description": "This pure data structure represent a database like table\ninternally it consists of rows and columns representing a generalized 2d matrix\nYou can also think of this like a limited excel sheet.\nNo operation will visibly modify the Frame, all operations create a new frame\nThe class takes considerable effort to reuse as much of the internal data as possible\nto minimize the amount of garbage collection that is necessary.\n\nIt easily handles large number of rows and columns and has been tested to work well\nwith over 1 million rows with hundreds of columns. The real limitation is the amount of ram\navailable to Javascript.",
    "lineNumber": 69,
    "interface": false,
    "extends": [
      "src/frame/BaseFrame.js~BaseFrame"
    ]
  },
  {
    "__docId__": 313,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#constructor",
    "access": "public",
    "description": "construct a new frame, Note once you have passed the data and column arguments, you no longer own those\ntwo items and should not modify them or any of their content",
    "lineNumber": 79,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "the data fot the frame is an array of rows and each row is an array of strings or numbers"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "columns",
        "description": "array of strings representing the column names"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "optional name for the frame"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "keyFunc",
        "description": "optional function that is present will return the column represinting the unique key"
      }
    ]
  },
  {
    "__docId__": 314,
    "kind": "member",
    "name": "_unique",
    "memberof": "src/frame/frame.js~Frame",
    "static": false,
    "longname": "src/frame/frame.js~Frame#_unique",
    "access": "private",
    "description": null,
    "lineNumber": 81,
    "undocument": true
  },
  {
    "__docId__": 315,
    "kind": "member",
    "name": "_sortCols",
    "memberof": "src/frame/frame.js~Frame",
    "static": false,
    "longname": "src/frame/frame.js~Frame#_sortCols",
    "access": "private",
    "description": null,
    "lineNumber": 82,
    "undocument": true
  },
  {
    "__docId__": 316,
    "kind": "member",
    "name": "_row",
    "memberof": "src/frame/frame.js~Frame",
    "static": false,
    "longname": "src/frame/frame.js~Frame#_row",
    "access": "private",
    "description": null,
    "lineNumber": 83,
    "undocument": true
  },
  {
    "__docId__": 317,
    "kind": "member",
    "name": "AccessClass",
    "memberof": "src/frame/frame.js~Frame",
    "static": false,
    "longname": "src/frame/frame.js~Frame#AccessClass",
    "access": "public",
    "description": null,
    "lineNumber": 84,
    "undocument": true
  },
  {
    "__docId__": 318,
    "kind": "member",
    "name": "showLen",
    "memberof": "src/frame/frame.js~Frame",
    "static": false,
    "longname": "src/frame/frame.js~Frame#showLen",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "undocument": true
  },
  {
    "__docId__": 319,
    "kind": "member",
    "name": "_hash",
    "memberof": "src/frame/frame.js~Frame",
    "static": false,
    "longname": "src/frame/frame.js~Frame#_hash",
    "access": "private",
    "description": null,
    "lineNumber": 86,
    "undocument": true
  },
  {
    "__docId__": 320,
    "kind": "method",
    "name": "asObj",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#asObj",
    "access": "public",
    "description": "[asObj description]",
    "lineNumber": 97,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "ix",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 321,
    "kind": "get",
    "name": "rows",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#rows",
    "access": "public",
    "description": "Get an array of row objects",
    "lineNumber": 103,
    "return": {
      "nullable": null,
      "types": [
        "[RowObject]"
      ],
      "spread": false,
      "description": "array of row objects"
    }
  },
  {
    "__docId__": 322,
    "kind": "member",
    "name": "_rows",
    "memberof": "src/frame/frame.js~Frame",
    "static": false,
    "longname": "src/frame/frame.js~Frame#_rows",
    "access": "private",
    "description": null,
    "lineNumber": 105,
    "undocument": true
  },
  {
    "__docId__": 323,
    "kind": "method",
    "name": "mergeCols",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#mergeCols",
    "access": "public",
    "description": "Convert several columns into a single column, \n  the elements rae converted to theeir string representation\n\n  e.g aFrame.columns = ['name','street','city','state','zip']\n    but we want to convert it into a ['name', 'address'] \n    so: ['street','city','state','zip'] => ['address']\n\n  newFrame = aFrame.mergeCols(null, ['street','city','state','zip'], 'address',  \", \");",
    "lineNumber": 127,
    "params": [
      {
        "nullable": null,
        "types": [
          "array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "cols",
        "description": "columns to keep (may ne null or undefined)"
      },
      {
        "nullable": null,
        "types": [
          "array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "someColsToMerge",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "newNameForMergerCol",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "string",
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "sepOrMergeFunc",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Frame"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 324,
    "kind": "method",
    "name": "asObjList",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#asObjList",
    "access": "public",
    "description": "[asObjList description]",
    "lineNumber": 153,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 325,
    "kind": "method",
    "name": "_rowObj",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#_rowObj",
    "access": "private",
    "description": "_rowObj This is an code efficient mathod of accessing the element of the 'rowLikeArray' \nusing the columns names of the frame. The RowElement created is a facade to the rowLikeArray,\nit does not actuall copy the elements of the array to itself. It is just a convinient way\nof retrieving the elements of the array by name.\n\ne.g. if the this.columns : ['name', 'age', 'sex']\n\nlet arr = ['Jane', 21, 'Female'];\nlet ro = this._rowObj(arr,5);\n\nro.sex   is the same as arr[2] == 'Female'\nro.name  === arr[0]\nro._index$ === 5\n\nFinally:\narr[2] = 'Male';\nro.sex === 'Male'",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "row"
        ],
        "spread": false,
        "optional": false,
        "name": "rowLikeArray",
        "description": "array representing the row, this array should have the same length as the rows in the frame"
      },
      {
        "nullable": null,
        "types": [
          "int32"
        ],
        "spread": false,
        "optional": false,
        "name": "ix",
        "description": "row number"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "RowObject"
      ],
      "spread": false,
      "description": "row object representing the element"
    }
  },
  {
    "__docId__": 326,
    "kind": "method",
    "name": "withIndex",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#withIndex",
    "access": "public",
    "description": "withIndex add an index column to the befining of the frame or at the end of the frame",
    "lineNumber": 189,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "indexName",
        "description": "Name of the index defaults to _INDEX"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "atEnd",
        "description": "if true the index is placed on the last column, otherwise it is the first column"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 327,
    "kind": "method",
    "name": "find",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#find",
    "access": "public",
    "description": "find a row using the test function fn. The test function recieves a row ia s RowObject facade, see _rowObj method.",
    "lineNumber": 199,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "function with a test criterion for the find operation"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "row_object"
      ],
      "spread": false,
      "description": "undefined if nothing found or a RowObject for the row matching the test function"
    }
  },
  {
    "__docId__": 328,
    "kind": "method",
    "name": "map",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#map",
    "access": "public",
    "description": "[description]",
    "lineNumber": 211,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "f(rowObject, )"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 329,
    "kind": "method",
    "name": "mapF",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#mapF",
    "access": "public",
    "description": "Similar to Array.map",
    "lineNumber": 218,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "takes fn(rowObject, index, this.data )"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Array"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 330,
    "kind": "method",
    "name": "reduce",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#reduce",
    "access": "public",
    "description": "Similar to arry reduce except it works on frames",
    "lineNumber": 229,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "reduce function (acc:T, r:RowObject, index, array)"
      },
      {
        "nullable": null,
        "types": [
          "T"
        ],
        "spread": false,
        "optional": false,
        "name": "ini",
        "description": "initial value  of accumulator type T"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "T"
      ],
      "spread": false,
      "description": "return the accumulator"
    }
  },
  {
    "__docId__": 331,
    "kind": "method",
    "name": "concat",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#concat",
    "access": "public",
    "description": "Concatinate frames and return a new frame (does not modify any of the input frames)",
    "lineNumber": 236,
    "params": [
      {
        "nullable": null,
        "types": [
          "...Frame"
        ],
        "spread": true,
        "optional": false,
        "name": "frames",
        "description": "list of frames"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Frame"
      ],
      "spread": false,
      "description": "concatination of all the frames"
    }
  },
  {
    "__docId__": 332,
    "kind": "method",
    "name": "forEachF",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#forEachF",
    "access": "public",
    "description": "similar to an array forEach",
    "lineNumber": 258,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "takes function(row:array, ix, array)"
      }
    ]
  },
  {
    "__docId__": 333,
    "kind": "method",
    "name": "filterIX",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#filterIX",
    "access": "public",
    "description": "same as filter but returns the index of the filtered lines",
    "lineNumber": 265,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "func",
        "description": "filter function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[int32]"
      ],
      "spread": false,
      "description": "returns an array of row indexes (indicies)"
    }
  },
  {
    "__docId__": 334,
    "kind": "method",
    "name": "filter",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#filter",
    "access": "public",
    "description": "Takes a filter function or an array of row indicies and returns a new Frame with the selected rows",
    "lineNumber": 283,
    "params": [
      {
        "nullable": null,
        "types": [
          "function_array"
        ],
        "spread": false,
        "optional": false,
        "name": "fnOrArray",
        "description": "filter function (r:RowObject,ix,array) or an array of index into the data"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "A new frame with rows filtered out"
    }
  },
  {
    "__docId__": 335,
    "kind": "method",
    "name": "makeUnique",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#makeUnique",
    "access": "public",
    "description": "remove all redundent copies of strings, this is the only destructive operation oan aframe\nwhile still maintaining functional purity",
    "lineNumber": 317,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 336,
    "kind": "method",
    "name": "project",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#project",
    "access": "public",
    "description": "\n  colsMapping can be a \n  \t\t1. rearranged list of col names from the frame e.g [ 'B', 'A', 'F']\n  \t\t2. or rearranged list of col names [ \n  \t\t   ...('columnName' | 'oldName=newName' | 'newColumnName')\n  \t\t   ] \n  example of usage:\n  list - Frame with list.data:\n\n\t\t   [ [ 'jan', 'mon', 1, 2 ],\n\t\t\t [ 'jan', 'tue', 2, 6 ],\n\t\t\t [ 'jan', 'wed', 3, 4 ],\n\t\t\t [ 'jan', 'thu', undefined, 1 ],\n\t\t\t ...\n\n\n\t\t  list.columns: [ 'mon', 'weekday', 'v1', 'v2' ],\n\nadd column 'nurul' with value 123, change 'weekday' to uppercase, 'v1' conver undefined to 0\t\t  \n\t\t\n\t\t// Note the names if mapper are the new column names\n\t\tvar mapper = {\n\t\t\t nurul: (v, rowObj, i,row) => \"123\",\n\t\t\t weekday: (v) => v.toUpperCase(),\n\t\t\t v1: (v) => v===undefined?0:v\n\t\t};\n\n\t\tlist.project([ 'mon', 'weekday','nurul' , 'v1', 'v2' ], mapper);\n\nresult:\n\n\t\t [ \t[ 'jan', 'MON', '123', 1, 2 ],\n\t\t\t[ 'jan', 'TUE', '123', 2, 6 ],\n\t\t\t[ 'jan', 'WED', '123', 3, 4 ],\n\t\t\t  'jan', 'THU', '123', 0, 1 ],\n\t\t\t...\n\n   another expample:\n   \n           // Note the use. of the now column names\n           function toNm(x) { x? (+x) : 0; }\n           var mapper1 = {\n\t\t     nurul: () => \"123\",\n\t\t     \"Week Day\": v => v?v.toUpperCase(): '',\n\t\t     v1: (v) => v===undefined?0:v,\n\t\t     v3: (v, rowObj) => toNm(rowObj.v1) + toNm(rowObj.v2) // sum of v1 and v2\n\t      }; \n\t      list.project([ 'mon=Month', 'weekday=Week Day','nurul' , 'v1', 'v2', 'v3' ], mapper);\t    \n\nthe result is the same as the previous example, but the columns names will now be\n\t\t['Month', 'Week Day', 'nurul', 'v1', 'v2', 'v3' ]\n\n[project description]",
    "lineNumber": 390,
    "params": [
      {
        "nullable": null,
        "types": [
          "selected_columns"
        ],
        "spread": false,
        "optional": false,
        "name": "colsMapping",
        "description": "array of strings"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "mappingObj",
        "description": "a mapping object with { newColumnNam: mappingFunction(oldCellValue, rowObj, rowNumber, rawRowArray)}"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "a filter function applied to the original row to determine if the row should be included"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "tester",
        "description": "if a function to test if a column/row should have a mapping applied"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Frame"
      ],
      "spread": false,
      "description": "a new Frame with the selected columns, mappings, and filters applied"
    }
  },
  {
    "__docId__": 337,
    "kind": "method",
    "name": "select",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#select",
    "access": "public",
    "description": "select a more convinient interface to project\nThe primary diffenrence is the setting of new columns or adding new columns has \nbeen made more convinient\n\n Example of setting columns\n  ['column', \n  \t'oldColumn=newColumnName', \n  \t['oldCol1=newColName1', (v,ro) => some-operation],\n  \t['newCol', someValue],\n  \t['newCol2', (v,ro) => someComputedValue]\n  ]",
    "lineNumber": 491,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "columns",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "where",
        "description": "this is a filter function similar to SQL select ... from table where expr"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 338,
    "kind": "method",
    "name": "update",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#update",
    "access": "public",
    "description": "Convinience method as an alias for the __project__ methos",
    "lineNumber": 525,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "mapper",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "tester",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 339,
    "kind": "method",
    "name": "trProject",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#trProject",
    "access": "public",
    "description": "Returns a function that can be used iteratively to project one array to another.\nThis is ",
    "lineNumber": 536,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "colsMapping",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "mappingObj",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "mapping function (inputArray, outputArray) rearranges the input array to the output array"
    }
  },
  {
    "__docId__": 340,
    "kind": "method",
    "name": "_genAuxJoinFilter",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#_genAuxJoinFilter",
    "access": "private",
    "description": "Creates a filter function the for the additional join checck\nNote the primary joining action (primary criterion) is the joinOp which look like this\njoinOp => 'commonColumnNameInBothFrames' or 'colFram1==colFrame2'",
    "lineNumber": 616,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "function to compare 2 rows a and b"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 341,
    "kind": "method",
    "name": "innerJoin",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#innerJoin",
    "access": "public",
    "description": "[innerJoin description]",
    "lineNumber": 635,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "colsToMap",
        "description": "array of array of (strings) representing column names '1.colName' or '2.colName'"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "joinOn",
        "description": "'colFromThis==colFrom_aFrame'"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Frame"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 342,
    "kind": "method",
    "name": "leftJoin",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#leftJoin",
    "access": "public",
    "description": "[leftJoin description]",
    "lineNumber": 648,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "colsToMap",
        "description": "array of (strings) representing column names '1.colName' or '2.colName'"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "joinOn",
        "description": "'colFromThis==colFrom_aFrame'"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Frame"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 343,
    "kind": "method",
    "name": "outerJoin",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#outerJoin",
    "access": "public",
    "description": "[outerJoin description]",
    "lineNumber": 660,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "colsToMap",
        "description": "array of array of (strings) representing column names '1.colName' or '2.colName'"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "joinOn",
        "description": "'colFromThis==colFrom_aFrame'"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Frame"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 344,
    "kind": "method",
    "name": "groupBy",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#groupBy",
    "access": "public",
    "description": "similar semantics to SQL groupBy, assumes list has bee sorted by 'groupCols'\naFrame.groupBy(['mon',\"weekday\"], [gbSum('v1','sumV1'), gbCount('weekday', 'numWeekDays'),\n                                 \tgbMin('v2', 'minV2'), gbMax('v1','maxV1'),\n                                   \tgbMean('v1','meanV1')\n\t\t\t\t\t\t\t\t  ])",
    "lineNumber": 677,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "groupCols",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "listOfAccumulatorFunctions",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "toSort",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 345,
    "kind": "method",
    "name": "sort",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#sort",
    "access": "public",
    "description": "[sort description]",
    "lineNumber": 692,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "colNames",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "cmpFn",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 346,
    "kind": "get",
    "name": "unique",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#unique",
    "access": "public",
    "description": null,
    "lineNumber": 696,
    "undocument": true
  },
  {
    "__docId__": 347,
    "kind": "get",
    "name": "numericColumns",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#numericColumns",
    "access": "public",
    "description": null,
    "lineNumber": 703,
    "undocument": true
  },
  {
    "__docId__": 348,
    "kind": "method",
    "name": "convertData",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#convertData",
    "access": "public",
    "description": "The default behavior of this method is to convert numeric strings into and return\na new frame will the converted data. It tries to reuse as much of the data as possible\n\nIf a conversion list is supplied, each element of the list consists of the following\n   [ \n   \ttestFunc(aValue) -- This takes a value a returns true or false\n   \tconvertFn(aValue) -- and returns the new value\n   ]\nfor each cell we apply the testFunc if false then try the next testFunc in the list\nif the testFunc return true, the apply the convertFn to the cell value to the new value\nif non of the testFn succeeds then the cell remains unchanged",
    "lineNumber": 726,
    "params": [
      {
        "nullable": null,
        "types": [
          "[[testFn, convertFn]..."
        ],
        "spread": false,
        "optional": false,
        "name": "convList",
        "description": "this parameter is optional"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Frame"
      ],
      "spread": false,
      "description": "returns a new Frame with the converted values"
    }
  },
  {
    "__docId__": 349,
    "kind": "method",
    "name": "distinct",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#distinct",
    "access": "public",
    "description": null,
    "lineNumber": 777,
    "undocument": true
  },
  {
    "__docId__": 350,
    "kind": "method",
    "name": "_toHtml",
    "memberof": "src/frame/frame.js~Frame",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/frame/frame.js~Frame#_toHtml",
    "access": "private",
    "description": "Return a string represent of the frame formatted as an HTML table",
    "lineNumber": 786,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 351,
    "kind": "function",
    "name": "toString",
    "memberof": "src/frame/frame.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame.js~toString",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 793,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 352,
    "kind": "file",
    "name": "src/frame/frame_element.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n *\n *  Used as an internal capability of a Frame\n *. This is a class file generator for Frame row object ( this object can access the columns by column name)\n *  So if the aFrame has columns 'NAME', \"ADDRESS\"\n *\n *   let row = aFrame.asObj(0);\n *\n *    row.NAME === 'name column value'\n *    row.ADDRESS\n *\n *   The simple monded way of doing the is to create a dictionary like object, for row ix,  row = {} ;  row[column[i]] = data[ix][i]\n *    but this gives javascript JIT no opportunity to optimize,\n *\n * instead we dunamically create class definition with all the accessors as 'get' (computed attribute)\n * Thi module create such a class. This uses the full power of Javascript and the Javascript JIT, \n * \n *  \t_rowObj(elem) {\n *\t\t//console.log(\"**************** make raw ********************\");\n *\t\treturn new this.AccessClass(elem);\n *\t\t//return this._columns.reduce((obj, k, ix) => { obj[k] = elem[ix]; return obj; }, {});\n *\t}\n *\n * \n */\n\n// function mapn(n,fn,arr) { \n// \tfor(let i=0; i<n; i++) arr.push(fn(i));\n// \treturn arr;\n// }\n\n// let access = eval(`[${mapn(101,i => `function () { return this.__data[${i}]; }`,[]).join(',')}]`);\n\n\nlet access = [\n\tfunction () { return this.__data[0]; },\n\tfunction () { return this.__data[1]; },\n\tfunction () { return this.__data[2]; },\n\tfunction () { return this.__data[3]; },\n\tfunction () { return this.__data[4]; },\n\tfunction () { return this.__data[5]; },\n\tfunction () { return this.__data[6]; },\n\tfunction () { return this.__data[7]; },\n\tfunction () { return this.__data[8]; },\n\tfunction () { return this.__data[9]; },\n\tfunction () { return this.__data[10]; },\n\tfunction () { return this.__data[11]; },\n\tfunction () { return this.__data[12]; },\n\tfunction () { return this.__data[13]; },\n\tfunction () { return this.__data[14]; },\n\tfunction () { return this.__data[15]; },\n\tfunction () { return this.__data[16]; },\n\tfunction () { return this.__data[17]; },\n\tfunction () { return this.__data[18]; },\n\tfunction () { return this.__data[19]; },\n\tfunction () { return this.__data[20]; },\n\tfunction () { return this.__data[21]; },\n\tfunction () { return this.__data[22]; },\n\tfunction () { return this.__data[23]; },\n\tfunction () { return this.__data[24]; },\n\tfunction () { return this.__data[25]; },\n\tfunction () { return this.__data[26]; },\n\tfunction () { return this.__data[27]; },\n\tfunction () { return this.__data[28]; },\n\tfunction () { return this.__data[29]; },\n\tfunction () { return this.__data[30]; },\n\tfunction () { return this.__data[31]; },\n\tfunction () { return this.__data[32]; },\n\tfunction () { return this.__data[33]; },\n\tfunction () { return this.__data[34]; },\n\tfunction () { return this.__data[35]; },\n\tfunction () { return this.__data[36]; },\n\tfunction () { return this.__data[37]; },\n\tfunction () { return this.__data[38]; },\n\tfunction () { return this.__data[39]; },\n\tfunction () { return this.__data[40]; },\n\tfunction () { return this.__data[41]; },\n\tfunction () { return this.__data[42]; },\n\tfunction () { return this.__data[43]; },\n\tfunction () { return this.__data[44]; },\n\tfunction () { return this.__data[45]; },\n\tfunction () { return this.__data[46]; },\n\tfunction () { return this.__data[47]; },\n\tfunction () { return this.__data[48]; },\n\tfunction () { return this.__data[49]; },\n\tfunction () { return this.__data[50]; },\n\tfunction () { return this.__data[51]; },\n\tfunction () { return this.__data[52]; },\n\tfunction () { return this.__data[53]; },\n\tfunction () { return this.__data[54]; },\n\tfunction () { return this.__data[55]; },\n\tfunction () { return this.__data[56]; },\n\tfunction () { return this.__data[57]; },\n\tfunction () { return this.__data[58]; },\n\tfunction () { return this.__data[59]; },\n\tfunction () { return this.__data[60]; },\n\tfunction () { return this.__data[61]; },\n\tfunction () { return this.__data[62]; },\n\tfunction () { return this.__data[63]; },\n\tfunction () { return this.__data[64]; },\n\tfunction () { return this.__data[65]; },\n\tfunction () { return this.__data[66]; },\n\tfunction () { return this.__data[67]; },\n\tfunction () { return this.__data[68]; },\n\tfunction () { return this.__data[69]; },\n\tfunction () { return this.__data[70]; },\n\tfunction () { return this.__data[71]; },\n\tfunction () { return this.__data[72]; },\n\tfunction () { return this.__data[73]; },\n\tfunction () { return this.__data[74]; },\n\tfunction () { return this.__data[75]; },\n\tfunction () { return this.__data[76]; },\n\tfunction () { return this.__data[77]; },\n\tfunction () { return this.__data[78]; },\n\tfunction () { return this.__data[79]; },\n\tfunction () { return this.__data[80]; },\n\tfunction () { return this.__data[81]; },\n\tfunction () { return this.__data[82]; },\n\tfunction () { return this.__data[83]; },\n\tfunction () { return this.__data[84]; },\n\tfunction () { return this.__data[85]; },\n\tfunction () { return this.__data[86]; },\n\tfunction () { return this.__data[87]; },\n\tfunction () { return this.__data[88]; },\n\tfunction () { return this.__data[89]; },\n\tfunction () { return this.__data[90]; },\n\tfunction () { return this.__data[91]; },\n\tfunction () { return this.__data[92]; },\n\tfunction () { return this.__data[93]; },\n\tfunction () { return this.__data[94]; },\n\tfunction () { return this.__data[95]; },\n\tfunction () { return this.__data[96]; },\n\tfunction () { return this.__data[97]; },\n\tfunction () { return this.__data[98]; },\n\tfunction () { return this.__data[99]; },\n\tfunction () { return this.__data[100]; }\n];\n\n\nlet _MyCreateClass = (function () { \n\tfunction defineProperties(target, props) { \n\t\tif( !props ) return target;\n\t\tprops.forEach( descriptor => {\n\t\t\tdescriptor.enumerable = descriptor.enumerable || false; \n\t\t\tdescriptor.configurable = true; \n\t\t\tif ('value' in descriptor) { \n\t\t\t\tdescriptor.writable = true; \n\t\t\t} \n\t\t\tObject.defineProperty(target, descriptor.key, descriptor); \n\t\t});\n\t\treturn target;\n\t} \n\treturn function (Constructor, protoProps, staticProps) { \n\t\t    defineProperties(Constructor.prototype, protoProps);\n\t\t    return defineProperties(Constructor, staticProps); \n\t\t  }; \n})();\n\n\nfunction getAccess(i) {\n\tif( access[i] ) return access[i];\n\tlet fi =  function () { return this.__data[i]; };\n\taccess[i] = fi;\n\treturn fi;\n}\n\n\nlet cache = {};\n\nfunction maker() {\n\treturn function(d, index=-1) { this.__data = d; this.__index$ = index; return this; };\n}\n\nfunction htmlEncode(s) {\n\tif(typeof s !== 'string') return htmlEncode(''+s) || '';\n\tif( s.indexOf('<') !== -1 ) s = s.replace(/</g,'&lt;');\n\tif( s.indexOf('>') !== -1 ) s = s.replace(/>/g,'&gt;');\n\treturn s;\n}\n\nfunction toHTML$(self,columns) {\n\tlet list = columns.map(c => `<tr><td class=\"frame_row_label\">${htmlEncode(c)}</td><td class=\"frame_row_data\">${htmlEncode(self[c])}</td></tr>`);\n\treturn (`<table class=\"frame_row_table\">${list.join('')}</table>`);\n}\n\n\n\n/**\n * [createAccesClass description]\n * @param  {[type]} columns [description]\n * @return {[type]}         [description]\n */\nexport function createAccesClass(columns) {\n\tlet nx = columns.join('\\t');\n\tlet aClass;\n\tif( (aClass = cache[nx]) ) return aClass;\n\tlet _constructor = maker();//function(d) { this.__data = d; console.log(\"Access Obj\", columns)};\n\taClass = cache[nx] = _MyCreateClass(\n\t\t_constructor,\n\t\tcolumns.map((key,ix) => ({key,  get: getAccess(ix), enumerable:true }))\n\t);\n\taClass.prototype._toHtml = function() {\n\t\treturn toHTML$(this,columns);\n\t};\n\taClass.prototype.__columns___ = columns;\n\taClass.prototype.__unsafeSet = _constructor;\n\treturn aClass;\n}\n\n/*\n\taClass = cache[nx] = _MyCreateClass(_constructor,\n\t\t[\n\t\t\t...columns.map((key,ix) => ({key,  get: getAccess(ix), enumerable:true })),\n\t\t\t{key: '__columns__', get: columns.slice(0), enumerable:true}\n\t\t]\n\t);\n*/",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/frame_element.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 353,
    "kind": "variable",
    "name": "access",
    "memberof": "src/frame/frame_element.js",
    "static": true,
    "longname": "src/frame/frame_element.js~access",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame_element.js",
    "importStyle": null,
    "description": "\n Used as an internal capability of a Frame\n. This is a class file generator for Frame row object ( this object can access the columns by column name)\n So if the aFrame has columns 'NAME', \"ADDRESS\"\n\n  let row = aFrame.asObj(0);\n\n   row.NAME === 'name column value'\n   row.ADDRESS\n\n  The simple monded way of doing the is to create a dictionary like object, for row ix,  row = {} ;  row[column[i]] = data[ix][i]\n   but this gives javascript JIT no opportunity to optimize,\n\ninstead we dunamically create class definition with all the accessors as 'get' (computed attribute)\nThi module create such a class. This uses the full power of Javascript and the Javascript JIT, \n\n \t_rowObj(elem) {\n\t//console.log(\"**************** make raw ********************\");\n\treturn new this.AccessClass(elem);\n\t//return this._columns.reduce((obj, k, ix) => { obj[k] = elem[ix]; return obj; }, {});\n}",
    "lineNumber": 51,
    "ignore": true
  },
  {
    "__docId__": 354,
    "kind": "variable",
    "name": "_MyCreateClass",
    "memberof": "src/frame/frame_element.js",
    "static": true,
    "longname": "src/frame/frame_element.js~_MyCreateClass",
    "access": "private",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame_element.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 156,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 355,
    "kind": "function",
    "name": "getAccess",
    "memberof": "src/frame/frame_element.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame_element.js~getAccess",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame_element.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 356,
    "kind": "variable",
    "name": "cache",
    "memberof": "src/frame/frame_element.js",
    "static": true,
    "longname": "src/frame/frame_element.js~cache",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame_element.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 184,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 357,
    "kind": "function",
    "name": "maker",
    "memberof": "src/frame/frame_element.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame_element.js~maker",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame_element.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 186,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 358,
    "kind": "function",
    "name": "htmlEncode",
    "memberof": "src/frame/frame_element.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame_element.js~htmlEncode",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame_element.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 190,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 359,
    "kind": "function",
    "name": "toHTML$",
    "memberof": "src/frame/frame_element.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame_element.js~toHTML$",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/frame_element.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 197,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 360,
    "kind": "function",
    "name": "createAccesClass",
    "memberof": "src/frame/frame_element.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/frame_element.js~createAccesClass",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/frame_element.js",
    "importStyle": "{createAccesClass}",
    "description": "[createAccesClass description]",
    "lineNumber": 209,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "columns",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 361,
    "kind": "file",
    "name": "src/frame/genColIxFunc.js",
    "content": "// jshint undef:true\r\n// jshint unused:true\r\n/*\r\nCopyright (c) 2020, Nurul Choudhury\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted, provided that the above\r\ncopyright notice and this permission notice appear in all copies.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nimport haveFrame from './haveFrame';\r\n\r\n/**\r\n * [genColIxFunc description]\r\n * @param  {[type]} aFrame [description]\r\n * @return {[type]}        [description]\r\n */\r\nexport default  function genColIxFunc(aFrame) {\r\n\taFrame = haveFrame(aFrame);\r\n\treturn ((name) => { let ix = aFrame.colIx(name); \r\n\t\tif(ix < 0) {\r\n\t\t\t//console.log('col: '+name+ ' does not Exist in Frame: '+aFrame.name, aFrame);\r\n\t\t\tthrow new Error('col: '+name+ ' does not Exist in Frame: '+aFrame.name);\r\n\t\t}\r\n\t\treturn ix;\r\n\t});\r\n}\r\n\r\n\r\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/genColIxFunc.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 362,
    "kind": "function",
    "name": "genColIxFunc",
    "memberof": "src/frame/genColIxFunc.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/genColIxFunc.js~genColIxFunc",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/genColIxFunc.js",
    "importStyle": "genColIxFunc",
    "description": "[genColIxFunc description]",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 363,
    "kind": "file",
    "name": "src/frame/getColIx.js",
    "content": "// jshint undef:true\r\n// jshint unused:true\r\n/*\r\nCopyright (c) 2020, Nurul Choudhury\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted, provided that the above\r\ncopyright notice and this permission notice appear in all copies.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nexport default function getColIx(aFrame, colName) {\r\n\tlet ix = aFrame.colIx(colName);\r\n\tif( ix === -1 ) throw new Error(`column ${colName} not in frame: ${aFrame.name}`);\r\n\treturn ix;\r\n}",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/getColIx.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 364,
    "kind": "function",
    "name": "getColIx",
    "memberof": "src/frame/getColIx.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/getColIx.js~getColIx",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/getColIx.js",
    "importStyle": "getColIx",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 365,
    "kind": "file",
    "name": "src/frame/groupby-utils/accStr.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nexport default function accStr(accum,val) {\n\tif( val ) accum.push(val);\n\treturn accum;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby-utils/accStr.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 366,
    "kind": "function",
    "name": "accStr",
    "memberof": "src/frame/groupby-utils/accStr.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby-utils/accStr.js~accStr",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/accStr.js",
    "importStyle": "accStr",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 367,
    "kind": "file",
    "name": "src/frame/groupby-utils/gb.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport gbStdDiv from './gbStdDiv';\nimport gbMean from './gbMean';\nimport gbCount from './gbCount';\nimport gbSum from './gbSum';\nimport gbMin from './gbMin';\nimport gbMax from './gbMax';\nimport gbMerge from './gbMerge';\nimport gbVal from './gbVal';\nimport gbMergeU from './gbMergeU';\nexport default  { stdDiv: gbStdDiv, mean: gbMean, count: gbCount, sum: gbSum, min: gbMin, max: gbMax, merge: gbMerge, mergeU: gbMergeU, value: gbVal };\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby-utils/gb.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 368,
    "kind": "file",
    "name": "src/frame/groupby-utils/gbCount.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isEmpty from '../../utils/types/isEmpty';\n/**\n * gbCount  count elemnts (non empty) in a group, bases on sql group by operation  \n * e.g.   'select state, quater, count(sale_price) as items_sold from annual_sales groupby state, quater'\n *        in frame operation\n *        summary = frame.groupBy(['state', 'quater', gbCount('sale_price', 'items_sold')]);\n * @param  {[type]} name    [description]\n * @param  {[type]} newName [description]\n * @return {[type]}         [description]\n */\nexport default function gbCount(name,newName) {\n\tnewName = newName || name;\n\tfunction count(action,accum,count, val) {\n\t\tif( accum === undefined ) accum = 0;\n\t\tif( action !==1 ) return [count,count];\n\t\treturn isEmpty(val)?[accum,count]:[accum+1,count+1];\n\t}\n\treturn [count,name,[()=> 0, 0 ] ,newName];\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby-utils/gbCount.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 369,
    "kind": "function",
    "name": "gbCount",
    "memberof": "src/frame/groupby-utils/gbCount.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby-utils/gbCount.js~gbCount",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/gbCount.js",
    "importStyle": "gbCount",
    "description": "gbCount  count elemnts (non empty) in a group, bases on sql group by operation  \ne.g.   'select state, quater, count(sale_price) as items_sold from annual_sales groupby state, quater'\n       in frame operation\n       summary = frame.groupBy(['state', 'quater', gbCount('sale_price', 'items_sold')]);",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "newName",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 370,
    "kind": "file",
    "name": "src/frame/groupby-utils/gbMax.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isEmpty from '../../utils/types/isEmpty';\nimport {cmpStrNum} from '../../utils/sort-helper/cmpStrNum';\n\n/**\n * gbMax max value in a group, see gbMin\n * @param  {[type]}   name    [description]\n * @param  {[type]}   newName [description]\n * @param  {Function} fn      [description]\n * @return {[type]}           [description]\n */\nexport default function gbMax(name,newName,fn) {\n\tif(fn === undefined && typeof newName === 'function') {\n\t\tfn = newName;\n\t\tnewName = undefined;\n\t}\n\tnewName = newName || name;\n\tfn = fn || maxOp;\n\tfunction max(action,accum,count, val) {\n\t\tif( accum === undefined ) accum = fn(val,val);\n\t\treturn (isEmpty(val) || action !== 1)?[accum,count]:[fn(val,accum),count+1];\t\n\t}\n\treturn [max,name,[() => undefined,0],newName];\n}\nfunction maxOp(a,b) { return cmpStrNum(a,b)>0?a:b; }\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby-utils/gbMax.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 371,
    "kind": "function",
    "name": "gbMax",
    "memberof": "src/frame/groupby-utils/gbMax.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby-utils/gbMax.js~gbMax",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/gbMax.js",
    "importStyle": "gbMax",
    "description": "gbMax max value in a group, see gbMin",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "newName",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 372,
    "kind": "function",
    "name": "maxOp",
    "memberof": "src/frame/groupby-utils/gbMax.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby-utils/gbMax.js~maxOp",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/gbMax.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 373,
    "kind": "file",
    "name": "src/frame/groupby-utils/gbMean.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isEmpty from '../../utils/types/isEmpty';\nimport {toNumber} from '../../utils/sort-helper';\n/**\n * gbMean average (mean) value of a group - see gbMin\n * @param  {string} name    column name to group\n * @param  {string} newName name to give to the grouping operation\n * @param  {function} fn function to test for empty value\n * @return {[type]}         [description]\n */\nexport default function gbMean(name,newName, fn=isEmpty) {\n\tnewName = newName || name;\n\tfunction mean(action,accum,count, val) {\n\t\tif( accum === undefined ) accum = 0;\n\t\tif( action !== 1) return [(count>0?accum/count:undefined), count];\n\t\tlet v = toNumber(val);\n\t\treturn isEmpty(v) ?[accum,count]:[accum+v,count+1];\n\t}\n\treturn [mean,name,[() => 0,0],newName];\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby-utils/gbMean.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 374,
    "kind": "function",
    "name": "gbMean",
    "memberof": "src/frame/groupby-utils/gbMean.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby-utils/gbMean.js~gbMean",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/gbMean.js",
    "importStyle": "gbMean",
    "description": "gbMean average (mean) value of a group - see gbMin",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "column name to group"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newName",
        "description": "name to give to the grouping operation"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "function to test for empty value"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 375,
    "kind": "file",
    "name": "src/frame/groupby-utils/gbMerge.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isEmpty from '../../utils/types/isEmpty';\nimport {arrDedup } from '../../array';\nimport accStr from './accStr';\n\n/**\n * gbMerge merge the values grouped rows onto a single comma seperated value\n * @param  {[type]} name    [description]\n * @param  {[type]} newName [description]\n * @param  {[type]} sep     [description]\n * @return {[type]}         [description]\n */\nexport default function gbMerge(name,newName,sep) {\n\tnewName = newName || name;\n\tsep = sep || ', ';\n\tfunction merge(action,accum,count, val) {\n\t\tif( accum === undefined ) accum = [];\n\t\tif( action !== 1) return [(accum.length===1?accum[0]:accum.join(sep)), count];\n\t\treturn isEmpty(val) ?[accum,count]:[accStr(accum,val),count+1];\n\t}\n\treturn [merge,name,[() => [],0],newName];\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby-utils/gbMerge.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 376,
    "kind": "function",
    "name": "gbMerge",
    "memberof": "src/frame/groupby-utils/gbMerge.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby-utils/gbMerge.js~gbMerge",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/gbMerge.js",
    "importStyle": "gbMerge",
    "description": "gbMerge merge the values grouped rows onto a single comma seperated value",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "newName",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "sep",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 377,
    "kind": "file",
    "name": "src/frame/groupby-utils/gbMergeU.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isEmpty from '../../utils/types/isEmpty';\nimport {arrDedup } from '../../array';\nimport accStr from './accStr';\n/**\n * [gbMergeU description]\n * @param  {[type]} name    [description]\n * @param  {[type]} newName [description]\n * @param  {[type]} sep     [description]\n * @return {[type]}         [description]\n */\nexport default function gbMergeU(name,newName,sep) {\n\tnewName = newName || name;\n\tsep = sep || ', ';\n\tfunction merge(action,accum,count, val) {\n\t\tif( accum === undefined ) accum = [];\n\t\tif( action !== 1) {\n\t\t\taccum = accum.sort();\n\t\t\taccum = arrDedup(accum);\n\t\t\treturn [(accum.length===1?accum[0]:accum.join(sep)), count];\n\t\t}\n\t\treturn isEmpty(val) ?[accum,count]:[accStr(accum,val),count+1];\n\t}\n\treturn [merge,name,[() => [],0],newName];\n}\n//we should later add gbMode (most occuring value), gbMedian (middle value)\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby-utils/gbMergeU.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 378,
    "kind": "function",
    "name": "gbMergeU",
    "memberof": "src/frame/groupby-utils/gbMergeU.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby-utils/gbMergeU.js~gbMergeU",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/gbMergeU.js",
    "importStyle": "gbMergeU",
    "description": "[gbMergeU description]",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "newName",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "sep",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 379,
    "kind": "file",
    "name": "src/frame/groupby-utils/gbMin.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isEmpty from '../../utils/types/isEmpty';\nimport {cmpStrNum} from '../../utils/sort-helper/cmpStrNum';\n/**\n * gbMin  minimum elemnts value (non empty) in a group, bases on sql group by operation  \n * e.g.   'select state, quater, product_id, min(sale_price) as min_prod_price from annual_sales groupby state, quater'\n *        in frame operation\n *        summary = frame.groupBy(['state', 'quater', 'product_id\", gbMin('sale_price', 'min_prod_price')]);\n * @param  {[type]}   name    [description]\n * @param  {[type]}   newName [description]\n * @param  {Function} fn      [description]\n * @return {[type]}           [description]\n */\nexport default function gbMin(name,newName,fn) {\n\tif(fn === undefined && typeof newName === 'function') {\n\t\tfn = newName;\n\t\tnewName = undefined;\n\t}\n\tnewName = newName || name;\n\tfn = fn || minOp;\n\tfunction min(action,accum,count, val) {\n\t\tif( accum === undefined ) accum = fn(val,val);\n\t\treturn (isEmpty(val) || action !== 1)?[accum,count]:[fn(val,accum)<0?val:accum,count+1];\n\t}\n\treturn [min,name,[() => undefined,0],newName];\n}\n\nfunction minOp(a,b) { return cmpStrNum(a,b)<0?a:b; }\n\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby-utils/gbMin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 380,
    "kind": "function",
    "name": "gbMin",
    "memberof": "src/frame/groupby-utils/gbMin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby-utils/gbMin.js~gbMin",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/gbMin.js",
    "importStyle": "gbMin",
    "description": "gbMin  minimum elemnts value (non empty) in a group, bases on sql group by operation  \ne.g.   'select state, quater, product_id, min(sale_price) as min_prod_price from annual_sales groupby state, quater'\n       in frame operation\n       summary = frame.groupBy(['state', 'quater', 'product_id\", gbMin('sale_price', 'min_prod_price')]);",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "newName",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 381,
    "kind": "function",
    "name": "minOp",
    "memberof": "src/frame/groupby-utils/gbMin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby-utils/gbMin.js~minOp",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/gbMin.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 382,
    "kind": "file",
    "name": "src/frame/groupby-utils/gbStdDiv.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isEmpty from '../../utils/types/isEmpty';\nimport {toNumber} from '../../utils/sort-helper';\n/**\n * gbStdDiv standard deviation - see gbMin\n * @param  {[type]} name    [description]\n * @param  {[type]} newName [description]\n * @return {[type]}         [description]\n */\nexport default function gbStdDiv(name, newName) {\n\tnewName = newName || name;\n\tfunction stdDiv(action,[accumSq,accum],count, val) {\n\t\tif( accum === undefined ) accum = [0,0];\n\t\tif( action === 1) {\n\t\t\tif(count>1) return [Math.sqrt((count*accumSq-accum*accum)/count*(count-1.0)),count];\n\t\t\telse if(count > 0) return[[undefined,accum/count], count];\n\t\t\telse return [[undefined,undefined],0];\n\t\t}\n\t\tlet v = toNumber(val);\n\t\treturn isEmpty(v) ?[[accumSq,accum],count]:[[accumSq+v*v,accum+v],count++];\n\t}\n\treturn [stdDiv,name,[() => [0,0],0],newName];\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby-utils/gbStdDiv.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 383,
    "kind": "function",
    "name": "gbStdDiv",
    "memberof": "src/frame/groupby-utils/gbStdDiv.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby-utils/gbStdDiv.js~gbStdDiv",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/gbStdDiv.js",
    "importStyle": "gbStdDiv",
    "description": "gbStdDiv standard deviation - see gbMin",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "newName",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 384,
    "kind": "file",
    "name": "src/frame/groupby-utils/gbSum.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport {toNumber} from '../../utils/sort-helper';\n/**\n * gbSum  sum eelemnts in a group, bases on sql group by operation  \n * e.g.   'select state, quater, sum(sale_price) as sales from annual_sales groupby state, quater'\n *        in frame operation\n *        summary = frame.groupBy(['state', 'quater', gbSum('sale_price', 'sales')]);\n *        \n * @param  {[type]} name    [description]\n * @param  {[type]} newName [description]\n * @return {[type]}         [description]\n */\nexport default function gbSum(name,newName) {\n\tnewName = newName || name;\n\tfunction sum(action,accum,count, val) {\n\t\tif( accum === undefined ) accum = 0;\n\t\t\t\t\n\t\tif( action !==1 ) return  [accum,count];\n\t\telse {\n\t\t\tlet v = toNumber(val);\n\t\t\treturn  v===undefined || isNaN(v) ?[accum,count]:[accum+v,count+1];\n\t\t}\n\t}\n\treturn [sum,name,[()=>0,0],newName];\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby-utils/gbSum.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 385,
    "kind": "function",
    "name": "gbSum",
    "memberof": "src/frame/groupby-utils/gbSum.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby-utils/gbSum.js~gbSum",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/gbSum.js",
    "importStyle": "gbSum",
    "description": "gbSum  sum eelemnts in a group, bases on sql group by operation  \ne.g.   'select state, quater, sum(sale_price) as sales from annual_sales groupby state, quater'\n       in frame operation\n       summary = frame.groupBy(['state', 'quater', gbSum('sale_price', 'sales')]);\n       ",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "newName",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 386,
    "kind": "file",
    "name": "src/frame/groupby-utils/gbVal.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport isEmpty from '../../utils/types/isEmpty';\nimport {arrDedup } from '../../array';\nimport accStr from './accStr';\n\n/**\n * gbVal merge the values grouped rows onto a single comma seperated value\n * @param  {[type]} newName [description]\n * @param  {[type]} value     [description]\n * @return {[type]}         [description]\n */\nexport default function gbVal(newName,value) {\n\tnewName = newName || '';\n\tfunction getVal() {\n\t\treturn [value, 0];\n\t}\n\treturn [getVal,undefined,[() => value,0],newName];\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby-utils/gbVal.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 387,
    "kind": "function",
    "name": "gbVal",
    "memberof": "src/frame/groupby-utils/gbVal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby-utils/gbVal.js~gbVal",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/gbVal.js",
    "importStyle": "gbVal",
    "description": "gbVal merge the values grouped rows onto a single comma seperated value",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "newName",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 388,
    "kind": "file",
    "name": "src/frame/groupby-utils/index.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nimport _gbSum from './gbSum';\nexport const gbSum = _gbSum;\n\nimport _gbCount from './gbCount';\nexport const gbCount = _gbCount;\n\nimport _gbMin from './gbMin';\nexport const gbMin = _gbMin;\n\nimport _gbMax from './gbMax';\nexport const gbMax = _gbMax;\n\nimport _gbMean from './gbMean';\nexport const gbMean = _gbMean;\n\nimport _gbStdDiv from './gbStdDiv';\nexport const gbStdDiv = _gbStdDiv;\n\nimport _gbMerge from './gbMerge';\nexport const gbMerge = _gbMerge;\n\nimport _gbVal from './gbVal';\nexport const gbVal = _gbVal;\n\nimport _gbMergeU from './gbMergeU';\nexport const gbMergeU = _gbMergeU;\n\nimport _accStr from './accStr';\nexport const accStr = _accStr;\n\nimport _gb from './gb';\nexport const gb = _gb;\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby-utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 389,
    "kind": "variable",
    "name": "gbSum",
    "memberof": "src/frame/groupby-utils/index.js",
    "static": true,
    "longname": "src/frame/groupby-utils/index.js~gbSum",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/index.js",
    "importStyle": "{gbSum}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 390,
    "kind": "variable",
    "name": "gbCount",
    "memberof": "src/frame/groupby-utils/index.js",
    "static": true,
    "longname": "src/frame/groupby-utils/index.js~gbCount",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/index.js",
    "importStyle": "{gbCount}",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 391,
    "kind": "variable",
    "name": "gbMin",
    "memberof": "src/frame/groupby-utils/index.js",
    "static": true,
    "longname": "src/frame/groupby-utils/index.js~gbMin",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/index.js",
    "importStyle": "{gbMin}",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 392,
    "kind": "variable",
    "name": "gbMax",
    "memberof": "src/frame/groupby-utils/index.js",
    "static": true,
    "longname": "src/frame/groupby-utils/index.js~gbMax",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/index.js",
    "importStyle": "{gbMax}",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 393,
    "kind": "variable",
    "name": "gbMean",
    "memberof": "src/frame/groupby-utils/index.js",
    "static": true,
    "longname": "src/frame/groupby-utils/index.js~gbMean",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/index.js",
    "importStyle": "{gbMean}",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 394,
    "kind": "variable",
    "name": "gbStdDiv",
    "memberof": "src/frame/groupby-utils/index.js",
    "static": true,
    "longname": "src/frame/groupby-utils/index.js~gbStdDiv",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/index.js",
    "importStyle": "{gbStdDiv}",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 395,
    "kind": "variable",
    "name": "gbMerge",
    "memberof": "src/frame/groupby-utils/index.js",
    "static": true,
    "longname": "src/frame/groupby-utils/index.js~gbMerge",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/index.js",
    "importStyle": "{gbMerge}",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 396,
    "kind": "variable",
    "name": "gbVal",
    "memberof": "src/frame/groupby-utils/index.js",
    "static": true,
    "longname": "src/frame/groupby-utils/index.js~gbVal",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/index.js",
    "importStyle": "{gbVal}",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 397,
    "kind": "variable",
    "name": "gbMergeU",
    "memberof": "src/frame/groupby-utils/index.js",
    "static": true,
    "longname": "src/frame/groupby-utils/index.js~gbMergeU",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/index.js",
    "importStyle": "{gbMergeU}",
    "description": null,
    "lineNumber": 41,
    "undocument": true
  },
  {
    "__docId__": 398,
    "kind": "variable",
    "name": "accStr",
    "memberof": "src/frame/groupby-utils/index.js",
    "static": true,
    "longname": "src/frame/groupby-utils/index.js~accStr",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/index.js",
    "importStyle": "{accStr}",
    "description": null,
    "lineNumber": 44,
    "undocument": true
  },
  {
    "__docId__": 399,
    "kind": "variable",
    "name": "gb",
    "memberof": "src/frame/groupby-utils/index.js",
    "static": true,
    "longname": "src/frame/groupby-utils/index.js~gb",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby-utils/index.js",
    "importStyle": "{gb}",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 400,
    "kind": "file",
    "name": "src/frame/groupby.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport {toNumber} from '../utils/sort-helper';\nimport haveFrame from './haveFrame';\nimport genColIxFunc from './genColIxFunc';\nimport isFunction from '../utils/types/isFunction';\n\nconst  isString = (s) =>  (typeof s) === 'string';\n\n\n/*\n\n\t\t\n\n*/\n/**\n * The frame should already be sorted by the groupBy order, or\n * @param  {[type]} groupColsOrig [description]\n * @param  {[type]} aFrame        [description]\n * @param  {[type]} accumList     [description]\n * @return {[type]}               [description]\n */\nexport function groupBy(groupColsOrig,aFrame, accumList) {\n\taFrame = haveFrame(aFrame);\n\taccumList = accumList || [];\n\t\n\tlet groupCols = groupColsOrig.map( (name,i) => isString(name)? name: genAccFunc(name,aFrame,i) );\n\tlet change = genChange(groupCols,aFrame);\n\tlet plen = groupCols.length;\n\t//groupCols = groupCols.filter(v => v);\n\tlet accList = accumList.map( (fn,ix) => genAccFunc(fn,aFrame,plen+ix) );\n\tlet crResult = fillResult(groupCols,accList);\n\t//console.log('groupCols/accList', groupCols, accList.length)\n\tlet colNames = groupCols.map(getColName).concat(accList.map(f => f()));\n\t//console.log('colNames',colNames)\n\taccList = groupCols.filter(v => isFunction(v)).concat(accList);\n\t//console.log(colNames);\n\tlet data = aFrame.data;\n\tlet len = aFrame.length;\n\tlet dataRes = [];\n\tlet accLen = accList.length;\n\tfor(let i=0; i<len; i++) {\n\t\tlet row = data[i];\n\t\tlet [transition,prev] = change(row,i);\n\t\t//console.log('Trans/prev',transition, prev)\n\t\tlet result;\n\t\tif( transition === 2) {\n\t\t\tresult = crResult(prev);\n\t\t\t//console.log('crResult', prev, result);\n\t\t\tdataRes.push(result);\n\t\t} else if( transition === 0 ) {\n\t\t\tfor(let j=0; j<accLen; j++) accList[j](0,row);\n\t\t} \n\t\tfor(let j=0; j<accLen; j++) accList[j](1,row); \n\t} \n\tif( len >0 ) { \n\t\tlet prev = change([],-1)[1];\n\t\tdataRes.push(crResult(prev));\n\t}\n\treturn new aFrame.constructor(dataRes,colNames,aFrame.name+'grouped');\n}\n\n\n\n/*\n\t Adapter that take the groupby function sum(), count() ...\n\t and incorporates it in the groupby scanner.\n*/\n\nfunction genAccFunc([func,name,[init, countInit],newName],aFrame, newIx) {\n\tlet cIx = genColIxFunc(aFrame)(name); \n\tlet accum = init();\n\tlet counter  = 0;\n\treturn function (transition,aRow) {\n\t\tif(arguments.length === 0) return newName;\n\t\tlet res;\n\t\tswitch(transition) {\n\t\tcase 2: // finalize - when we come to the e\n\t\t\tres = func(2,accum,counter);\n\t\t\t//res[2] = newIx;\n\t\t\taccum = init();\n\t\t\tcounter = countInit;                    \n\t\t\treturn res;\n\t\tcase 0: // initialize;\n\t\t\taccum = init();\n\t\t\tcounter = countInit;\n\t\t\tbreak;\n\t\tcase 1: // accumulate\n\t\t\t[accum,counter] = func(1,accum,counter, aRow[cIx],aRow); //[accum,counter]\n\t\t\treturn counter;\n\t\t}\n\t};\n}\n\nvar RET_FIRST = [0];\nvar RET_NOCHANGE = [1];\n/*\n\n\t\tHelper function for groupBy, assumes that data is sorted in the groupBy order,\n\t\tthen it detects when we move from one group to another\n*/\nfunction genChange(cols,aFrame) {\n\taFrame = haveFrame(aFrame);\n\tlet changeSet = cols.map(() => undefined);\n\tlet cIx = genColIxFunc(aFrame);\n\tlet len = aFrame.columns.legth;\n\tlet ixList = cols.filter(name => isString(name)).map(name => cIx(name));\n\treturn function(row,ix) {\n\t\t//console.log('trans',res,changeSet );\n\t\tlet ln = ixList.length;\n\t\tfor(let i=0; i<ln; i++) {\n\t\t\tlet pi = ixList[i]|0;\n\t\t\tif( row[pi] === changeSet[i]) continue;\n\t\t\t// something changed\n\t\t\tlet res = ixList.map(i => row[i]);\n\t\t\tlet prev = changeSet;\n\t\t\tchangeSet = res;\n\t\t\treturn ix===0?RET_FIRST:[2, prev];           \n\t\t}\n\t\treturn RET_NOCHANGE;\n\t};\n}\n\nfunction fillResult(groupCols, compList) {\n\tlet names = groupCols.filter(name => isString(name));\n\t//let index = groupCols.map( v => );\n\tlet ixL = groupCols.map((nameOrFunc,i) => {\n\t\tlet ix = names.indexOf(nameOrFunc);\n\t\t//console.log(ix, isString(nameOrFunc)?nameOrFunc:'Func()');\n\t\treturn ix !== -1 ?((row) => row[ix]):( (row) => nameOrFunc(2,row)[0]);  //name may be a string or mapping function\n\t});\n\tixL = ixL.concat(compList|| []);\n\treturn function(prev) {\n\t\tlet res = ixL.map( fn => fn(prev) );\n\t\treturn res;\n\t};\n}\n\n\n\nfunction getColName(name) {\n\tif(isString(name)) return name;\n\tif(isFunction(name)) return name();\n\t//return name();\n\tthrow new Error('String or function expected - but got '+name);\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/groupby.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 401,
    "kind": "function",
    "name": "isString",
    "memberof": "src/frame/groupby.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby.js~isString",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/groupby.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 402,
    "kind": "function",
    "name": "groupBy",
    "memberof": "src/frame/groupby.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby.js~groupBy",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/groupby.js",
    "importStyle": "{groupBy}",
    "description": "The frame should already be sorted by the groupBy order, or",
    "lineNumber": 37,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "groupColsOrig",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "accumList",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 403,
    "kind": "function",
    "name": "genAccFunc",
    "memberof": "src/frame/groupby.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby.js~genAccFunc",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/groupby.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 84,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 404,
    "kind": "variable",
    "name": "RET_FIRST",
    "memberof": "src/frame/groupby.js",
    "static": true,
    "longname": "src/frame/groupby.js~RET_FIRST",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/groupby.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 405,
    "kind": "variable",
    "name": "RET_NOCHANGE",
    "memberof": "src/frame/groupby.js",
    "static": true,
    "longname": "src/frame/groupby.js~RET_NOCHANGE",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/groupby.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 406,
    "kind": "function",
    "name": "genChange",
    "memberof": "src/frame/groupby.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby.js~genChange",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/groupby.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 116,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 407,
    "kind": "function",
    "name": "fillResult",
    "memberof": "src/frame/groupby.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby.js~fillResult",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/groupby.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 408,
    "kind": "function",
    "name": "getColName",
    "memberof": "src/frame/groupby.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/groupby.js~getColName",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/groupby.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 155,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 409,
    "kind": "file",
    "name": "src/frame/haveFrame.js",
    "content": "// jshint undef:true\r\n// jshint unused:true\r\n/*\r\nCopyright (c) 2020, Nurul Choudhury\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted, provided that the above\r\ncopyright notice and this permission notice appear in all copies.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nimport BaseFrame from './BaseFrame';\r\n\r\n\r\nexport default function haveFrame(aFrame) {\r\n\tif(!aFrame) throw new Error('Frame expected - but undefined supplied');\r\n\tif( ! (aFrame instanceof BaseFrame) ) throw new Error('Frame expected - but supplied: '+objName(aFrame));\r\n\treturn aFrame;\r\n}\r\n\r\n\r\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/haveFrame.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 410,
    "kind": "function",
    "name": "haveFrame",
    "memberof": "src/frame/haveFrame.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/haveFrame.js~haveFrame",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/haveFrame.js",
    "importStyle": "haveFrame",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 411,
    "kind": "file",
    "name": "src/frame/index.js",
    "content": "// jshint undef:true\r\n// jshint unused:true\r\n/*\r\nCopyright (c) 2020, Nurul Choudhury\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted, provided that the above\r\ncopyright notice and this permission notice appear in all copies.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nexport * from './frame';\r\nexport * from './frame-utils';\r\nexport * from './groupby-utils';\r\n\r\nimport hf from './haveFrame';\r\nimport _arrToCol from './arrToCol'\r\nexport const haveFrame = hf;\r\nexport const arrToCol = _arrToCol;\r\nexport const __FRAME__ = ['frame-utils', 'groupby-utils', 'join-utils'];",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 412,
    "kind": "variable",
    "name": "haveFrame",
    "memberof": "src/frame/index.js",
    "static": true,
    "longname": "src/frame/index.js~haveFrame",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/index.js",
    "importStyle": "{haveFrame}",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 413,
    "kind": "variable",
    "name": "arrToCol",
    "memberof": "src/frame/index.js",
    "static": true,
    "longname": "src/frame/index.js~arrToCol",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/index.js",
    "importStyle": "{arrToCol}",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 414,
    "kind": "variable",
    "name": "__FRAME__",
    "memberof": "src/frame/index.js",
    "static": true,
    "longname": "src/frame/index.js~__FRAME__",
    "access": "private",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/index.js",
    "importStyle": "{__FRAME__}",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 415,
    "kind": "file",
    "name": "src/frame/join-utils/changeNameTo.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * changeNameTo takes a change name description array of two elements containing the old names and the new names\n * e.g oldName=newName 'a name change descriptor' where '=' is the seperator\n * return an array of 2 strings [oldName, newName]\n * @param  {string} name old name to new name descriptor, 'OLD=NEW'\n * @param  {string} sep  string that seperates the old name from the new\n * @return {[oldName, newName]}      and ar\n */\nexport default function changeNameTo(name, sep) {\n\t let res = name.split(sep);\n\t if( res.length === 1) res.push(name);\n\t return res;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/changeNameTo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 416,
    "kind": "function",
    "name": "changeNameTo",
    "memberof": "src/frame/join-utils/changeNameTo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/changeNameTo.js~changeNameTo",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/changeNameTo.js",
    "importStyle": "changeNameTo",
    "description": "changeNameTo takes a change name description array of two elements containing the old names and the new names\ne.g oldName=newName 'a name change descriptor' where '=' is the seperator\nreturn an array of 2 strings [oldName, newName]",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "old name to new name descriptor, 'OLD=NEW'"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "sep",
        "description": "string that seperates the old name from the new"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[oldName, newName]"
      ],
      "spread": false,
      "description": "and ar"
    }
  },
  {
    "__docId__": 417,
    "kind": "file",
    "name": "src/frame/join-utils/colName.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport changeNameTo from './changeNameTo';\n/**\n * colName(['1.DX=DX1', '2.DX=DX2', '1.FX=F1', ...], ['DX','FX',...],['DX',...])\n * \n * returns [ [new-col-list], [ col-mapping]]\n * where <col-mapping> =         [<frame number>{0,1}, <old-col-index>, <new-col-index>] \n * result od the code above\n * [ [ 'DX1', 'DX2', 'F1', ...], [ [ 0, 0, 0 ], [ 1, 0, 1 ], [ 0, 1, 2 ], ...] ]\n *\n * Note: \n * @param  {[string]} list  resulting column map\n * @param  {[string]} colsNameList1 [description]\n * @param  {[string]} colsNameList2 [description]\n * @return {[[string],[string]]}       [ [new-col-list], [ col-mapping]]\n */\nexport default function colName(list, colsNameList1, colsNameList2) { /*local*/\n\tlet res = list.map(s => splitName(s,colsNameList1,colsNameList2));\n\treturn [newCols(res), newColMapping(res,[colsNameList1,colsNameList2])];\n}\n\n/**\n * [newCols description]\n * @param  {[type]} list [description]\n * @return {[type]}      [description]\n */\nfunction newCols(list)  { \n\tvar l = list.map( ([_,[old,newS]]) => newS);\n\treturn l.reduce(([list,dict],name) => convert(dict,list,name), [[],{}])[0];\n\t\t\n\tfunction convert(dict,list,name) {\n\t\tlet newName = name;\n\n\t\t// make sure newName is a name not in the dictionary(of existing column names)\n\t\t// keep on generating names until we find a uniqie one.\n\t\tfor(let i=1; dict[newName]; i++) {\n\t\t\tnewName = name + '' +i;\n\t\t}\n\t\tdict[newName] = true; // name is in the list of columns names\n\t\tlist.push(newName);   // we are building this list of column names\n\t\treturn [list,dict];\n\t} \n\t\t\n}\n\n/**\n * [newColMapping description]\n * @param  {Array} list    [ ...[tableIx, [oldColName,newColName]]]\n * @param  {[colsFronTablw1,colsFromTable2]} mapping [description]\n * @return {[type]}         [description]\n */\nfunction newColMapping(list, mapping) {\n\treturn list.map(([tableIx, [oldColName,newColName]]) => [ tableIx, oldToNew(tableIx, oldColName)]);\n\t//===\n\tfunction oldToNew(tableIx, name) {\n\t\tlet i = mapping[tableIx].indexOf(name);\n\t\tif( i === -1) throw new Error('column: '+name+' not found in frame'+ix + ' '+mapping[ix].map(s => `\"${s}\"`).join(','));\n\t\treturn i;\n\t}\n}                              \n\n/**\n * Categorize the a column description in a join operation, i.e we are joining two tables \n * exanples.  \n * \t\t'city' - column city is only in one table\n * \t\t'1.city' - use the city column from table1 (optional if city is only in table1 but compulsory if city is in bolh tables)\n * \t\t'2.population'  \n * \t\t'2.st=state'\n *\n * \n * \t1. Which table it comes from - e.g. '1.name' - column 'name' from first table; or '2.desc' - column 'desc' from second table \n * \t2. What name should it be given in the result table i.e.   '1.name=FullName' \n * \t3. Can the table, for a column name, be identified unambigiously or must we be explicit; e.g. 'desc' is the same as '2.desc' if table1 does not have a  'desc' column \n * \t4. Be forgiving and allow disambiguation even if it is unneeded\n * \t5. If we do not give an explicit new name for the target column, use the originam name e.g.  '2.city' the target name is also 'city'\n *\n * \n * @param  {string} str   Column selection string e.g. '1.name,2.name=newName'\n * @param  {[string]} cols1 arra of columns names\n * @param  {[string]} cols2 [description]\n * @return {[tableIX, [oldColName, finalColName]]}   -     \n */\nfunction splitName(str,cols1,cols2) {\n\tlet res;\n\tlet tables = [cols1,cols2];\n\tif( /[12]\\./.test(str)) {\n\t\tres = str.split('.');\n\t} else {\n\t\tlet [oldName,newName] = changeNameTo(str, '=');\n\t\tlet pos1 = cols1.indexOf(oldName);\n\t\tlet pos2 = cols2.indexOf(oldName);\n\t\tif( pos1 === -1 && pos2 === -1) throw new Error('column: '+oldName+ ' not found in table: '+(pos1 === -1?cols1:cols2));\n\t\tif( pos1 !== -1 && pos2 !== -1) throw new Error('column: '+oldName+ ' is ambigious');\n\t\tres = [pos1===-1?2:1,str];\n\t}\n\t\t\n\tres[0] = +res[0]-1;\n\tres[1] = changeNameTo(res[1], '=');\n\tlet [tableId, [oldName, newName]] = res;\n\tif( tables[tableId].indexOf(oldName) === -1 ) throw new Error('column: '+oldName+ ' not found in table'+(tableId+1) + ' '+tables[tableId]);\n\treturn res;\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/colName.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 418,
    "kind": "function",
    "name": "colName",
    "memberof": "src/frame/join-utils/colName.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/colName.js~colName",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/colName.js",
    "importStyle": "colName",
    "description": "colName(['1.DX=DX1', '2.DX=DX2', '1.FX=F1', ...], ['DX','FX',...],['DX',...])\n\nreturns [ [new-col-list], [ col-mapping]]\nwhere <col-mapping> =         [<frame number>{0,1}, <old-col-index>, <new-col-index>] \nresult od the code above\n[ [ 'DX1', 'DX2', 'F1', ...], [ [ 0, 0, 0 ], [ 1, 0, 1 ], [ 0, 1, 2 ], ...] ]\n\nNote: ",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": "resulting column map"
      },
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "colsNameList1",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "colsNameList2",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[[string],[string]]"
      ],
      "spread": false,
      "description": "[ [new-col-list], [ col-mapping]]"
    }
  },
  {
    "__docId__": 419,
    "kind": "function",
    "name": "newCols",
    "memberof": "src/frame/join-utils/colName.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/colName.js~newCols",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/join-utils/colName.js",
    "importStyle": null,
    "description": "[newCols description]",
    "lineNumber": 42,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    },
    "ignore": true
  },
  {
    "__docId__": 420,
    "kind": "function",
    "name": "newColMapping",
    "memberof": "src/frame/join-utils/colName.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/colName.js~newColMapping",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/join-utils/colName.js",
    "importStyle": null,
    "description": "[newColMapping description]",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": "[ ...[tableIx, [oldColName,newColName]]]"
      },
      {
        "nullable": null,
        "types": [
          "[colsFronTablw1,colsFromTable2]"
        ],
        "spread": false,
        "optional": false,
        "name": "mapping",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    },
    "ignore": true
  },
  {
    "__docId__": 421,
    "kind": "function",
    "name": "splitName",
    "memberof": "src/frame/join-utils/colName.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/colName.js~splitName",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/join-utils/colName.js",
    "importStyle": null,
    "description": "Categorize the a column description in a join operation, i.e we are joining two tables \nexanples.  \n\t\t'city' - column city is only in one table\n\t\t'1.city' - use the city column from table1 (optional if city is only in table1 but compulsory if city is in bolh tables)\n\t\t'2.population'  \n\t\t'2.st=state'\n\n\n\t1. Which table it comes from - e.g. '1.name' - column 'name' from first table; or '2.desc' - column 'desc' from second table \n\t2. What name should it be given in the result table i.e.   '1.name=FullName' \n\t3. Can the table, for a column name, be identified unambigiously or must we be explicit; e.g. 'desc' is the same as '2.desc' if table1 does not have a  'desc' column \n\t4. Be forgiving and allow disambiguation even if it is unneeded\n\t5. If we do not give an explicit new name for the target column, use the originam name e.g.  '2.city' the target name is also 'city'",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "Column selection string e.g. '1.name,2.name=newName'"
      },
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "cols1",
        "description": "arra of columns names"
      },
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "cols2",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[tableIX, [oldColName, finalColName]]"
      ],
      "spread": false,
      "description": ""
    },
    "ignore": true
  },
  {
    "__docId__": 422,
    "kind": "file",
    "name": "src/frame/join-utils/EMPTY_KEY.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nexport default  '@#$-EMPTY-$#@';\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/EMPTY_KEY.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 423,
    "kind": "file",
    "name": "src/frame/join-utils/fullInnerJoin.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport haveFrame from '../haveFrame';\nimport getTransform from './getTransform';\nimport changeNameTo from './changeNameTo';\nimport joinOp from './joinOp';\nimport project from './project';\n/**\n *\t\t example of a join\n *\n *\t\t innerJoin(frame1,frame2, [list-of-cols in resulting table], \"join-col1==join-col2\")\n *\t\t \n * @param  {Frame} frame1      [description]\n * @param  {Frame} frame2      [description]\n * @param  {[string]} projectList the list of final column names\n * @param  {string} joinOn      either a common column name, or a ttring of the form 'col1==col2'\n * @param  {function} filter    filter function\n * @return {Frame}             a Frame resulting from the inner join\n */\nexport default function fullInnerJoin(frame1, frame2, projectList, joinOn,filter) {\n\tframe1 = haveFrame(frame1);\n\tframe2 = haveFrame(frame2);\n\t\n\tlet {newColNames, transform, mapping} = getTransform(projectList, frame1.columns, frame2.columns);\n\t//console.log(mapping);\n\tlet [col1, col2] = changeNameTo(joinOn, '==');\n\tlet cmp = joinOp(frame1,frame2, col1, col2,filter);\n\t//let transform = project(mapping);         // reansform function\n\tlet res = [];\n\treturn new frame1.constructor(frame1.data.reduce((res, row1) => matchIt(res,row1),[]), newColNames);\n\n\t//============\n\tfunction matchIt(res,row1) {\n\t\tframe2.data.filter( row2 => cmp(row1,row2)).forEach( r => res.push(transform(row1, r)));\n\t\treturn res;\n\t}\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/fullInnerJoin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 424,
    "kind": "function",
    "name": "fullInnerJoin",
    "memberof": "src/frame/join-utils/fullInnerJoin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/fullInnerJoin.js~fullInnerJoin",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/fullInnerJoin.js",
    "importStyle": "fullInnerJoin",
    "description": "\t example of a join\n\n\t innerJoin(frame1,frame2, [list-of-cols in resulting table], \"join-col1==join-col2\")\n\t ",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "frame1",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "frame2",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "projectList",
        "description": "the list of final column names"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "joinOn",
        "description": "either a common column name, or a ttring of the form 'col1==col2'"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "filter function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Frame"
      ],
      "spread": false,
      "description": "a Frame resulting from the inner join"
    }
  },
  {
    "__docId__": 425,
    "kind": "file",
    "name": "src/frame/join-utils/getDict.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport EMPTY_KEY from './EMPTY_KEY';\nimport {EMPTY_ARRAY} from '../../utils/constants';\nexport default function getDict(dict, key, noEmpty) { /*local*/\n\tif(noEmpty && !key) return EMPTY_ARRAY;\n\tkey = key || EMPTY_KEY;\n\treturn dict[key] || EMPTY_ARRAY;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/getDict.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 426,
    "kind": "function",
    "name": "getDict",
    "memberof": "src/frame/join-utils/getDict.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/getDict.js~getDict",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/getDict.js",
    "importStyle": "getDict",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 427,
    "kind": "file",
    "name": "src/frame/join-utils/getTransform.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport project from './project';\nimport colName from './colName';\n/**\n * Takes two column list (or one) and a mapping list and returns a transform function\n * That will create a new row taking columns from each of the lists \n * @param  {[string]} projectList example ['1.DX=DX1', '2.DX=DX2', '1.FX=F1', ...], ['DX','FX',...],['DX',...]\n * @param  {[string]} cols1       example ['DX','FX',...]\n * @param  {[string]} cols2       example 'DX',...]\n * @return {Object}             return an object of the form {transform, newColumnNames, mapingArray}\n *                              the mapping array = [ ...[<frame number>{0,1}, <old-col-index>, <new-col-index>]]\n */\nexport default function getTransform(projectList, cols1,cols2) { /*local*/\n\tlet [newColNames, mapping] = colName(projectList, cols1, (cols2 || []));\n\tlet transform = project(mapping); \n\treturn {transform,newColNames,mapping};\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/getTransform.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 428,
    "kind": "function",
    "name": "getTransform",
    "memberof": "src/frame/join-utils/getTransform.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/getTransform.js~getTransform",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/getTransform.js",
    "importStyle": "getTransform",
    "description": "Takes two column list (or one) and a mapping list and returns a transform function\nThat will create a new row taking columns from each of the lists ",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "projectList",
        "description": "example ['1.DX=DX1', '2.DX=DX2', '1.FX=F1', ...], ['DX','FX',...],['DX',...]"
      },
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "cols1",
        "description": "example ['DX','FX',...]"
      },
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "cols2",
        "description": "example 'DX',...]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "return an object of the form {transform, newColumnNames, mapingArray}\n                             the mapping array = [ ...[<frame number>{0,1}, <old-col-index>, <new-col-index>]]"
    }
  },
  {
    "__docId__": 429,
    "kind": "file",
    "name": "src/frame/join-utils/index.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nimport _EMPTY_KEY from './EMPTY_KEY';\nexport const EMPTY_KEY = _EMPTY_KEY;\n\nimport _changeNameTo from './changeNameTo';\nexport const changeNameTo = _changeNameTo;\n\nimport _colName from './colName';\nexport const colName = _colName;\n\nimport _project from './project';\nexport const project = _project;\n\nimport _getTransform from './getTransform';\nexport const getTransform = _getTransform;\n\nimport _joinOp from './joinOp';\nexport const joinOp = _joinOp;\n\nimport _fullInnerJoin from './fullInnerJoin';\nexport const fullInnerJoin = _fullInnerJoin;\n\nimport _getDict from './getDict';\nexport const getDict = _getDict;\n\nexport * from './innerJoin';\nimport _localGroupBy from './localGroupBy';\nexport const localGroupBy = _localGroupBy;\n\nimport _indexFrameColumn from './indexFrameColumn';\nexport const indexFrameColumn = _indexFrameColumn;\n\nexport * from './leftJoin';\nimport _matchIt from './matchIt';\nexport const matchIt = _matchIt;\n\nexport * from './outerJoin';\nexport * from './reverseProjectList1';\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 430,
    "kind": "variable",
    "name": "EMPTY_KEY",
    "memberof": "src/frame/join-utils/index.js",
    "static": true,
    "longname": "src/frame/join-utils/index.js~EMPTY_KEY",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/index.js",
    "importStyle": "{EMPTY_KEY}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 431,
    "kind": "variable",
    "name": "changeNameTo",
    "memberof": "src/frame/join-utils/index.js",
    "static": true,
    "longname": "src/frame/join-utils/index.js~changeNameTo",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/index.js",
    "importStyle": "{changeNameTo}",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 432,
    "kind": "variable",
    "name": "colName",
    "memberof": "src/frame/join-utils/index.js",
    "static": true,
    "longname": "src/frame/join-utils/index.js~colName",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/index.js",
    "importStyle": "{colName}",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 433,
    "kind": "variable",
    "name": "project",
    "memberof": "src/frame/join-utils/index.js",
    "static": true,
    "longname": "src/frame/join-utils/index.js~project",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/index.js",
    "importStyle": "{project}",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 434,
    "kind": "variable",
    "name": "getTransform",
    "memberof": "src/frame/join-utils/index.js",
    "static": true,
    "longname": "src/frame/join-utils/index.js~getTransform",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/index.js",
    "importStyle": "{getTransform}",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 435,
    "kind": "variable",
    "name": "joinOp",
    "memberof": "src/frame/join-utils/index.js",
    "static": true,
    "longname": "src/frame/join-utils/index.js~joinOp",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/index.js",
    "importStyle": "{joinOp}",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 436,
    "kind": "variable",
    "name": "fullInnerJoin",
    "memberof": "src/frame/join-utils/index.js",
    "static": true,
    "longname": "src/frame/join-utils/index.js~fullInnerJoin",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/index.js",
    "importStyle": "{fullInnerJoin}",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 437,
    "kind": "variable",
    "name": "getDict",
    "memberof": "src/frame/join-utils/index.js",
    "static": true,
    "longname": "src/frame/join-utils/index.js~getDict",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/index.js",
    "importStyle": "{getDict}",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 438,
    "kind": "variable",
    "name": "localGroupBy",
    "memberof": "src/frame/join-utils/index.js",
    "static": true,
    "longname": "src/frame/join-utils/index.js~localGroupBy",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/index.js",
    "importStyle": "{localGroupBy}",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 439,
    "kind": "variable",
    "name": "indexFrameColumn",
    "memberof": "src/frame/join-utils/index.js",
    "static": true,
    "longname": "src/frame/join-utils/index.js~indexFrameColumn",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/index.js",
    "importStyle": "{indexFrameColumn}",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 440,
    "kind": "variable",
    "name": "matchIt",
    "memberof": "src/frame/join-utils/index.js",
    "static": true,
    "longname": "src/frame/join-utils/index.js~matchIt",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/index.js",
    "importStyle": "{matchIt}",
    "description": null,
    "lineNumber": 49,
    "undocument": true
  },
  {
    "__docId__": 441,
    "kind": "file",
    "name": "src/frame/join-utils/indexFrameColumn.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport haveFrame from '../haveFrame';\nimport localGroupBy from './localGroupBy';\n/**\n * Creates a index for a column (dictionary)\n * @param  {Frame}   aFrame  Fram to index\n * @param  {String}  colName name of the column to index\n * @param  {boolean} noNull  Optional (false) if false, null is added to the dictionary\n * @param  {Object}  dict    Optional\n * @return {Dict}            Dict[key] --> array of columns that contain the key in column(colName). Note a row is an array of columns\n */\nexport default  (aFrame,colName,noNull=false,dict={}) => {\n\taFrame = haveFrame(aFrame);\n \n\tlet ix = aFrame.colIx(colName);\n\treturn localGroupBy(aFrame.data,ix,noNull,dict);\n};\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/indexFrameColumn.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 442,
    "kind": "function",
    "name": "indexFrameColumn",
    "memberof": "src/frame/join-utils/indexFrameColumn.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/indexFrameColumn.js~indexFrameColumn",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/indexFrameColumn.js",
    "importStyle": "indexFrameColumn",
    "description": "Creates a index for a column (dictionary)",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "Fram to index"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "colName",
        "description": "name of the column to index"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "noNull",
        "description": "Optional (false) if false, null is added to the dictionary"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "dict",
        "description": "Optional"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Dict"
      ],
      "spread": false,
      "description": "Dict[key] --> array of columns that contain the key in column(colName). Note a row is an array of columns"
    }
  },
  {
    "__docId__": 443,
    "kind": "file",
    "name": "src/frame/join-utils/innerJoin.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport haveFrame from '../haveFrame';\nimport colName from './colName';\nimport localGroupBy from './localGroupBy';\nimport changeNameTo from './changeNameTo';\nimport joinOp from './joinOp';\nimport project from './project';\nimport getDict from './getDict';\n\n/**\n * innerJoin works like an SQL inner join, not quite as flexible, \n *     select a as A, b, frame1.x from frame1, frame2\n *         where frame1.colName1 = frame2.colName2 and {filter} \n *\n * \n * @param  {Frame} frame1      [description]\n * @param  {Frame} frame2      [description]\n * @param  {Array<string>} projectList Array of column name mapping example \"\"\n * @param  {String} joinOn      column name to join on, either \"colName\" (same name exists on both frame) or \"colName1=colName2\" (colName1 - column from frame1, colName2 - column from frame2)\n * @param  {function} filter    *optional filter function - filter(row1,row2)\n * @return {Frame}             resulting frame\n */\nexport function innerJoin(frame1, frame2, projectList, joinOn, filter) {\n\tframe1 = haveFrame(frame1);\n\tframe2 = haveFrame(frame2);\n\tlet [newColNames, mapping] = colName(projectList, frame1.columns, frame2.columns);\n\t// if( 1.5*frame1.length < frame2.length) {\n\t//   console.log(`Warning: fastJoin - frame1(${frame1.length}) should be longer that frame2(${frame2.length})`);\n\t// } \n\tlet [col1, col2] = changeNameTo(joinOn, '==');\n\tlet cmp = joinOp(frame1,frame2, col1, col2,filter); // returns a function that performs the join test\n\tlet [ix1,ix2] = [frame1.colIx(col1), frame2.colIx(col2)];  // get the idex of col1 => ix1 and col2 => ix2\n\tlet transform = project(mapping);         // returns function to perform the projection\n\n\tif(frame1.length > frame2.length ){\n\t\tlet index = localGroupBy(frame2.data, ix2,true); // create an index on col2 values\n\n\t\tlet data = frame1.data;\n\t\t// \n\t\t//let res = frame1.data.reduce( (res,row)=> matchIt1(res,row,getDict(index,row[ix1]),cmp,transform),[]);\n\t\t//\n\t\t// Not as clean as to code above but faster\n\t\t// \n\t\t\n\t\tlet len = data.length;\n\t\tlet res = [];                             // Note 'res' array is mutated during this operation\n\t\tfor(let i=0; i<len; i++) {\n\t\t\tlet row = data[i];\n\t\t\tmatchIt1(res,row,getDict(index,row[ix1]),cmp,transform); // note index is a dictionary indexed on col2\n\t\t}\n\t\treturn new frame1.constructor(res, newColNames,frame1.name+'-'+frame2.name);\n\t} else {\n\t\n\t\tlet index = localGroupBy(frame1.data, ix1,true); // create an index on col1 values\n\t\t//\n\t\t\n\t\t//let res = frame2.data.reduce( (res,row)=> matchIt2(res,row,getDict(index,row[ix2]),cmp,transform),[]);\n\t\tlet data = frame2.data;\n\t\tlet len = data.length;\n\t\tlet res = [];\n\n\t\tfor(let i=0; i<len; i++) {\n\t\t\tlet row = data[i];\n\t\t\tmatchIt2(res,row,getDict(index,row[ix2]),cmp,transform);\n\t\t}\n\n\t\treturn new frame1.constructor(res, newColNames,frame1.name+'-'+frame2.name);\n\t}\n\n}\n\n/**\n * Match row1 (master row) against all elements of arr, using the cmp function, and return an array of matching rows by using the transform function\n * @param  {Array<string>} res       this array is mutatated (done purely for performance reasons)\n * @param  {[string]} row1      a master row\n * @param  {[[string]]} arr     array of rows\n * @param  {function} cmp       comparison finction that compares row1 with the array of rows (join operation)\n * @param  {function} transform function to transform the to the final rows\n * @return {[string]}           returning array of rows\n */\nfunction matchIt1(res/*modified*/,row1,arr, cmp, transform) {\n\tlet len = arr.length;\n\tfor(let i=0; i< len; i++) {\n\t\tlet row2 = arr[i];\n\t\tif(cmp(row1,row2)) res.push(transform(row1,row2));\n\t}\n\treturn res;\n}\n\n\n\n/**\n * Match row2 (master row) against all elements of arr, using the cmp function, and return an array of matching rows by using the transform function\n * @param  {Array<string>} res       this array is mutatated (done purely for performance reasons)\n * @param  {[string]} row2      [description]\n * @param  {[[string]]} arr     array of rows\n * @param  {function} cmp       comparison finction that compares row1 with the array of rows (join operation)\n * @param  {function} transform function to transform the to the final rows\n * @return {[string]}           returning array of rows\n\n */\nfunction matchIt2(res,row2,arr, cmp, transform) {\n\tlet len = arr.length;\n\tfor(let i=0; i< len; i++) {\n\t\tlet row1 = arr[i];\n\t\tif(cmp(row1,row2)) res.push(transform(row1,row2));\n\t}\n\treturn res;\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/innerJoin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 444,
    "kind": "function",
    "name": "innerJoin",
    "memberof": "src/frame/join-utils/innerJoin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/innerJoin.js~innerJoin",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/innerJoin.js",
    "importStyle": "{innerJoin}",
    "description": "innerJoin works like an SQL inner join, not quite as flexible, \n    select a as A, b, frame1.x from frame1, frame2\n        where frame1.colName1 = frame2.colName2 and {filter} ",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "frame1",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "frame2",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "projectList",
        "description": "Array of column name mapping example \"\""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "joinOn",
        "description": "column name to join on, either \"colName\" (same name exists on both frame) or \"colName1=colName2\" (colName1 - column from frame1, colName2 - column from frame2)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "*optional filter function - filter(row1,row2)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Frame"
      ],
      "spread": false,
      "description": "resulting frame"
    }
  },
  {
    "__docId__": 445,
    "kind": "function",
    "name": "matchIt1",
    "memberof": "src/frame/join-utils/innerJoin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/innerJoin.js~matchIt1",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/join-utils/innerJoin.js",
    "importStyle": null,
    "description": "Match row1 (master row) against all elements of arr, using the cmp function, and return an array of matching rows by using the transform function",
    "lineNumber": 96,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "this array is mutatated (done purely for performance reasons)"
      },
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "row1",
        "description": "a master row"
      },
      {
        "nullable": null,
        "types": [
          "[[string]]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "array of rows"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cmp",
        "description": "comparison finction that compares row1 with the array of rows (join operation)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "transform",
        "description": "function to transform the to the final rows"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[string]"
      ],
      "spread": false,
      "description": "returning array of rows"
    },
    "ignore": true
  },
  {
    "__docId__": 446,
    "kind": "function",
    "name": "matchIt2",
    "memberof": "src/frame/join-utils/innerJoin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/innerJoin.js~matchIt2",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/join-utils/innerJoin.js",
    "importStyle": null,
    "description": "Match row2 (master row) against all elements of arr, using the cmp function, and return an array of matching rows by using the transform function",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": "this array is mutatated (done purely for performance reasons)"
      },
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "row2",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[[string]]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "array of rows"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cmp",
        "description": "comparison finction that compares row1 with the array of rows (join operation)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "transform",
        "description": "function to transform the to the final rows"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[string]"
      ],
      "spread": false,
      "description": "returning array of rows"
    },
    "ignore": true
  },
  {
    "__docId__": 447,
    "kind": "file",
    "name": "src/frame/join-utils/joinOp.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport {TRUE} from '../../utils/constants';\n/**\n * returns a function that will perform an innet joint test\n * @param  {Frame} frame1 left frame\n * @param  {Frame} frame2 right frame\n * @param  {string} col1   column name 1\n * @param  {string} col2   column name 2\n * @param  {function} filter optional filter function\n * @return {function}        boolean function given two rows returns true if the should be joined\n */\nexport default function joinOp(frame1, frame2, col1, col2, filter) {\n\tlet c1 = frame1.colIx(col1);\n\tlet c2 = frame2.colIx(col2);\n\tfilter = filter || TRUE;\n\treturn function (row1, row2) {\n\t\treturn (row1[c1] === row2[c2]) && filter(row1,row2);\n\t};\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/joinOp.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 448,
    "kind": "function",
    "name": "joinOp",
    "memberof": "src/frame/join-utils/joinOp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/joinOp.js~joinOp",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/joinOp.js",
    "importStyle": "joinOp",
    "description": "returns a function that will perform an innet joint test",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "frame1",
        "description": "left frame"
      },
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "frame2",
        "description": "right frame"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "col1",
        "description": "column name 1"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "col2",
        "description": "column name 2"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "optional filter function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "boolean function given two rows returns true if the should be joined"
    }
  },
  {
    "__docId__": 449,
    "kind": "file",
    "name": "src/frame/join-utils/leftJoin.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport haveFrame from '../haveFrame';\nimport getTransform from './getTransform';\nimport localGroupBy from './localGroupBy';\nimport changeNameTo from './changeNameTo';\nimport joinOp from './joinOp';\nimport project from './project';\nimport getDict from './getDict';\nimport matchIt from './matchIt';\nimport {reverseProjectList1} from './reverseProjectList1';\n\n/**\n * leftJoin works like an SQL inner join, not quite as flexible, \n *     select a as A, b, frame1.x from frame1, frame2\n *         where frame1.colName1 = frame2.colName2 and {filter} \n *\n * \n * @param  {Frame} frame1      [description]\n * @param  {Frame} frame2      [description]\n * @param  {Array<string>} projectList Array of column name mapping example \"\"\n * @param  {String} joinOn      column name to join on, either \"colName\" (same name exists on both frame) or \"colName1=colName2\" (colName1 - column from frame1, colName2 - column from frame2)\n * @param  {function} filter    *optional filter function - filter(row1,row2)\n * @return {Frame}             resulting frame\n */\nexport function leftJoin(frame1, frame2, projectList, joinOn,filter) {\n\tframe1 = haveFrame(frame1);\n\tframe2 = haveFrame(frame2);\n\n\tlet {transform, newColNames, mapping} = getTransform(projectList, frame1.columns, frame2.columns);\n\tlet pL = reverseProjectList1(projectList, col1,col2, frame1.columns, frame2.columns);\n\tlet transformR = getTransform(pL, frame1.columns, frame2.columns).transform;  // if( 1.5*frame1.length < frame2.length) {\n\t//   console.log(`Warning: fastJoin - frame1(${frame1.length}) should be longer that frame2(${frame2.length})`);\n\t// } \n\tlet [col1, col2] = changeNameTo(joinOn, '==');\n\tlet cmp = joinOp(frame1,frame2, col1, col2,filter);\n\tlet [ix1,ix2] = [frame1.colIx(col1), frame2.colIx(col2)];\n\t//let transform = project(mapping);         // reansform function\n\t\n\tlet res = [];\n\tlet index = localGroupBy(frame2.data, ix2,true);\n\tlet data = frame1.data;\n\t//data.reduce( (res,row)=> matchIt(res,row,getDict(index,row[ix1])),res);\n\tlet tr = [transform,transformR];\n\tlet len = data.length;\n\tfor(let i=0; i< len; i++) {\n\t\tlet row = data[i];\n\t\tmatchIt(res,row,getDict(index,row[ix1]),cmp,tr);\n\t}\n\n\treturn new frame1.constructor(res, newColNames);\n\t\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/leftJoin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 450,
    "kind": "function",
    "name": "leftJoin",
    "memberof": "src/frame/join-utils/leftJoin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/leftJoin.js~leftJoin",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/leftJoin.js",
    "importStyle": "{leftJoin}",
    "description": "leftJoin works like an SQL inner join, not quite as flexible, \n    select a as A, b, frame1.x from frame1, frame2\n        where frame1.colName1 = frame2.colName2 and {filter} ",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "frame1",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Frame"
        ],
        "spread": false,
        "optional": false,
        "name": "frame2",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "Array<string>"
        ],
        "spread": false,
        "optional": false,
        "name": "projectList",
        "description": "Array of column name mapping example \"\""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "joinOn",
        "description": "column name to join on, either \"colName\" (same name exists on both frame) or \"colName1=colName2\" (colName1 - column from frame1, colName2 - column from frame2)"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "*optional filter function - filter(row1,row2)"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Frame"
      ],
      "spread": false,
      "description": "resulting frame"
    }
  },
  {
    "__docId__": 451,
    "kind": "file",
    "name": "src/frame/join-utils/localGroupBy.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport EMPTY_KEY from './EMPTY_KEY';\nexport default function localGroupBy(data,ix,noNull=false,dict={}) {\n\tdata.forEach(r => addDict(dict, r[ix],r,noNull));\n\treturn dict;\n}\n\n\nfunction addDict(dict, key, val,noEmpty) {\n\tif( noEmpty && !key) return dict;\n\tkey = key || EMPTY_KEY;\n\tlet list = dict[key];\n\tif( !list ) {\n\t\tdict[key] = [val];\n\t} else {\n\t\tif(val !== undefined)\n\t\t\tlist.push(val);\n\t}\n\treturn dict;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/localGroupBy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 452,
    "kind": "function",
    "name": "localGroupBy",
    "memberof": "src/frame/join-utils/localGroupBy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/localGroupBy.js~localGroupBy",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/localGroupBy.js",
    "importStyle": "localGroupBy",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 453,
    "kind": "function",
    "name": "addDict",
    "memberof": "src/frame/join-utils/localGroupBy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/localGroupBy.js~addDict",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/join-utils/localGroupBy.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 454,
    "kind": "file",
    "name": "src/frame/join-utils/matchIt.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n/*local*/ \n/**\n * leftJoin on one row from left and arr from right\n * @param  {[type]} res\n * @param  {[type]} row1\n * @param  {[type]} arr\n * @param  {[type]} cmp\n * @param  {[type]} tr\n * @return {[[row_element]} \n */\nexport default function matchIt(res,row1,arr, cmp, tr) {\n\tlet len,  cnt =0;\n\tif( !arr || arr.length === 0 ) len = 0;\n\telse len = arr.length;\n\tlet transform = tr[0];\n\t\n\tfor(let i=0; i< len; i++) {\n\t\tlet row2 = arr[i];\n\t\tif(cmp(row1,row2)) {\n\t\t\tres.push(transform(row1,row2));\n\t\t\tcnt++;\n\t\t}\n\t}\n\tif( cnt === 0 ) {\n\t\ttransform = tr[1];\n\t\tres.push(transform(row1,[]));\n\t}\n\treturn res;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/matchIt.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 455,
    "kind": "function",
    "name": "matchIt",
    "memberof": "src/frame/join-utils/matchIt.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/matchIt.js~matchIt",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/matchIt.js",
    "importStyle": "matchIt",
    "description": "leftJoin on one row from left and arr from right",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "res",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "row1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "cmp",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "tr",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[[row_element]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 456,
    "kind": "file",
    "name": "src/frame/join-utils/outerJoin.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport haveFrame from '../haveFrame';\nimport colName from './colName';\nimport getTransform from './getTransform';\nimport localGroupBy from './localGroupBy';\nimport changeNameTo from './changeNameTo';\nimport joinOp from './joinOp';\nimport project from './project';\nimport getDict from './getDict';\nimport matchIt from './matchIt';\nimport {reverseProjectList1, reverseProjectList2} from './reverseProjectList1';\n\n\n/**\n * [outerJoin description]\n * @param  {[type]} frame1      [description]\n * @param  {[type]} frame2      [description]\n * @param  {[type]} projectList [description]\n * @param  {[type]} joinOn      [description]\n * @param  {[type]} filter      [description]\n * @return {[type]}             [description]\n */\nexport function outerJoin(frame1, frame2, projectList, joinOn,filter) {\n\tframe1 = haveFrame(frame1);\n\tframe2 = haveFrame(frame2);\n\t//console.log(\"projectList1:\", projectList);\n\tlet {transform, newColNames, mapping} = getTransform(projectList, frame1.columns, frame2.columns);\n\tlet pL = reverseProjectList1(projectList, col1,col2, frame1.columns, frame2.columns);\n\t//    console.log(\"projectList3:\", pL);\n\tlet transformR = getTransform(pL, frame1.columns, frame2.columns).transform;\n\t// if( 1.5*frame1.length < frame2.length) {\n\t//   console.log(`Warning: fastJoin - frame1(${frame1.length}) should be longer that frame2(${frame2.length})`);\n\t// } \n\tlet [col1, col2] = changeNameTo(joinOn, '==');\n\tlet cmp = joinOp(frame1,frame2, col1, col2,filter);\n\tlet [ix1,ix2] = [frame1.colIx(col1), frame2.colIx(col2)];\n\t//let transform = project(mapping);         // reansform function\n\t\n\tlet res = [];\n\tlet index = localGroupBy(frame2.data, ix2,true);\n\tlet data = frame1.data;\n\tlet used = {};\n\t//data.reduce( (res,row)=> matchIt(res,row,getDict(index,row[ix1])),res);\n\tlet len = data.length;\n\tlet tr = [transform,transformR];\n\tfor(let i=0; i< len; i++) {\n\t\tlet row = data[i];\n\t\tmatchIt(res,row,getDict(index,row[ix1]),cmp,tr);\n\t\tused[row[ix1]] = true;\n\t}\n\n\t//now process all elements in frame2 that did not match\n\tlet unused = frame2.data.filter(r => used[r[ix2]] === undefined);\n\t//console.log(\"unused\", unused)\n\t//matchIt(res,[], unused,cmp, transform);\n\tlen = unused.length;\n\tif( len > 0) {\n\t\t//console.log(\"projectList2:\", projectList);\n\t\tlet pL = reverseProjectList2(projectList, col1,col2, frame1.columns, frame2.columns);\n\t\t//  console.log(\"projectList3:\", pL);\n\t\tlet {transform, newColNames, mapping} = getTransform(pL, frame1.columns, frame2.columns);\n\t\tfor(let i=0; i<len; i++) res.push(transform([],unused[i]));\n\t}\n\n\treturn new frame1.constructor(res, newColNames);\n\t\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/outerJoin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 457,
    "kind": "function",
    "name": "outerJoin",
    "memberof": "src/frame/join-utils/outerJoin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/outerJoin.js~outerJoin",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/outerJoin.js",
    "importStyle": "{outerJoin}",
    "description": "[outerJoin description]",
    "lineNumber": 38,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "frame1",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "frame2",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "projectList",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "joinOn",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "filter",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 458,
    "kind": "file",
    "name": "src/frame/join-utils/project.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n/*local*/\nexport default function project(mappingList) {\n\treturn function (array1, array2) {\n\t\tlet data = [array1,array2];\n\t\treturn mappingList.map(([frameIx, oldIx, newIx]) => oldIx === -1? '':data[frameIx][oldIx]);\n\t};\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/project.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 459,
    "kind": "function",
    "name": "project",
    "memberof": "src/frame/join-utils/project.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/project.js~project",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/project.js",
    "importStyle": "project",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 460,
    "kind": "file",
    "name": "src/frame/join-utils/reverseProjectList1.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n/*local*/\nexport function reverseProjectList1(pL, col1, col2, f1Cols, f2Cols) {\n\n\t//console.log(\"PL0:\", pL);\n\tlet c = pL.map(s => s.split('='));\n\t//console.log(\"PL1:\",  c);\n\t\n\tlet len = c.length;\n\tfor(let i=0; i<len; i++) {\n\t\tlet col = c[i];\n\t\tif( col[0] === '2.'+col2 || col[0] === col2) col[0] = '1.'+col1;\n\t\telse  if( col[0] === col2) col[0] = '1.'+col1;\n\t\telse if( col[0].substr(0,2) === '2.' ) {\n\t\t\tif( f1Cols.indexOf(col[0].substr(2)) !== -1 ) col[0] = '1.'+col[0].substr(2);\n\t\t}\n\t\telse if(col[0].substr(0,2) === '1.') col[0] = col[0];\n\t\telse if( f1Cols.indexOf(col[0].substr(2)) !== -1 ) col[0] = '1.'+col[0];\n\t}\n\treturn c.map( v => v.join('='));\n}\n\nexport function reverseProjectList2(pL, col1, col2, f1Cols, f2Cols) {\n\n\t//console.log(\"PL0:\", pL);\n\tlet c = pL.map(s => s.split('='));\n\t//console.log(\"PL1:\",  c);\n\t\n\tlet len = c.length;\n\tfor(let i=0; i<len; i++) {\n\t\tlet col = c[i];\n\t\tif( col[0] === '1.'+col1 || col[0] === col1) col[0] = '2.'+col2;\n\t\telse  if( col[0] === col2) col[0] = '2.'+col2;\n\t\telse if( col[0].substr(0,2) === '1.' ) {\n\t\t\tif( f2Cols.indexOf(col[0].substr(2)) !== -1 ) col[0] = '2.'+col[0].substr(2);\n\t\t}\n\t\telse if(col[0].substr(0,2) === '2.') col[0] = col[0];\n\t\telse if( f2Cols.indexOf(col[0].substr(2)) !== -1 ) col[0] = '2.'+col[0];\n\t}\n\treturn c.map( v => v.join('='));\n}\n\n\n\n\n\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/join-utils/reverseProjectList1.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 461,
    "kind": "function",
    "name": "reverseProjectList1",
    "memberof": "src/frame/join-utils/reverseProjectList1.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/reverseProjectList1.js~reverseProjectList1",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/reverseProjectList1.js",
    "importStyle": "{reverseProjectList1}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 462,
    "kind": "function",
    "name": "reverseProjectList2",
    "memberof": "src/frame/join-utils/reverseProjectList1.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/join-utils/reverseProjectList1.js~reverseProjectList2",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/join-utils/reverseProjectList1.js",
    "importStyle": "{reverseProjectList2}",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 463,
    "kind": "file",
    "name": "src/frame/makeUnique.js",
    "content": "// jshint undef:true\r\n// jshint unused:true\r\n/*\r\nCopyright (c) 2020, Nurul Choudhury\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted, provided that the above\r\ncopyright notice and this permission notice appear in all copies.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\n/**\r\n * [description]\r\n * @param  {[type]} list [description]\r\n * @return {[type]}      [description]\r\n */\r\nexport const arrayUniq = (list)  => Object.keys(_makeUnique(list)).sort();\r\n\r\n\r\n\r\nconst EMPTY_STR = '';\r\n/**\r\n * @param  {[column_elements]} listOfRows \r\n * @param  {[type]} colIx \tThe column to make unique\r\n * @return {dict}   returns an object representing mapping of unique values where key and value are the same\r\n */\r\nexport function _makeUnique(listOfRows,colIx) {\r\n\r\n\tlet dict = {};\r\n\tif( colIx === undefined) {\r\n\t\tlet list = listOfRows; // the list just has data\r\n\t\tlet len = list.length;\r\n\t\tfor(let i = 0; i<len;i++) { \r\n\t\t\tlet row = list[i];\r\n\t\t\tlet rlen = row.length;\r\n\t\t\tfor(let k=0; k< rlen; k++){\r\n\t\t\t\tlet x = row[k];\r\n\t\t\t\tif( typeof x === 'string' || x === undefined) {\r\n\t\t\t\t\tx = x===undefined ? EMPTY_STR :x;\r\n\t\t\t\t\tlet nv = dict[x];\r\n\t\t\t\t\tif(nv === undefined) dict[v] = nv = x;\r\n\t\t\t\t\trow[k] = nv;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n\telse {\r\n\t\tlet len = listOfRows.length;\r\n\t\tlet cnt = len<5000? len: Math.max(5000, Math.trunc(len/3));\r\n\t\tfor(let i = 0; i<len;i++) {\r\n\t\t\tlet row = listOfRows[i];\r\n\t\t\tlet v = row[colIx];\r\n\t\t\tif( v === undefined || typeof v === 'string'  ) {\r\n\t\t\t\tif( !v ) {\r\n\t\t\t\t\trow[colIx] = EMPTY_STR;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tlet nv = dict[v];\r\n\t\t\t\t\tif(nv === undefined && cnt-- > 0) dict[v] = nv = v;\r\n\t\t\t\t\telse nv = v;\r\n\t\t\t\t\trow[colIx] = nv;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} \r\n\t}\r\n\treturn dict;\r\n}\r\n\r\n\r\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/makeUnique.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 464,
    "kind": "function",
    "name": "arrayUniq",
    "memberof": "src/frame/makeUnique.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/makeUnique.js~arrayUniq",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/makeUnique.js",
    "importStyle": "{arrayUniq}",
    "description": "[description]",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 465,
    "kind": "variable",
    "name": "EMPTY_STR",
    "memberof": "src/frame/makeUnique.js",
    "static": true,
    "longname": "src/frame/makeUnique.js~EMPTY_STR",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/makeUnique.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 466,
    "kind": "function",
    "name": "_makeUnique",
    "memberof": "src/frame/makeUnique.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/makeUnique.js~_makeUnique",
    "access": "private",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/makeUnique.js",
    "importStyle": "{_makeUnique}",
    "description": "",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "[column_elements]"
        ],
        "spread": false,
        "optional": false,
        "name": "listOfRows",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "colIx",
        "description": "The column to make unique"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "dict"
      ],
      "spread": false,
      "description": "returns an object representing mapping of unique values where key and value are the same"
    }
  },
  {
    "__docId__": 467,
    "kind": "file",
    "name": "src/frame/sortFrame.js",
    "content": "// jshint undef:true\r\n// jshint unused:true\r\n/*\r\nCopyright (c) 2020, Nurul Choudhury\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted, provided that the above\r\ncopyright notice and this permission notice appear in all copies.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\nimport haveFrame from './haveFrame';\r\nimport { arrEQ } from '../array';\r\nimport {combineCmp, cmpNumOrStrBy,  revCmp} from '../utils/sort-helper';\r\nimport genColIxFunc from './genColIxFunc';\r\n\r\n\r\n/**\r\n * create a comparison function for a frame\r\n * usage sortFrameBy(['+surname', 'givenName', '-age'], aFrame)\r\n * + == ascending\r\n * - == descending \r\n * @param  {[type]} columnNames [description]\r\n * @param  {[type]} aFrame      [description]\r\n * @param  {[type]} cmpFn       [description]\r\n * @return {[type]}             [description]\r\n */\r\nexport default function sortFrameBy(columnNames,aFrame,cmpFn=cmpNumOrStrBy) {\r\n\taFrame = haveFrame(aFrame);\r\n\t// function to get the index of the column given a name\r\n\t\r\n\tif(!columnNames || !columnNames.length || arrEQ((aFrame.sorted||[]), columnNames)) return aFrame;\r\n\tlet colIx = genColIxFunc(aFrame);\r\n\t//create a comparison function give an column name\r\n\t// -name (sort acending) +name or name, to sort descending\t                \r\n\tlet cmps = (name) => name[0]==='-'?revCmp(cmpFn(colIx(name.substr(1))))\r\n\t\t: (name[0] === '+'?cmpFn(colIx(name.substr(1))):\r\n\t\t\tcmpFn(colIx(name)));\r\n\tlet data = aFrame.data.slice(0);\r\n\tdata.sort(combineCmp(...columnNames.map(cmps)));\r\n\tlet resFrame = new aFrame.constructor(data,aFrame.columns, aFrame.name, aFrame.keyFunc);\r\n\tresFrame.sorted = columnNames;\r\n\treturn resFrame;\r\n}",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/sortFrame.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 468,
    "kind": "function",
    "name": "sortFrameBy",
    "memberof": "src/frame/sortFrame.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/sortFrame.js~sortFrameBy",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/sortFrame.js",
    "importStyle": "sortFrameBy",
    "description": "create a comparison function for a frame\nusage sortFrameBy(['+surname', 'givenName', '-age'], aFrame)\n+ == ascending\n- == descending ",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "columnNames",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "aFrame",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "cmpFn",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 469,
    "kind": "file",
    "name": "src/frame/toHTML.js",
    "content": "// jshint undef:true\r\n// jshint unused:true\r\n/*\r\nCopyright (c) 2020, Nurul Choudhury\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted, provided that the above\r\ncopyright notice and this permission notice appear in all copies.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nfunction isNumber(x) {\r\n\tif(x === 0) return true;\r\n\tif( !x ) return false;\r\n\tlet v = +x;\r\n\treturn !(isNaN(v));\r\n}\r\n\r\nconst defaultStyle = `<style> \r\n\t.ftable  { \r\n\t\tfont-family: arial, sans-serif; \r\n\t\tcolor: blue !important; \r\n\t\tborder-collapse: collapse; \r\n\t\tborder-spacing: 0; \r\n\t\tborder: 1px solid #000; \r\n\t\tfont-size: 1rem;\r\n\t} \r\n\t.ftable thead {\r\n\t   text-align: left; \r\n\t   background-color: grey;\r\n\t   border: 1px solid #000; \r\n\t} \r\n\t.ftable tr { border: 1px solid #000000; text-align: left;  }\r\n\t.ftable th { \r\n\t\tborder: 1px solid #000000;  \r\n\t\ttext-align: center; \r\n\t\tcolor: red !important;\r\n\t\tbackground-color: grey;\r\n\t} \r\n\t.ftable td { border: 1px solid #000000; text-align: left;  }\r\n\t.ftable tbody > tr:nth-child(even) { background-color: #44dddd !important; }\r\n\t.ftable tbody > tr:nth-child(odd) { background-color: white !important; }\r\n</style>\\n`;\r\n\r\nexport default function toHTML(aFrame, myStyle, rowColor=colorDefault) {\r\n\tlet columns = aFrame.columns;\r\n\tconst HTMLformat = aFrame.constructor.HTMLFormat;\r\n\tif(myStyle === '*') myStyle = defaultStyle;\r\n\tmyStyle = myStyle || '';\r\n\treturn (\r\n\t\tmyStyle +\r\n\t\t'<table class=\"ftable\"><thead>' +\r\n\t\t'<tr><th>Ix</th>' + columns.map(c => '<th>' + c.replace(/_/g, ' ') + '</th>').join('') + '</tr></thead><tbody>' +\r\n\t\taFrame.data.slice(0, Math.min(aFrame.length, (aFrame.showLen|| 200))).map(showRow).join('') +\r\n\t\t'</tbody></table>'\r\n\t);\r\n\tfunction showRow(r, i) {\r\n\t\tlet rowColorV = rowColor(aFrame._rowObj(r),i); \r\n\t\tlet style = rowColorV ? 'style=\"background-color: ' + rowColorV + '\"' : ''; \r\n\t\treturn ('<tr'+style+'><td>' + i + '</td>' + r.map((c,j) => '<td>' + (ns(c,j)) + '</td>').join('') + '</tr>');\r\n\t}\r\n\tfunction ns(s,i) {\r\n\t\tif (typeof s !== 'string') return (s === undefined ? '' : render(s,i)) || '';\r\n\t\r\n\t\tif (s.indexOf('<') !== -1) s = s.replace(/</g, '&lt;');\r\n\t\tif (s.indexOf('>') !== -1) s = s.replace(/>/g, '&gt;');\r\n\t\treturn (s === undefined ? '' : render(s,i));\r\n\t}\r\n\tfunction render(s,i) {\r\n\r\n\t\tif(isNumber(s))  return HTMLformat.number(s,i,aFrame);\r\n\t\telse return HTMLformat.other(s,i,aFrame);\r\n\t}\r\n}\r\n\r\nfunction colorDefault(r,i) { return undefined; }",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/frame/toHTML.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 470,
    "kind": "function",
    "name": "isNumber",
    "memberof": "src/frame/toHTML.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/toHTML.js~isNumber",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/toHTML.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 471,
    "kind": "variable",
    "name": "defaultStyle",
    "memberof": "src/frame/toHTML.js",
    "static": true,
    "longname": "src/frame/toHTML.js~defaultStyle",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/toHTML.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 472,
    "kind": "function",
    "name": "toHTML",
    "memberof": "src/frame/toHTML.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/toHTML.js~toHTML",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/frame/toHTML.js",
    "importStyle": "toHTML",
    "description": null,
    "lineNumber": 50,
    "undocument": true
  },
  {
    "__docId__": 473,
    "kind": "function",
    "name": "colorDefault",
    "memberof": "src/frame/toHTML.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/frame/toHTML.js~colorDefault",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/frame/toHTML.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 474,
    "kind": "file",
    "name": "src/index.js",
    "content": "//index.js\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n// export {Frame} from './frame/frame'; // innerJoin,fullInnerJoin, leftJoin\n// import _haveFrame from './frame/haveFrame';\n// export const haveFrame = _haveFrame;\n\nexport * from './frame';\nexport * from './array';\nexport * from './dict';\nexport * from './string';\nexport * from './utils/objutils';\nexport * from './utils/types';\nexport * from './utils/constants';\nexport * from './utils/sort-helper';\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 475,
    "kind": "file",
    "name": "src/string/csv/csvLine.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport trimListElements from './trimListElements';\nvar _escape_ = '\\x0B\\0B';\nvar _mat_escape_ = new RegExp(_escape_,'g');\nfunction __rep(s) {\n\t//if(s==',') return '.';\n\tif(s[0] == '\"' && s[s.length-1] == '\"') {\n\t\tvar z = s.substr(1,s.length-2);\n\t\t//console.log(z)\n\t\treturn z.replace(/\"\"/,'\"').replace(/,/g,_escape_);\n\t}\n\treturn '???';\n}\n\nexport default function csvLine(line) {\n\tconst re = /\"([^\"]|\"\")*\"/g;\n\treturn trimListElements(line.replace(re,__rep).replace(/,/g, '\\x01').replace(_mat_escape_,',').split('\\x01'));\n\t//return line.replace(re,__rep).replace(/,/g, \"\\x01\").replace(_mat_escape_,\",\").split('\\x01').map(x=>x.trim());\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/csv/csvLine.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 476,
    "kind": "variable",
    "name": "_escape_",
    "memberof": "src/string/csv/csvLine.js",
    "static": true,
    "longname": "src/string/csv/csvLine.js~_escape_",
    "access": "private",
    "export": false,
    "importPath": "nurulc.github.io/src/string/csv/csvLine.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 477,
    "kind": "variable",
    "name": "_mat_escape_",
    "memberof": "src/string/csv/csvLine.js",
    "static": true,
    "longname": "src/string/csv/csvLine.js~_mat_escape_",
    "access": "private",
    "export": false,
    "importPath": "nurulc.github.io/src/string/csv/csvLine.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 478,
    "kind": "function",
    "name": "__rep",
    "memberof": "src/string/csv/csvLine.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/csv/csvLine.js~__rep",
    "access": "private",
    "export": false,
    "importPath": "nurulc.github.io/src/string/csv/csvLine.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 479,
    "kind": "function",
    "name": "csvLine",
    "memberof": "src/string/csv/csvLine.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/csv/csvLine.js~csvLine",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/csv/csvLine.js",
    "importStyle": "csvLine",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 480,
    "kind": "file",
    "name": "src/string/csv/dataSplit.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nexport default function dataSplit(data,splitter,fn) {\n\tlet len = data.length;\n\tlet res = [];\n\tres.length = len;\n\tif( splitter === undefined) splitter = psvLine;\n\tif( fn === undefined) {\n\t\tfor(let i=0; i<len; i++) {\n\t\t\tres[i] = splitter(data[i]);\n\t\t}\n\t}\n\telse {\n\t\tfor(let i=0; i<len; i++) {\n\t\t\tres[i] = splitter(fn(data[i],i));\n\t\t}\n\t}\n\treturn res;\n}\n\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/csv/dataSplit.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 481,
    "kind": "function",
    "name": "dataSplit",
    "memberof": "src/string/csv/dataSplit.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/csv/dataSplit.js~dataSplit",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/csv/dataSplit.js",
    "importStyle": "dataSplit",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 482,
    "kind": "file",
    "name": "src/string/csv/index.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nimport _csvLine from './csvLine';\nexport const csvLine = _csvLine;\n\nimport _trimListElements from './trimListElements';\nexport const trimListElements = _trimListElements;\n\nimport _tsvLine from './tsvLine';\nexport const tsvLine = _tsvLine;\n\nimport _psvLine from './psvLine';\nexport const psvLine = _psvLine;\n\nimport _dataSplit from './dataSplit';\nexport const dataSplit = _dataSplit;\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/csv/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 483,
    "kind": "variable",
    "name": "csvLine",
    "memberof": "src/string/csv/index.js",
    "static": true,
    "longname": "src/string/csv/index.js~csvLine",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/csv/index.js",
    "importStyle": "{csvLine}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 484,
    "kind": "variable",
    "name": "trimListElements",
    "memberof": "src/string/csv/index.js",
    "static": true,
    "longname": "src/string/csv/index.js~trimListElements",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/csv/index.js",
    "importStyle": "{trimListElements}",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 485,
    "kind": "variable",
    "name": "tsvLine",
    "memberof": "src/string/csv/index.js",
    "static": true,
    "longname": "src/string/csv/index.js~tsvLine",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/csv/index.js",
    "importStyle": "{tsvLine}",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 486,
    "kind": "variable",
    "name": "psvLine",
    "memberof": "src/string/csv/index.js",
    "static": true,
    "longname": "src/string/csv/index.js~psvLine",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/csv/index.js",
    "importStyle": "{psvLine}",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 487,
    "kind": "variable",
    "name": "dataSplit",
    "memberof": "src/string/csv/index.js",
    "static": true,
    "longname": "src/string/csv/index.js~dataSplit",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/csv/index.js",
    "importStyle": "{dataSplit}",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 488,
    "kind": "file",
    "name": "src/string/csv/psvLine.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport trimListElements from './trimListElements';\n\nexport default function psvLine(line) {\n\treturn trimListElements(line.split('|'));\n\t//return line.split('|').map(x=>x.trim()); // nicer code but much slower\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/csv/psvLine.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 489,
    "kind": "function",
    "name": "psvLine",
    "memberof": "src/string/csv/psvLine.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/csv/psvLine.js~psvLine",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/csv/psvLine.js",
    "importStyle": "psvLine",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 490,
    "kind": "file",
    "name": "src/string/csv/trimListElements.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n// modifies the input array\nexport default function trimListElements(arr) {\n\tlet len = arr.length;\n\tfor(let i=0; i<len; i++) {\n\t\tlet s = arr[i];\n\t\tif( s === '' || s === undefined) s = '';\n\t\telse s = s.trim();\n\t\tarr[i] = s;\n\t}\n\treturn arr;\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/csv/trimListElements.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 491,
    "kind": "function",
    "name": "trimListElements",
    "memberof": "src/string/csv/trimListElements.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/csv/trimListElements.js~trimListElements",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/csv/trimListElements.js",
    "importStyle": "trimListElements",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 492,
    "kind": "file",
    "name": "src/string/csv/tsvLine.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport trimListElements from './trimListElements';\n\nexport default function tsvLine(line) {\n\treturn trimListElements(line.split('\\t'));\n\t//return line.split('\\t').map(x=>x.trim()); // nicer code, but much slower\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/csv/tsvLine.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 493,
    "kind": "function",
    "name": "tsvLine",
    "memberof": "src/string/csv/tsvLine.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/csv/tsvLine.js~tsvLine",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/csv/tsvLine.js",
    "importStyle": "tsvLine",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 494,
    "kind": "file",
    "name": "src/string/index.js",
    "content": "/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nexport * from './csv';\nexport * from './strutil';\nexport * from './strdict';\nexport const __STRING__ = ['csv', 'strutils', 'strdict'];",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 495,
    "kind": "variable",
    "name": "__STRING__",
    "memberof": "src/string/index.js",
    "static": true,
    "longname": "src/string/index.js~__STRING__",
    "access": "private",
    "export": true,
    "importPath": "nurulc.github.io/src/string/index.js",
    "importStyle": "{__STRING__}",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 496,
    "kind": "file",
    "name": "src/string/strdict/index.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nimport _strHash from './strHash';\nexport const strHash = _strHash;\n\nimport _strEq from './strEq';\nexport const strEq = _strEq;\n\nexport * from './StrDict';\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strdict/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 497,
    "kind": "variable",
    "name": "strHash",
    "memberof": "src/string/strdict/index.js",
    "static": true,
    "longname": "src/string/strdict/index.js~strHash",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strdict/index.js",
    "importStyle": "{strHash}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 498,
    "kind": "variable",
    "name": "strEq",
    "memberof": "src/string/strdict/index.js",
    "static": true,
    "longname": "src/string/strdict/index.js~strEq",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strdict/index.js",
    "importStyle": "{strEq}",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 499,
    "kind": "file",
    "name": "src/string/strdict/StrDict.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * [EMPTY_STR description]\n * @type {String}\n */\nconst EMPTY_STR = '';\n\n/**\n * String Dictionary implememtation that minimizes the garbage created\n * \n */\nexport class StrDict {\n\t/**\n\t * [constructor description]\n\t * @param  {[type]} maxLen [description]\n\t * @return {[type]}        [description]\n\t */\n\tconstructor(maxLen) {\n\t\tlet len = (maxLen || 1997)|0;\n\t\tthis.dictI = new Array(len);  \n\t\tthis.dictV = new Array(len);\n\t\tthis.length = 0;\n\t\tfor(let i=0; i<len; i++) {\n\t\t\tthis.dictI[i] = 0;\n\t\t\tthis.dictV[i] = EMPTY_STR;\n\t\t}\n\t\t\n\t}\n/**\n * [get description]\n * @param  {String} str    [description]\n * @param  {int32} start  [description]\n * @param  {int32} end    [description]\n * @param  {string/opt} valStr If this is set the value is used to populate the hsh table\n * @return {[type]}        [description]\n */\n\tget(str, start, end, valStr) { // always return a string, if it is not in the dictionary then add it, valStr is only used during expand\n\t\t//throw new Error(\"not implementes\");\n\t\t\n\t\tstart = (start || 0) | 0;\n\t\tend = (end || str.length) | 0;\n\t\tif( start === end) return EMPTY_STR;\n\t\tlet hx = strHash(str, start,end);\n\t\tlet dictI = this.dictI, dictV = this.dictV;\n\t\tlet len = dictI.length;\n\t\tlet ix = hx % len;\n\t\t// while( dictI[ix] ) {\n\t\t//   if( dictI[ix] === hx && strEq(str,start,end, dictV[ix]) ) return dictV[ix];\n\t\t//   ix = (ix + 1) % len;\n\t\t// }\n\t\tlet s,vx;\n\t\tlet slen = end-start;\n\t\twhile( vx = dictI[ix] ) {\n\t\t\tcheck: {\n\t\t\t\tif( vx === hx ) {\n\t\t\t\t\tlet otherStr = dictV[ix];\n\t\t\t\t\tlet ol = otherStr.length | 0;\n\t\t\t\t\tif( slen !== ol) { ix = (ix + 1) % len; continue }\n\t\t\t\t\t\n\t\t\t\t\tfor(let i=start; i<end; i++) {\n\t\t\t\t\t\tif( str[i] !== otherStr[i-start]) break check;\n\t\t\t\t\t}\n\t\t\t\t\t//if( i === end ) \n\t\t\t\t\treturn dictV[ix];\n\t\t\t\t}\n\t\t\t}\n\t\t\tix = (ix + 1) % len;\n\t\t}\n\t\tif( !vx ) {\n\t\t\tdictI[ix] = hx;\n\t\t\tdictV[ix] = valStr !== undefined ? valStr : str.substring(start,end);\n\t\t\tthis.length++;\n\t\t\tlet rStr = dictV[ix];\n\t\t\tif( this.length > len * 0.8 ) this.expand();\n\t\t\treturn rStr;\n\t\t} \n\t\tthrow new Error(\"str: \"+str.substring(start,end) + \" not found\");\n\t}\n\n\tgetV(str) {\n\t\tif(!str) return str;\n\t\tlet hx = strHash(str, 0,str.length);\n\t\tlet dictI = this.dictI, dictV = this.dictV;\n\t\tlet len = dictI.length;\n\t\tlet ix = hx % len;\n\t\tlet end = str.length;\n\t\tlet s,vx;\n\t\twhile( vx = dictI[ix] ) {\n\t\t\tif( vx === hx && str === dictV[ix] ) return dictV[ix];\n\t\t\tix = (ix + 1) % len;\n\t\t}\n\t\tif( !vx ) {\n\t\t\tdictI[ix] = hx;\n\t\t\tdictV[ix] = str;\n\t\t\tthis.length++;\n\t\t\tlet rStr = dictV[ix];\n\t\t\tif( this.length > len * 0.8 ) this.expand();\n\t\t\treturn rStr;\n\t\t} \n\t\tthrow new Error(\"str: \"+str + \" not found\");\n\t}\n\n/**\n * [expand description]\n * @return {[type]} [description]\n */\n\texpand() {\n\t\tlet len = this.dictI.length;\n\t\tlet dictV = this.dictV;\n\t\tlet newDict = new StrDict(this.dictI.length*2+1);\n\t\tfor(let i=0; i < len; i++) {\n\t\t\tlet str = dictV[i];\n\t\t\tif(str) newDict.getV(str);\n\t\t} \n\t\tthis.dictI = newDict.dictI;\n\t\tthis.dictV = newDict.dictV;\n\t\tthis.length = newDict.length;\n\t}\n/**\n * [values description]\n * @return {[type]} [description]\n */\n\tvalues() {\n\t\treturn this.dictV.filter(x => x);\n\t}\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strdict/StrDict.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 500,
    "kind": "variable",
    "name": "EMPTY_STR",
    "memberof": "src/string/strdict/StrDict.js",
    "static": true,
    "longname": "src/string/strdict/StrDict.js~EMPTY_STR",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/string/strdict/StrDict.js",
    "importStyle": null,
    "description": "[EMPTY_STR description]",
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 501,
    "kind": "class",
    "name": "StrDict",
    "memberof": "src/string/strdict/StrDict.js",
    "static": true,
    "longname": "src/string/strdict/StrDict.js~StrDict",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strdict/StrDict.js",
    "importStyle": "{StrDict}",
    "description": "String Dictionary implememtation that minimizes the garbage created",
    "lineNumber": 27,
    "interface": false
  },
  {
    "__docId__": 502,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/string/strdict/StrDict.js~StrDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/string/strdict/StrDict.js~StrDict#constructor",
    "access": "public",
    "description": "[constructor description]",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "maxLen",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 503,
    "kind": "member",
    "name": "dictI",
    "memberof": "src/string/strdict/StrDict.js~StrDict",
    "static": false,
    "longname": "src/string/strdict/StrDict.js~StrDict#dictI",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 504,
    "kind": "member",
    "name": "dictV",
    "memberof": "src/string/strdict/StrDict.js~StrDict",
    "static": false,
    "longname": "src/string/strdict/StrDict.js~StrDict#dictV",
    "access": "public",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 505,
    "kind": "member",
    "name": "length",
    "memberof": "src/string/strdict/StrDict.js~StrDict",
    "static": false,
    "longname": "src/string/strdict/StrDict.js~StrDict#length",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true
  },
  {
    "__docId__": 506,
    "kind": "method",
    "name": "get",
    "memberof": "src/string/strdict/StrDict.js~StrDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/string/strdict/StrDict.js~StrDict#get",
    "access": "public",
    "description": "[get description]",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "int32"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "int32"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "string/opt"
        ],
        "spread": false,
        "optional": false,
        "name": "valStr",
        "description": "If this is set the value is used to populate the hsh table"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 507,
    "kind": "method",
    "name": "getV",
    "memberof": "src/string/strdict/StrDict.js~StrDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/string/strdict/StrDict.js~StrDict#getV",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true
  },
  {
    "__docId__": 508,
    "kind": "method",
    "name": "expand",
    "memberof": "src/string/strdict/StrDict.js~StrDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/string/strdict/StrDict.js~StrDict#expand",
    "access": "public",
    "description": "[expand description]",
    "lineNumber": 122,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 512,
    "kind": "method",
    "name": "values",
    "memberof": "src/string/strdict/StrDict.js~StrDict",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/string/strdict/StrDict.js~StrDict#values",
    "access": "public",
    "description": "[values description]",
    "lineNumber": 138,
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 513,
    "kind": "file",
    "name": "src/string/strdict/strEq.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nexport default function strEq(str, strStart, strEnd, otherStr) {\n\tif( strEnd - strStart !== otherStr.length) return false;\n\tfor(let i=strStart, j=0; i<strEnd; i++, j++) if( str[i] !== otherStr[j]) return false;\n\treturn true;\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strdict/strEq.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 514,
    "kind": "function",
    "name": "strEq",
    "memberof": "src/string/strdict/strEq.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/strdict/strEq.js~strEq",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strdict/strEq.js",
    "importStyle": "strEq",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 515,
    "kind": "file",
    "name": "src/string/strdict/strHash.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * Code taken from https://github.com/darkskyapp/string-hash, \n * Too small to be worth is own module.\n * @param  {string} str\tThe string to hash (isf str is not a string make it into a string)\n * @param  {int32} start\tstart pos in the string\n * @param  {int32} end\tThe end position of thestring\n * @return {int32}\t\tThe hash value\n */\nexport default function strHash(str,start,end) {\n\tif(str === undefined) return 5381;\n\tif(typeof str !== 'string') str = str.toString();\n\tvar hashV = 5381|0,\n\t\tln    = (end || str.length) | 0;\n\tvar i = start || 0;\n\tif( ln - start > 7) ln = start+7;\n\tfor(;i< ln;) {\n\t\thashV = (hashV * 33) ^ str.charCodeAt(i++);\n\t}\n\tif( hashV === 0 ) hashV = 1;\n\n\t/* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n\t * integers. Since we want the results to be always positive, convert the\n\t * signed int to an unsigned by doing an unsigned bitshift. */\n\treturn hashV>>>0;\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strdict/strHash.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 516,
    "kind": "function",
    "name": "strHash",
    "memberof": "src/string/strdict/strHash.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/strdict/strHash.js~strHash",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strdict/strHash.js",
    "importStyle": "strHash",
    "description": "Code taken from https://github.com/darkskyapp/string-hash, \nToo small to be worth is own module.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "The string to hash (isf str is not a string make it into a string)"
      },
      {
        "nullable": null,
        "types": [
          "int32"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "start pos in the string"
      },
      {
        "nullable": null,
        "types": [
          "int32"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "The end position of thestring"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int32"
      ],
      "spread": false,
      "description": "The hash value"
    }
  },
  {
    "__docId__": 517,
    "kind": "file",
    "name": "src/string/strutil/countCh.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * count the number of occurences of char in the string\n * @param  {string} data  [description]\n * @param  {char} char  [description]\n * @param  {[int32]} arr   optional array to place the index of char in string\n * @param  {int32} start optional start start index of the string\n * @param  {int32} end   optional last index of the string\n * @return {int32}       number of occurences of the char in the string\n */\nexport default  function countCh(data, char, arr, start, end) {\n\tlet i = Math.min(end || data.length, data.length);\n\tstart = start || 0;\n\tlet ch = char.charCodeAt(0)|0;   \n\tlet ix = 1;\n\tif( arr !== undefined) {\n\t\tlet end = i;\n\t\ti = start;\n\t\tarr[0] = i;\n\t\twhile(i < end) \n\t\t\tif(data.charCodeAt(i++) === ch) arr[ix++] = i;\n\t}\n\telse {\n\t\twhile(i > start) \n\t\t\tif(data.charCodeAt(--i) === ch) ix++;\n\t}\n\treturn ix;\n}",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strutil/countCh.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 518,
    "kind": "function",
    "name": "countCh",
    "memberof": "src/string/strutil/countCh.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/strutil/countCh.js~countCh",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/countCh.js",
    "importStyle": "countCh",
    "description": "count the number of occurences of char in the string",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "char"
        ],
        "spread": false,
        "optional": false,
        "name": "char",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[int32]"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": "optional array to place the index of char in string"
      },
      {
        "nullable": null,
        "types": [
          "int32"
        ],
        "spread": false,
        "optional": false,
        "name": "start",
        "description": "optional start start index of the string"
      },
      {
        "nullable": null,
        "types": [
          "int32"
        ],
        "spread": false,
        "optional": false,
        "name": "end",
        "description": "optional last index of the string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "int32"
      ],
      "spread": false,
      "description": "number of occurences of the char in the string"
    }
  },
  {
    "__docId__": 519,
    "kind": "file",
    "name": "src/string/strutil/index.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nimport _strJoin from './strJoin';\nexport const strJoin = _strJoin;\n\nimport _reverse from './reverse';\nexport const reverse = _reverse;\n\nimport _prefixLen from './prefixLen';\nexport const prefixLen = _prefixLen;\n\nimport _prefixHead from './prefixHead';\nexport const prefixHead = _prefixHead;\n\nimport _prefixTail from './prefixTail';\nexport const prefixTail = _prefixTail;\n\nimport _prod from './prod';\nexport const prod = _prod;\n\nimport _padTo from './padTo';\nexport const padTo = _padTo;\n\nimport _countCh from './countCh';\nexport const countCh = _countCh;\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strutil/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 520,
    "kind": "variable",
    "name": "strJoin",
    "memberof": "src/string/strutil/index.js",
    "static": true,
    "longname": "src/string/strutil/index.js~strJoin",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/index.js",
    "importStyle": "{strJoin}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 521,
    "kind": "variable",
    "name": "reverse",
    "memberof": "src/string/strutil/index.js",
    "static": true,
    "longname": "src/string/strutil/index.js~reverse",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/index.js",
    "importStyle": "{reverse}",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 522,
    "kind": "variable",
    "name": "prefixLen",
    "memberof": "src/string/strutil/index.js",
    "static": true,
    "longname": "src/string/strutil/index.js~prefixLen",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/index.js",
    "importStyle": "{prefixLen}",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 523,
    "kind": "variable",
    "name": "prefixHead",
    "memberof": "src/string/strutil/index.js",
    "static": true,
    "longname": "src/string/strutil/index.js~prefixHead",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/index.js",
    "importStyle": "{prefixHead}",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 524,
    "kind": "variable",
    "name": "prefixTail",
    "memberof": "src/string/strutil/index.js",
    "static": true,
    "longname": "src/string/strutil/index.js~prefixTail",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/index.js",
    "importStyle": "{prefixTail}",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 525,
    "kind": "variable",
    "name": "prod",
    "memberof": "src/string/strutil/index.js",
    "static": true,
    "longname": "src/string/strutil/index.js~prod",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/index.js",
    "importStyle": "{prod}",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 526,
    "kind": "variable",
    "name": "padTo",
    "memberof": "src/string/strutil/index.js",
    "static": true,
    "longname": "src/string/strutil/index.js~padTo",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/index.js",
    "importStyle": "{padTo}",
    "description": null,
    "lineNumber": 35,
    "undocument": true
  },
  {
    "__docId__": 527,
    "kind": "variable",
    "name": "countCh",
    "memberof": "src/string/strutil/index.js",
    "static": true,
    "longname": "src/string/strutil/index.js~countCh",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/index.js",
    "importStyle": "{countCh}",
    "description": null,
    "lineNumber": 38,
    "undocument": true
  },
  {
    "__docId__": 528,
    "kind": "file",
    "name": "src/string/strutil/padTo.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * Create a FUNCTION resturns  padded (default is '0') string rep of a number\n *\n *  usage: padTo(5)(66) => '00066';\n *   or\n *         let pad3 = padTo(3,' ');\n *\t\t\tpad3(5) -> '  5'\n *\t\t\tpad3(45) ->  ' 45'\n *\t\t\tpad3(666) -> '666'\n *          pad3(76543) -> '76543'\n *\n * @param {number} padLength\n * @param {char} padChar padding char '0' default\n * @return {function} (number) => string\n *\n */\nexport default  function padTo(padLength, padChar='0') {\n\tlet maxNum = 10, \n\t\tpadding = ''; \n\tfor(let j=0; j<padLength; j++)\n\t{ \n\t\tmaxNum *= 10; \n\t\tpadding += padChar; \n\t}\n\tmaxNum--;\n\treturn (number) => (number<=maxNum) ? (padding+number).slice(-padLength) : ''+number; \n}\n\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strutil/padTo.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 529,
    "kind": "function",
    "name": "padTo",
    "memberof": "src/string/strutil/padTo.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/strutil/padTo.js~padTo",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/padTo.js",
    "importStyle": "padTo",
    "description": "Create a FUNCTION resturns  padded (default is '0') string rep of a number\n\n usage: padTo(5)(66) => '00066';\n  or\n        let pad3 = padTo(3,' ');\n\t\tpad3(5) -> '  5'\n\t\tpad3(45) ->  ' 45'\n\t\tpad3(666) -> '666'\n         pad3(76543) -> '76543'",
    "lineNumber": 33,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "padLength",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "char"
        ],
        "spread": false,
        "optional": false,
        "name": "padChar",
        "description": "padding char '0' default"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "(number) => string"
    }
  },
  {
    "__docId__": 530,
    "kind": "file",
    "name": "src/string/strutil/prefixHead.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport prefixLen from './prefixLen';\n/**\n * gets the prefix string of 'a' and 'n', for example a = 'asset', b = 'assess', the return will be 'asse'\n * @param  {string} a first string\n * @param  {string} b second\n * @return {string}   the common prefix of both a and b\n */\nexport default  function prefixHead(a,b) {\n\treturn a.substr(0,prefixLen(a,b));\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strutil/prefixHead.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 531,
    "kind": "function",
    "name": "prefixHead",
    "memberof": "src/string/strutil/prefixHead.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/strutil/prefixHead.js~prefixHead",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/prefixHead.js",
    "importStyle": "prefixHead",
    "description": "gets the prefix string of 'a' and 'n', for example a = 'asset', b = 'assess', the return will be 'asse'",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "first string"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "second"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "the common prefix of both a and b"
    }
  },
  {
    "__docId__": 532,
    "kind": "file",
    "name": "src/string/strutil/prefixLen.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * Find the length of the longest prefix of a and b string\n *    if a = pre + a1  and b = pre + b1\n *    pre is the longet sting that satisfies the relationship i.e.  prefixLen(a1,b1) === 0\n *    returns (pre.length )\n * @param  {string} a  first string\n * @param  {string} b  second string\n * @return {Number} length of prefix of a and b\n */\nexport default  function prefixLen(a,b) {\n\tif( a === b ) return a.length;\n\tlet la = a.length, lb = b.length; \n\tif( lb < la) la = lb;\n\tfor(let i=0; i < la; i++) {\n\t\tif(a[i] !== a[i]) return i+ln\n\t}\n\treturn la+ln;    \n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strutil/prefixLen.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 533,
    "kind": "function",
    "name": "prefixLen",
    "memberof": "src/string/strutil/prefixLen.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/strutil/prefixLen.js~prefixLen",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/prefixLen.js",
    "importStyle": "prefixLen",
    "description": "Find the length of the longest prefix of a and b string\n   if a = pre + a1  and b = pre + b1\n   pre is the longet sting that satisfies the relationship i.e.  prefixLen(a1,b1) === 0\n   returns (pre.length )",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "first string"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "second string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "length of prefix of a and b"
    }
  },
  {
    "__docId__": 534,
    "kind": "file",
    "name": "src/string/strutil/prefixTail.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport prefixLen from './prefixLen';\n/**\n * Gets the non-prefix string of 'a' and 'n', for example a = 'asset', b = 'assess', the return will be ['t', 'ss']\n * @param  {String} a [description]\n * @param  {String} b [description]\n * @return {[string]}   the non-common parts of  a and b, the part after the common prefix\n */\nexport default  function prefixTail(a,b) {\n\tlet pre = prefixLen(a,b);\n\treturn [a,b].map(x => x.substr(pre));\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strutil/prefixTail.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 535,
    "kind": "function",
    "name": "prefixTail",
    "memberof": "src/string/strutil/prefixTail.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/strutil/prefixTail.js~prefixTail",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/prefixTail.js",
    "importStyle": "prefixTail",
    "description": "Gets the non-prefix string of 'a' and 'n', for example a = 'asset', b = 'assess', the return will be ['t', 'ss']",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[string]"
      ],
      "spread": false,
      "description": "the non-common parts of  a and b, the part after the common prefix"
    }
  },
  {
    "__docId__": 536,
    "kind": "file",
    "name": "src/string/strutil/prod.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport {flatten} from '../../array/flatten';\n/**\n * This is rthe cross product of two arrays, where each arrys is an array of strings\n * the result is and array of length m x n, where m is the length of the first vector\n * and n is the length of the second vector\n *\n * this is like a full multiplication table where the inner operation (the multiplication) is\n * string concatination. Note if either array is a scalar string it is converted into an array\n * \n * tring prod out, example prod(['a','b'], ['x1', 'x2']) => [ 'ax1', 'bx1', 'ax2', 'bx2' ]\n * \n * @param  {string|[string]} s    a string or array of strings\n * @param  {[string]} list of strings\n * @return {[string]}      [description]\n */\nexport default  function prod(s,list) { \n\tif(!Array.isArray(list)) list = list?[list]:[];\n\tif(Array.isArray(s)) {\n\t\treturn flatten(s.map(x => prod(x,list)));\n\t}\n\telse {\n\t\tif(!s) return list.slice();\n\t\tif(list.length == 0) return [s];\n\t\telse return list.map( x => s+x);\n\t} \n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strutil/prod.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 537,
    "kind": "function",
    "name": "prod",
    "memberof": "src/string/strutil/prod.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/strutil/prod.js~prod",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/prod.js",
    "importStyle": "prod",
    "description": "This is rthe cross product of two arrays, where each arrys is an array of strings\nthe result is and array of length m x n, where m is the length of the first vector\nand n is the length of the second vector\n\nthis is like a full multiplication table where the inner operation (the multiplication) is\nstring concatination. Note if either array is a scalar string it is converted into an array\n\ntring prod out, example prod(['a','b'], ['x1', 'x2']) => [ 'ax1', 'bx1', 'ax2', 'bx2' ]",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": "a string or array of strings"
      },
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": "of strings"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[string]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 538,
    "kind": "file",
    "name": "src/string/strutil/reverse.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * reverse a string\n * @param  {string} s string to reverse\n * @return {string}   reversed string\n */\nexport default  function reverse(s) { // 1100ms\n\tlet o = '';\n\tfor (var i = s.length - 1; i >= 0; i--)\n\t\to += s[i];\n\treturn o;\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strutil/reverse.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 539,
    "kind": "function",
    "name": "reverse",
    "memberof": "src/string/strutil/reverse.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/strutil/reverse.js~reverse",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/reverse.js",
    "importStyle": "reverse",
    "description": "reverse a string",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "s",
        "description": "string to reverse"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "reversed string"
    }
  },
  {
    "__docId__": 540,
    "kind": "file",
    "name": "src/string/strutil/strJoin.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n// Bunch of str \n\n// String reverse, looks to be the \n// import {getLie,getCol}   from '../bundle/claimutils';\n\n/**\n * join an array of strings ignoring empty values\n * @param  {[String]} arrOfStrings array of strings\n * @param  {String} sep          seperator string\n * @return {String}              return a string of values seperated by 'sep' string\n */\nexport default  function strJoin(arrOfStrings, sep='') {\n\tif(arrOfStrings === undefined || arrOfStrings.length === 0) return '';\n\tif(typeof arrOfStrings === 'string') return arrOfStrings;\n\tif( !Array.isArray(arrOfStrings)) throw new Error('Array of strings expected: recieved '+arrOfStrings);\n\tlet s = '';\n\tlet sp = '';\n\tfor(let i=0; i< arrOfStrings.length; i++) {\n\t\tlet ss = arrOfStrings[i];\n\t\tif(!ss) continue;\n\t\ts += sp; s += ss;\n\t\tsp = sep;\n\t}\n\treturn s;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/string/strutil/strJoin.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 541,
    "kind": "function",
    "name": "strJoin",
    "memberof": "src/string/strutil/strJoin.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/string/strutil/strJoin.js~strJoin",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/string/strutil/strJoin.js",
    "importStyle": "strJoin",
    "description": "join an array of strings ignoring empty values",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "[String]"
        ],
        "spread": false,
        "optional": false,
        "name": "arrOfStrings",
        "description": "array of strings"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "sep",
        "description": "seperator string"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": "return a string of values seperated by 'sep' string"
    }
  },
  {
    "__docId__": 542,
    "kind": "file",
    "name": "src/utils/constants.js",
    "content": "/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport memoize from './objutils/memoize';\n\nexport const EMPTY_ARRAY = Object.freeze([]);\nexport const EMPTY_STR = '';\nexport const ZERO_STR = '0';\nexport const ZERO_DECIMAL = '0.0';\nexport const SEPARATOR_STRING = ', ';\n\n\n\nexport const TRUE = () => true; // a function that always retursn true\nexport const FALSE = () => false; // a function that always retursn false\nexport const K = memoize(k => () => k); // a function that always constant value k\n\nexport const NOT = (f) => (...args) => !f(...args);\nexport const AND = (f1, f2) => (...args) => f1(...args) && f2(...args);\nexport const OR = (f1, f2) => (...args) => f1(...args) || f2(...args);",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/constants.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 543,
    "kind": "variable",
    "name": "EMPTY_ARRAY",
    "memberof": "src/utils/constants.js",
    "static": true,
    "longname": "src/utils/constants.js~EMPTY_ARRAY",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/constants.js",
    "importStyle": "{EMPTY_ARRAY}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 544,
    "kind": "variable",
    "name": "EMPTY_STR",
    "memberof": "src/utils/constants.js",
    "static": true,
    "longname": "src/utils/constants.js~EMPTY_STR",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/constants.js",
    "importStyle": "{EMPTY_STR}",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 545,
    "kind": "variable",
    "name": "ZERO_STR",
    "memberof": "src/utils/constants.js",
    "static": true,
    "longname": "src/utils/constants.js~ZERO_STR",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/constants.js",
    "importStyle": "{ZERO_STR}",
    "description": null,
    "lineNumber": 19,
    "undocument": true
  },
  {
    "__docId__": 546,
    "kind": "variable",
    "name": "ZERO_DECIMAL",
    "memberof": "src/utils/constants.js",
    "static": true,
    "longname": "src/utils/constants.js~ZERO_DECIMAL",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/constants.js",
    "importStyle": "{ZERO_DECIMAL}",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 547,
    "kind": "variable",
    "name": "SEPARATOR_STRING",
    "memberof": "src/utils/constants.js",
    "static": true,
    "longname": "src/utils/constants.js~SEPARATOR_STRING",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/constants.js",
    "importStyle": "{SEPARATOR_STRING}",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 548,
    "kind": "function",
    "name": "TRUE",
    "memberof": "src/utils/constants.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/constants.js~TRUE",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/constants.js",
    "importStyle": "{TRUE}",
    "description": null,
    "lineNumber": 25,
    "undocument": true
  },
  {
    "__docId__": 549,
    "kind": "function",
    "name": "FALSE",
    "memberof": "src/utils/constants.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/constants.js~FALSE",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/constants.js",
    "importStyle": "{FALSE}",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 550,
    "kind": "variable",
    "name": "K",
    "memberof": "src/utils/constants.js",
    "static": true,
    "longname": "src/utils/constants.js~K",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/constants.js",
    "importStyle": "{K}",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 551,
    "kind": "function",
    "name": "NOT",
    "memberof": "src/utils/constants.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/constants.js~NOT",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/constants.js",
    "importStyle": "{NOT}",
    "description": null,
    "lineNumber": 29,
    "undocument": true
  },
  {
    "__docId__": 552,
    "kind": "function",
    "name": "AND",
    "memberof": "src/utils/constants.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/constants.js~AND",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/constants.js",
    "importStyle": "{AND}",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 553,
    "kind": "function",
    "name": "OR",
    "memberof": "src/utils/constants.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/constants.js~OR",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/constants.js",
    "importStyle": "{OR}",
    "description": null,
    "lineNumber": 31,
    "undocument": true
  },
  {
    "__docId__": 554,
    "kind": "file",
    "name": "src/utils/index.js",
    "content": "/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nexport * from './objutils'; \t  // memoize,access,setKey, timeIt,toKeyValueList, fromKeyValueList,isA\nexport * from './constants';\n//export * from './setutils';\n//export * from './lens';\n//export * from './str_element';\nexport * from './sort-helper';\nexport * from './types';\n//export * from './primes';\nimport renameColumns_ from './renameColumns';\nexport const renameColumns = renameColumns_;\n\nexport const __UTILS__ = ['objutils', 'sort-helper', 'types']; ",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 555,
    "kind": "variable",
    "name": "renameColumns",
    "memberof": "src/utils/index.js",
    "static": true,
    "longname": "src/utils/index.js~renameColumns",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/index.js",
    "importStyle": "{renameColumns}",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 556,
    "kind": "variable",
    "name": "__UTILS__",
    "memberof": "src/utils/index.js",
    "static": true,
    "longname": "src/utils/index.js~__UTILS__",
    "access": "private",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/index.js",
    "importStyle": "{__UTILS__}",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 557,
    "kind": "file",
    "name": "src/utils/objutils/access.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport memoize from './memoize';\n// Builds an accessor function for obj element key\n// akey = access('akey);  then akey(obj) same as obj.akey,   \n//                      akey(obj,value) same as obj.akey = value, ,\n//                      but returns the obj and not the value you assigned \n\n\nexport default  memoize(\n\tfunction (key) {\n\t\treturn function(obj,v) {\n\t\t\tif(arguments.length == 1) return obj[key];\n\t\t\telse {\n\t\t\t\tobj[key] = v;\n\t\t\t\treturn obj;\n\t\t\t}\n\t\t};  \n\t}\n);\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/access.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 558,
    "kind": "file",
    "name": "src/utils/objutils/filterDict.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport {isA} from './isA';\n/**\n * @param  {object} aDict \n * @param  {[type]} listOrFunc\n * @return {Object} Object action as a dictionary\n */\nexport default function filterDict(aDict, listOrFunc) {\n\tif( !listOrFunc ) return aDict;\n\tif( Array.isArray(listOrFunc)) {\n\t\treturn listOrFunc.reduce((dict,v) => { if(aDict[v]) dict[v] = aDict[v]; return dict; }, new Map());\n\t} else if( isA.function(listOrFunc) ) {\n\t\treturn listOrFunc(aDict).reduce((dict,v) => { if(aDict[v]) dict[v] = aDict[v]; return dict; }, new Map());\n\t}\n\treturn aDict;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/filterDict.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 559,
    "kind": "function",
    "name": "filterDict",
    "memberof": "src/utils/objutils/filterDict.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/filterDict.js~filterDict",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/filterDict.js",
    "importStyle": "filterDict",
    "description": "",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "aDict",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "listOrFunc",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Object action as a dictionary"
    }
  },
  {
    "__docId__": 560,
    "kind": "file",
    "name": "src/utils/objutils/fromKeyValueList.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport setKey from './setKey';\n/**\n * [fromKeyValueList description]\n * @param  {[type]} list [description]\n * @return {[type]}      [description]\n */\nexport default function fromKeyValueList(list) {\n\treturn list.reduce( (tab,[k,v]) => setKey(tab, k, v),{});\n}\n\nObject.fromEntries || (Object.fromEntries = fromKeyValueList);\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/fromKeyValueList.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 561,
    "kind": "function",
    "name": "fromKeyValueList",
    "memberof": "src/utils/objutils/fromKeyValueList.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/fromKeyValueList.js~fromKeyValueList",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/fromKeyValueList.js",
    "importStyle": "fromKeyValueList",
    "description": "[fromKeyValueList description]",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 562,
    "kind": "file",
    "name": "src/utils/objutils/fromKeyValueListV.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport setKeyV from './setKeyV';\n/**\n * [fromKeyValueListV description]\n * @param  {[type]} list [description]\n * @return {[type]}      [description]\n */\nexport default function fromKeyValueListV(list) {\n\treturn list.reduce( (tab,[k,v]) => setKeyV(tab, k, v),{});\n}\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/fromKeyValueListV.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 563,
    "kind": "function",
    "name": "fromKeyValueListV",
    "memberof": "src/utils/objutils/fromKeyValueListV.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/fromKeyValueListV.js~fromKeyValueListV",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/fromKeyValueListV.js",
    "importStyle": "fromKeyValueListV",
    "description": "[fromKeyValueListV description]",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 564,
    "kind": "file",
    "name": "src/utils/objutils/genFilterFunction.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport {TRUE} from '../constants';\n/**\n * create a function that tests for elements in aListOrStringOrEmpty\n *   aListOrStringOrEmpty => undefined - allows everything\n *   aListOrStringOrEmpty => [... names ] - allow only the elelemnts in the list \n *   aListOrStringOrEmpty => <single string Name> (string) - allow only single name \n * @param  {[string]} aListOrStringOrEmpty\n * @return {[type]}\n */\nexport default function genFilterFunction(aListOrStringOrEmpty) {\n\tif(aListOrStringOrEmpty === undefined) return TRUE;\n\tif(typeof aListOrStringOrEmpty === 'string') return (v => v === aListOrStringOrEmpty); // single name filter\n\tif(Array.isArray(aListOrStringOrEmpty)) return (v => aListOrStringOrEmpty.indexOf(v) !== -1); // matches a list\n\tthrow new Error('Unexpected type - expected endefined, a string, or and array of string');\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/genFilterFunction.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 565,
    "kind": "function",
    "name": "genFilterFunction",
    "memberof": "src/utils/objutils/genFilterFunction.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/genFilterFunction.js~genFilterFunction",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/genFilterFunction.js",
    "importStyle": "genFilterFunction",
    "description": "create a function that tests for elements in aListOrStringOrEmpty\n  aListOrStringOrEmpty => undefined - allows everything\n  aListOrStringOrEmpty => [... names ] - allow only the elelemnts in the list \n  aListOrStringOrEmpty => <single string Name> (string) - allow only single name ",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "[string]"
        ],
        "spread": false,
        "optional": false,
        "name": "aListOrStringOrEmpty",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 566,
    "kind": "file",
    "name": "src/utils/objutils/genObjMapper.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport newArray from '../../array/arrayutils/newArray';\nimport setKey from './setKey';\n/**\n * genObjMapper generates a function to map object to an array\n * this is useful to convert an array of object to the data of a frame\n * @param  {[type]} obj [description]\n * @return {[mapperFunction, [keys]]}     returns an array first element that function to convert the object to an array, and the secont element is an array of column names\n */\nexport default function genObjMapper(obj) {\n\tlet keys = Object.keys(obj);\n\tlet mapper = keys.reduce((o,v,ix) => setKey(o,v,ix), {});\n\tlet len = keys.length;\n\treturn [ //mapper func, colm array\n\t\t(obj) => {\n\t\t\tlet arr = newArray(len,null);\n\t\t\tfor(let i=0; i<len; i++) {\n\t\t\t\tlet k = keys[i];\n\t\t\t\tarr[mapper[k]] = obj[k];\n\t\t\t}\n\t\t\treturn arr;\n\t\t}, \n\t\tkeys\n\t] ;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/genObjMapper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 567,
    "kind": "function",
    "name": "genObjMapper",
    "memberof": "src/utils/objutils/genObjMapper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/genObjMapper.js~genObjMapper",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/genObjMapper.js",
    "importStyle": "genObjMapper",
    "description": "genObjMapper generates a function to map object to an array\nthis is useful to convert an array of object to the data of a frame",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[mapperFunction, [keys]]"
      ],
      "spread": false,
      "description": "returns an array first element that function to convert the object to an array, and the secont element is an array of column names"
    }
  },
  {
    "__docId__": 568,
    "kind": "file",
    "name": "src/utils/objutils/index.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nexport * from './isA';\nimport _keys from './keys';\nexport const keys = _keys;\n\nimport _pick from './pick';\nexport const pick = _pick;\n\nimport _pickRaw from './pickRaw';\nexport const pickRaw = _pickRaw;\n\nimport _memoize from './memoize';\nexport const memoize = _memoize;\n\nimport _access from './access';\nexport const access = _access;\n\nimport _setKey from './setKey';\nexport const setKey = _setKey;\n\nimport _toKeyValueList from './toKeyValueList';\nexport const toKeyValueList = _toKeyValueList;\n\nimport _fromKeyValueList from './fromKeyValueList';\nexport const fromKeyValueList = _fromKeyValueList;\n\nimport _setKeyV from './setKeyV';\nexport const setKeyV = _setKeyV;\n\nimport _toKeyValueListV from './toKeyValueListV';\nexport const toKeyValueListV = _toKeyValueListV;\n\nimport _fromKeyValueListV from './fromKeyValueListV';\nexport const fromKeyValueListV = _fromKeyValueListV;\n\nimport _genObjMapper from './genObjMapper';\nexport const genObjMapper = _genObjMapper;\n\nimport _mapOver from './mapOver';\nexport const mapOver = _mapOver;\n\nimport _shallow from './shallow';\nexport const shallow = _shallow;\n\nimport _filterDict from './filterDict';\nexport const filterDict = _filterDict;\n\nimport _genFilterFunction from './genFilterFunction';\nexport const genFilterFunction = _genFilterFunction;\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 569,
    "kind": "variable",
    "name": "keys",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~keys",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{keys}",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 570,
    "kind": "variable",
    "name": "pick",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~pick",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{pick}",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 571,
    "kind": "variable",
    "name": "pickRaw",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~pickRaw",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{pickRaw}",
    "description": null,
    "lineNumber": 24,
    "undocument": true
  },
  {
    "__docId__": 572,
    "kind": "variable",
    "name": "memoize",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~memoize",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{memoize}",
    "description": null,
    "lineNumber": 27,
    "undocument": true
  },
  {
    "__docId__": 573,
    "kind": "variable",
    "name": "access",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~access",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{access}",
    "description": null,
    "lineNumber": 30,
    "undocument": true
  },
  {
    "__docId__": 574,
    "kind": "variable",
    "name": "setKey",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~setKey",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{setKey}",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 575,
    "kind": "variable",
    "name": "toKeyValueList",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~toKeyValueList",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{toKeyValueList}",
    "description": null,
    "lineNumber": 36,
    "undocument": true
  },
  {
    "__docId__": 576,
    "kind": "variable",
    "name": "fromKeyValueList",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~fromKeyValueList",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{fromKeyValueList}",
    "description": null,
    "lineNumber": 39,
    "undocument": true
  },
  {
    "__docId__": 577,
    "kind": "variable",
    "name": "setKeyV",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~setKeyV",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{setKeyV}",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 578,
    "kind": "variable",
    "name": "toKeyValueListV",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~toKeyValueListV",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{toKeyValueListV}",
    "description": null,
    "lineNumber": 45,
    "undocument": true
  },
  {
    "__docId__": 579,
    "kind": "variable",
    "name": "fromKeyValueListV",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~fromKeyValueListV",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{fromKeyValueListV}",
    "description": null,
    "lineNumber": 48,
    "undocument": true
  },
  {
    "__docId__": 580,
    "kind": "variable",
    "name": "genObjMapper",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~genObjMapper",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{genObjMapper}",
    "description": null,
    "lineNumber": 51,
    "undocument": true
  },
  {
    "__docId__": 581,
    "kind": "variable",
    "name": "mapOver",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~mapOver",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{mapOver}",
    "description": null,
    "lineNumber": 54,
    "undocument": true
  },
  {
    "__docId__": 582,
    "kind": "variable",
    "name": "shallow",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~shallow",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{shallow}",
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 583,
    "kind": "variable",
    "name": "filterDict",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~filterDict",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{filterDict}",
    "description": null,
    "lineNumber": 60,
    "undocument": true
  },
  {
    "__docId__": 584,
    "kind": "variable",
    "name": "genFilterFunction",
    "memberof": "src/utils/objutils/index.js",
    "static": true,
    "longname": "src/utils/objutils/index.js~genFilterFunction",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/index.js",
    "importStyle": "{genFilterFunction}",
    "description": null,
    "lineNumber": 63,
    "undocument": true
  },
  {
    "__docId__": 585,
    "kind": "file",
    "name": "src/utils/objutils/isA.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nexport const isA = {\n\tarray: function isArray(arr) {\n\t\tif( !arr) return undefined;\n\t\tif(Array.isArray(arr)) return arr;\n\t\treturn (arr.constructor === Array)?arr:undefined;\n\t},\n\tnotNull: function notNull(obj) { return (obj !== null && obj !== undefined)?obj: undefined; },\n\tfunc: function isFunc(fun) {return (typeof fun === 'function')?fun:undefined; },\n\tstr: function isStr(str) {return (typeof str === 'string')?str:undefined; },\n\tnum: function isNum(num) {return (typeof num === 'number')?num:undefined; },\n\tbool: function isBool(val) {return (typeof val === 'boolean')?val:undefined; },\n\tobj: function(obj) {return (!Array.isArray(obj) && typeof obj === 'object')?obj:undefined; },\n\tmap: function(aMap) {return (aMap instanceof Map)?aMap:undefined; },\n\tset: function(aSet) {return (aSet instanceof Set)?aSet:undefined; },\n\tarrayOf: function(contract=notNull) {\n\t\treturn (obj) => isArray(obj) && (obj.every(contract)?obj:undefined);\n\t}\n};\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/isA.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 586,
    "kind": "variable",
    "name": "isA",
    "memberof": "src/utils/objutils/isA.js",
    "static": true,
    "longname": "src/utils/objutils/isA.js~isA",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/isA.js",
    "importStyle": "{isA}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 587,
    "kind": "file",
    "name": "src/utils/objutils/keys.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n \nexport default function keys(obj) {\n\treturn obj? Object.keys(obj): [];\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/keys.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 588,
    "kind": "function",
    "name": "keys",
    "memberof": "src/utils/objutils/keys.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/keys.js~keys",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/keys.js",
    "importStyle": "keys",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 589,
    "kind": "file",
    "name": "src/utils/objutils/mapOver.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n\nexport default  curry2(function (fn, object) {\n\tif(!object) return object;\n\tif(Array.isArray(object)) {\n\t\tlet list = object;\n\t\treturn list.map(fn);\n\t}\n\telse if( typeof object === 'object') {\n\t\treturn Object.keys(object).reduce((obj,k,ix) => (obj[k] = fn(object[k],ix), obj),{});\n\t}\n\telse if(typeof object.map === 'function'){\n\t\t// babel - do not transform map into array iteration\n\t\t// O: KEEP\n\t\treturn object.map(fn);\n\t}\n\telse return fn(object);\n});\n\nfunction curry2(fn) {\n\tif(typeof fn !== 'function') throw new Error('fn:('+fn+') function expected');\n\tif( fn.length < 2 ) return fn;\n\treturn function _fn(...list) {\n\n\t\tswitch( list.length ) {\n\t\tcase 0: return _fn;\n\t\tcase 1: {\n\t\t\tlet a = list[0];\n\t\t\treturn (...args) => fn(a,...args);\n\t\t}\n\t\tdefault: {\n\t\t\treturn fn(...list);\n\t\t} \n\t\t}\n\t};\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/mapOver.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 590,
    "kind": "function",
    "name": "curry2",
    "memberof": "src/utils/objutils/mapOver.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/mapOver.js~curry2",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/utils/objutils/mapOver.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 35,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 591,
    "kind": "file",
    "name": "src/utils/objutils/memoize.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * [memoize description]\n * @param  {Function} fn [description]\n * @return {[type]}      [description]\n */\nexport default function memoize(fn) {\n\tlet memo = {};\n\treturn (arg) => {\n\t\tlet v = memo[arg];\n\t\tif( v !== undefined ) return v;\n\t\tv = fn(arg);\n\t\treturn memo[arg] = v; \n\t};\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/memoize.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 592,
    "kind": "function",
    "name": "memoize",
    "memberof": "src/utils/objutils/memoize.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/memoize.js~memoize",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/memoize.js",
    "importStyle": "memoize",
    "description": "[memoize description]",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "Function"
        ],
        "spread": false,
        "optional": false,
        "name": "fn",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 593,
    "kind": "file",
    "name": "src/utils/objutils/pick.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport memoize from './memoize';\nimport pickRaw from './pickRaw'\n/**\n * extract elements of an object, or from a list of elements\n * \tpick(key) => returns a function that takes an object and returns an elemnt \n *  pick(keyList) => returns a function that takes an object and returns an array of element values\n *\n * @param  {String} list   String or array of strings\n * @return {function}      function that takes an object and returns the key or an array of keys\n */\nexport default  memoize(pickRaw);\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/pick.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 594,
    "kind": "file",
    "name": "src/utils/objutils/pickRaw.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n/*local*/\nimport {isA} from './isA';\n/**\n * [pickRaw description]\n * @param  {[type]} list [description]\n * @return {[type]}      [description]\n */\nexport default function pickRaw(list) {\n\tif(!list) return () => [];\n\tif( isA.array(list))\n\t\treturn ( (obj) => list.map(k => obj[k])  );\n\telse {\n\t\tlet k = list;\n\t\treturn (obj => obj[k]);\n\t}\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/pickRaw.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 595,
    "kind": "function",
    "name": "pickRaw",
    "memberof": "src/utils/objutils/pickRaw.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/pickRaw.js~pickRaw",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/pickRaw.js",
    "importStyle": "pickRaw",
    "description": "[pickRaw description]",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "list",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 596,
    "kind": "file",
    "name": "src/utils/objutils/setKey.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * [setKey description]\n * @param {[type]} obj [description]\n * @param {[type]} key [description]\n * @param {[type]} v   [description]\n */\nexport default function setKey(obj,key,v) {\n\tif(arguments.length === 1) throw new Error(\"too few arguments\");\n\tif(arguments.length === 2) \n\t\treturn obj[key];\n\telse {\n\t\tobj[key] = v;\n\t\treturn obj;\n\t}\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/setKey.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 597,
    "kind": "function",
    "name": "setKey",
    "memberof": "src/utils/objutils/setKey.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/setKey.js~setKey",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/setKey.js",
    "importStyle": "setKey",
    "description": "[setKey description]",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "[description]"
      }
    ]
  },
  {
    "__docId__": 598,
    "kind": "file",
    "name": "src/utils/objutils/setKeyV.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * setKeyV - set object's key (multiple) value, if there is no value argument is present get the value list for the  key \n * @param {[type]} obj [description]\n * @param {[type]} key [description]\n * @param {[type]} v   [description]\n */\nexport default function setKeyV(obj,key,v) {\n\tif(arguments.length == 2) \n\t\treturn obj[key];\n\telse if( v === undefined) return obj;\n\telse {\n\t\tlet res = obj[key];\n\t\tif( res ) res.push(v);\n\t\telse obj[key] = [v];\n\t\treturn obj;\n\t}\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/setKeyV.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 599,
    "kind": "function",
    "name": "setKeyV",
    "memberof": "src/utils/objutils/setKeyV.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/setKeyV.js~setKeyV",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/setKeyV.js",
    "importStyle": "setKeyV",
    "description": "setKeyV - set object's key (multiple) value, if there is no value argument is present get the value list for the  key ",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "v",
        "description": "[description]"
      }
    ]
  },
  {
    "__docId__": 600,
    "kind": "file",
    "name": "src/utils/objutils/shallow.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n// =============== shallow equality ===================\nexport default function shallow(a, b, compare) {\n\tvar aIsNull = a === null;\n\tvar bIsNull = b === null;\n\n\tif (aIsNull !== bIsNull) return false;\n\n\tvar aIsArray = Array.isArray(a);\n\tvar bIsArray = Array.isArray(b);\n\n\tif (aIsArray !== bIsArray) return false;\n\n\tvar aTypeof = typeof a;\n\tvar bTypeof = typeof b;\n\n\tif (aTypeof !== bTypeof) return false;\n\tif (flat(aTypeof)) return compare ? compare(a, b) : a === b;\n\n\treturn aIsArray ? shallowArray(a, b, compare) : shallowObject(a, b, compare);\n}\n\nfunction shallowArray(a, b, compare) {\n\tvar l = a.length;\n\tif (l !== b.length) return false;\n\n\tif (compare) {\n\t\tfor (let i = 0; i < l; i++)\n\t\t\tif (!compare(a[i], b[i])) return false;\n\t} else {\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\tif (a[i] !== b[i]) return false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nfunction shallowObject(a, b, compare) {\n\tvar ka = 0;\n\tvar kb = 0;\n\n\tif (compare) {\n\t\tfor (var key in a) {\n\t\t\tif (\n\t\t\t\ta.hasOwnProperty(key) &&\n        \t\t!compare(a[key], b[key])\n\t\t\t) return false;\n\n\t\t\tka++;\n\t\t}\n\t} else {\n\t\tfor (let key in a) {\n\t\t\tif (a.hasOwnProperty(key) && a[key] !== b[key] ) return false;\n\t\t\tka++;\n\t\t}\n\t}\n\n\tfor (let key in b) {\n\t\tif (b.hasOwnProperty(key)) kb++;\n\t}\n\n\treturn ka === kb;\n}\n\nfunction flat(type) { return (type !== 'function' && type !== 'object'); }\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/shallow.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 601,
    "kind": "function",
    "name": "shallow",
    "memberof": "src/utils/objutils/shallow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/shallow.js~shallow",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/shallow.js",
    "importStyle": "shallow",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 602,
    "kind": "function",
    "name": "shallowArray",
    "memberof": "src/utils/objutils/shallow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/shallow.js~shallowArray",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/utils/objutils/shallow.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 603,
    "kind": "function",
    "name": "shallowObject",
    "memberof": "src/utils/objutils/shallow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/shallow.js~shallowObject",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/utils/objutils/shallow.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 54,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 604,
    "kind": "function",
    "name": "flat",
    "memberof": "src/utils/objutils/shallow.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/shallow.js~flat",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/utils/objutils/shallow.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 81,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 605,
    "kind": "file",
    "name": "src/utils/objutils/toKeyValueList.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * [toKeyValueList description]\n * @param  {[type]} obj [description]\n * @return {[type]}     [description]\n */\nexport default function toKeyValueList(obj) {\n\treturn Object.keys(obj).map( k => [k, obj[k]]);\n}\n\nObject.entries || (Object.entries = toKeyValueList);\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/toKeyValueList.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 606,
    "kind": "function",
    "name": "toKeyValueList",
    "memberof": "src/utils/objutils/toKeyValueList.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/toKeyValueList.js~toKeyValueList",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/toKeyValueList.js",
    "importStyle": "toKeyValueList",
    "description": "[toKeyValueList description]",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 607,
    "kind": "file",
    "name": "src/utils/objutils/toKeyValueListV.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport {flatten} from '../../array/flatten';\n/**\n * [toKeyValueListV description]\n * @param  {[type]} obj [description]\n * @return {[type]}     [description]\n */\nexport default function toKeyValueListV(obj) {\n\tlet expand = Object.keys(obj).map(doExpand);\n\treturn flatten(expand,1);\n\tfunction doExpand(k) {\n\t\tlet v = obj[k];\n\t\tassert(Array.isArray(v), 'value must be an array')\n\t\tif( v.length == 1) {\n\t\t\tlet res = [k, v[0]];\n\t\t\treturn [res];\n\t\t}\n\t\treturn v.map( e => [k, e]);\n\t}\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/objutils/toKeyValueListV.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 608,
    "kind": "function",
    "name": "toKeyValueListV",
    "memberof": "src/utils/objutils/toKeyValueListV.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/objutils/toKeyValueListV.js~toKeyValueListV",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/objutils/toKeyValueListV.js",
    "importStyle": "toKeyValueListV",
    "description": "[toKeyValueListV description]",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 609,
    "kind": "file",
    "name": "src/utils/primes.js",
    "content": "/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nvar primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, \n              109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, \n              233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, \n              367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, \n              499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, \n              643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, \n              797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, \n              947, 953, 967, 971, 977, 983, 991, 997, 1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051, 1061, 1063, 1069, \n              1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129, 1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, \n              1223, 1229, 1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 1307, 1319, 1321, 1327, 1361, \n              1367, 1373, 1381, 1399, 1409, 1423, 1427, 1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489, \n              1493, 1499, 1511, 1523, 1531, 1543, 1549, 1553, 1559, 1567, 1571, 1579, 1583, 1597, 1601, 1607, 1609, 1613, 1619, \n              1621, 1627, 1637, 1657, 1663, 1667, 1669, 1693, 1697, 1699, 1709, 1721, 1723, 1733, 1741, 1747, 1753, 1759, 1777, \n              1783, 1787, 1789, 1801, 1811, 1823, 1831, 1847, 1861, 1867, 1871, 1873, 1877, 1879, 1889, 1901, 1907, 1913, 1931, \n              1933, 1949, 1951, 1973, 1979, 1987, 1993, 1997, 1999];\n\n// Find a find the smallest prime number greater thn or equal to\n\nexport function primeAround(aNum) {\n  let lenp = primes.length;\n  let count = 0;\n  let divi = 2;\n  if( (aNum % 2) === 0 ) aNum += 1;\n  for(let i=0; ; i++){\n    count++;\n    divi = i<lenp ? primes[i] : divi+2;  \n    if( divi*divi > aNum) {\n        //console.log(count);\n        return aNum;\n    }\n    if((aNum % divi) === 0) {\n     //console.log\n     aNum += 2;\n     i = -1;\n    }\n  }\n  //console.log(count);\n  return aNum;\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/primes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 610,
    "kind": "variable",
    "name": "primes",
    "memberof": "src/utils/primes.js",
    "static": true,
    "longname": "src/utils/primes.js~primes",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/utils/primes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 15,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 611,
    "kind": "function",
    "name": "primeAround",
    "memberof": "src/utils/primes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/primes.js~primeAround",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/primes.js",
    "importStyle": "{primeAround}",
    "description": null,
    "lineNumber": 33,
    "undocument": true
  },
  {
    "__docId__": 612,
    "kind": "file",
    "name": "src/utils/renameColumns.js",
    "content": "/*\r\nCopyright (c) 2020, Nurul Choudhury\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted, provided that the above\r\ncopyright notice and this permission notice appear in all copies.\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\r\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\r\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\r\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\r\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\r\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\r\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\r\n*/\r\n\r\nexport default function renameColumns(frame,map) {\r\n\treturn frame.columns.map(c => map[c]?map[c]:c);\r\n\r\n}",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/renameColumns.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 613,
    "kind": "function",
    "name": "renameColumns",
    "memberof": "src/utils/renameColumns.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/renameColumns.js~renameColumns",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/renameColumns.js",
    "importStyle": "renameColumns",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 614,
    "kind": "file",
    "name": "src/utils/sort-helper/cmpNumOrStrBy.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport {cmpStrNum} from './cmpStrNum';\n/**\n * comapre string or number (used to sort frames)\n * @param  {[type]} colIX column index\n * @return {function}        (row1, row2) => compares row1[columnIX] to row2[columnIX]\n */\nexport default function cmpNumOrStrBy(colIX) { \n\treturn (row1,row2) => (cmpStrNum(row1[colIX],row2[colIX]));\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/sort-helper/cmpNumOrStrBy.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 615,
    "kind": "function",
    "name": "cmpNumOrStrBy",
    "memberof": "src/utils/sort-helper/cmpNumOrStrBy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/sort-helper/cmpNumOrStrBy.js~cmpNumOrStrBy",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/sort-helper/cmpNumOrStrBy.js",
    "importStyle": "cmpNumOrStrBy",
    "description": "comapre string or number (used to sort frames)",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "colIX",
        "description": "column index"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "(row1, row2) => compares row1[columnIX] to row2[columnIX]"
    }
  },
  {
    "__docId__": 616,
    "kind": "file",
    "name": "src/utils/sort-helper/cmpStr.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * [cmpStr description]\n * @param  {[type]} a [description]\n * @param  {[type]} b [description]\n * @return {[type]}   [description]\n */\nexport function cmpStr(a,b) {\n\tif( a === b ) return 0;\n\treturn a<b? -1 : 1;\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/sort-helper/cmpStr.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 617,
    "kind": "function",
    "name": "cmpStr",
    "memberof": "src/utils/sort-helper/cmpStr.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/sort-helper/cmpStr.js~cmpStr",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/sort-helper/cmpStr.js",
    "importStyle": "{cmpStr}",
    "description": "[cmpStr description]",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 618,
    "kind": "file",
    "name": "src/utils/sort-helper/cmpStrNum.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\nimport {cmpStr} from './cmpStr';\nimport {toNumber} from './toNumber';\nconst  isString = (s) =>  (typeof s) === 'string';\nconst  isNum = (a) =>  (typeof a) === 'number' && a !== Infinity;//isNum = (a) =>  (typeof a) === 'number';\n/**\n * [cmpStrNum compare (number, number), or (number, string-of-number) or (string-of-number, number) (string-of-number, string-of-number) , (string, string) \n * @param  {[type]} a [description]\n * @param  {[type]} b [description]\n * @return {[type]}   [description]\n */\nexport function cmpStrNum(a,b) {\n\tif( isNum(a) ) {\n\t\tif( isNum(b) ) {\n\t\t\treturn a-b;\n\t\t}\n\t\tif( isString(b) ) {\n\t\t\tlet nb = toNumber(b);\n\t\t\tif( nb !== undefined ) {\n\t\t\t\tlet r =  a - nb;\n\t\t\t\tif(r == 0 || isNaN(r)) return cmpStr(''+a, b);\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\treturn cmpStr(''+a, b);\n\t\t}\n\t}\n\telse if( isNum(b) ) {\n\t\tif( isNum(b) ) return a-b;\n\t\tif( isString(b) ) {\n\t\t\tlet na = toNumber(a);\n\t\t\tif( na !== undefined && na !== Infinity) {\n\t\t\t\tlet r = na - b;\n\t\t\t\tif(r == 0 || isNaN(r) || r === Infinity) return cmpStr(a, ''+b);\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\treturn cmpStr(a, ''+b);\n\t\t}\t\n\t}\n\tlet na = toNumber(a), nb= toNumber(b);\n\t//if( !isNaN(a1) && !isNaN(b1) ) return a1 - b1;\n\tif( na!== undefined && nb !== undefined && na !== Infinity && nb !== Infinity) {\n\t\tlet r =  na - nb;\n\t\tif(r != 0 || !isNaN(r) || r !== Infinity) return r;\n\t}\n\treturn cmpStr(a,b);\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/sort-helper/cmpStrNum.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 619,
    "kind": "function",
    "name": "isString",
    "memberof": "src/utils/sort-helper/cmpStrNum.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/sort-helper/cmpStrNum.js~isString",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/utils/sort-helper/cmpStrNum.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 620,
    "kind": "function",
    "name": "isNum",
    "memberof": "src/utils/sort-helper/cmpStrNum.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/sort-helper/cmpStrNum.js~isNum",
    "access": "public",
    "export": false,
    "importPath": "nurulc.github.io/src/utils/sort-helper/cmpStrNum.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "ignore": true
  },
  {
    "__docId__": 621,
    "kind": "function",
    "name": "cmpStrNum",
    "memberof": "src/utils/sort-helper/cmpStrNum.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/sort-helper/cmpStrNum.js~cmpStrNum",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/sort-helper/cmpStrNum.js",
    "importStyle": "{cmpStrNum}",
    "description": "[cmpStrNum compare (number, number), or (number, string-of-number) or (string-of-number, number) (string-of-number, string-of-number) , (string, string) ",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "a",
        "description": "[description]"
      },
      {
        "nullable": null,
        "types": [
          "[type]"
        ],
        "spread": false,
        "optional": false,
        "name": "b",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 622,
    "kind": "file",
    "name": "src/utils/sort-helper/combineCmp.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n \n/**\n * combine a set of sorting comparison functions\n * @param  {...[type]} funcs [description]\n * @return {[type]}          [description]\n */\nexport default function combineCmp(...funcs) {\n\tlet len = funcs.length;\n\t//funcs.find(f => (res=f(a,b))!==0); // clean but not so fast, below is fater\n\tswitch(len){\n\tcase 0: return () => 0;\n\tcase 1: return funcs[0];\n\tcase 2: return ((a,b) => funcs[0](a,b) || funcs[1](a,b));\n\tcase 3: return ((a,b) => funcs[0](a,b) || funcs[1](a,b) || funcs[2](a,b));\t\t\t\t\n\tdefault: \n\t{\n\t\treturn (\n\t\t\t(a,b) => \n\t\t\t{\n\t\t\t\tfor(let i=0; i<len; i++) {\n\t\t\t\t\tlet res = funcs[i](a,b);\n\t\t\t\t\tif( res !== 0) return res;\n\t\t\t\t}\n\t\t\t\treturn 0;\n\t\t\t});\n\t}\n\t}\t\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/sort-helper/combineCmp.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 623,
    "kind": "function",
    "name": "combineCmp",
    "memberof": "src/utils/sort-helper/combineCmp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/sort-helper/combineCmp.js~combineCmp",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/sort-helper/combineCmp.js",
    "importStyle": "combineCmp",
    "description": "combine a set of sorting comparison functions",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "...[type]"
        ],
        "spread": true,
        "optional": false,
        "name": "funcs",
        "description": "[description]"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[type]"
      ],
      "spread": false,
      "description": "[description]"
    }
  },
  {
    "__docId__": 624,
    "kind": "file",
    "name": "src/utils/sort-helper/index.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nexport * from './toNumber';\nexport * from './cmpStr';\nexport * from './cmpStrNum';\nimport _cmpNumOrStrBy from './cmpNumOrStrBy';\nexport const cmpNumOrStrBy = _cmpNumOrStrBy;\n\nimport _revCmp from './revCmp';\nexport const revCmp = _revCmp;\n\nimport _combineCmp from './combineCmp';\nexport const combineCmp = _combineCmp;\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/sort-helper/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 625,
    "kind": "variable",
    "name": "cmpNumOrStrBy",
    "memberof": "src/utils/sort-helper/index.js",
    "static": true,
    "longname": "src/utils/sort-helper/index.js~cmpNumOrStrBy",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/sort-helper/index.js",
    "importStyle": "{cmpNumOrStrBy}",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 626,
    "kind": "variable",
    "name": "revCmp",
    "memberof": "src/utils/sort-helper/index.js",
    "static": true,
    "longname": "src/utils/sort-helper/index.js~revCmp",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/sort-helper/index.js",
    "importStyle": "{revCmp}",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 627,
    "kind": "variable",
    "name": "combineCmp",
    "memberof": "src/utils/sort-helper/index.js",
    "static": true,
    "longname": "src/utils/sort-helper/index.js~combineCmp",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/sort-helper/index.js",
    "importStyle": "{combineCmp}",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 628,
    "kind": "file",
    "name": "src/utils/sort-helper/revCmp.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * [description]\n * @param  {function} cmp sort comparison function\n * @return {function}      new function what will do a reverse sort\n */\nexport default function revCmp(cmp) { return (a,b) => cmp(b,a); }\n\n\n\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/sort-helper/revCmp.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 629,
    "kind": "function",
    "name": "revCmp",
    "memberof": "src/utils/sort-helper/revCmp.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/sort-helper/revCmp.js~revCmp",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/sort-helper/revCmp.js",
    "importStyle": "revCmp",
    "description": "[description]",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "cmp",
        "description": "sort comparison function"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "new function what will do a reverse sort"
    }
  },
  {
    "__docId__": 630,
    "kind": "file",
    "name": "src/utils/sort-helper/toNumber.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n\nexport function toNumber(str) {\n\tif(str === '' || str === undefined) return undefined;\n\tlet len = str.length,negate = 1;\n\tlet res = +str;\n\tif(!isNaN(res)) return res;\n\tif( res === Infinity ) return undefined;\n\tres = 0;\n\tif( str.length > 1 && (str[0] === '$'|| (str[0] ==='-' && str[1] === '$')) ) {\n\t\tlet i = 1;\n\t\tif(str[1] === '-' || str[0] === '-'){\n\t\t\tnegate = -1;\n\t\t\ti++;\n\t\t} \n\t\tif( i === len ) return undefined;\n\t\twhile(i<len) {\n\t\t\tlet c = str[i];\n            \n\t\t\tif( c === ',') { i++; continue; }\n\t\t\tif( c === '.') {\n\t\t\t\tlet fraction = Number(str.substr(i));\n\t\t\t\tif( !isNaN(fraction)) {\n\t\t\t\t\treturn 1.0*negate*res+fraction;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif(c < '0' || c > '9') return undefined;\n\t\t\tres = res*10+(+c);\n\t\t\ti++;\n\t\t}\n\t\treturn res;\n\t} else {\n\t\tlet i = 0;\n\t\tif(str[0] === -1){\n\t\t\tnegate = -1;\n\t\t\ti++;\n\t\t} \n\t\tif( i === len ) return undefined;\n\t\twhile(i<len) {\n\t\t\tlet c = str[i];\n\t\t\tif( c === ',') { i++; continue; }\n\t\t\tif( c === '.') {\n\t\t\t\tlet fraction = Number(str.substr(i+1));\n\t\t\t\tif( !isNaN(fraction)) {\n\t\t\t\t\treturn 1.0*negate*res+fraction;\n\t\t\t\t}\n\t\t\t\treturn undefined;\n\t\t\t}\n\t\t\tif(c < '0' || c > '9') return undefined;\n\t\t\tres = res*10+(+c);\n\t\t\ti++;\n\t\t}\n\t\treturn res;\n\t}\n}\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/sort-helper/toNumber.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 631,
    "kind": "function",
    "name": "toNumber",
    "memberof": "src/utils/sort-helper/toNumber.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/sort-helper/toNumber.js~toNumber",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/sort-helper/toNumber.js",
    "importStyle": "{toNumber}",
    "description": null,
    "lineNumber": 18,
    "undocument": true
  },
  {
    "__docId__": 632,
    "kind": "file",
    "name": "src/utils/types/index.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\nimport _isEmpty from './isEmpty';\nexport const isEmpty = _isEmpty;\n\nimport _isArray from './isArray';\nexport const isArray = _isArray;\n\nimport _isFunction from './isFunction';\nexport const isFunction = _isFunction;\n\nimport _isString from './isString';\nexport const isString = _isString;\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/types/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 633,
    "kind": "variable",
    "name": "isEmpty",
    "memberof": "src/utils/types/index.js",
    "static": true,
    "longname": "src/utils/types/index.js~isEmpty",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/types/index.js",
    "importStyle": "{isEmpty}",
    "description": null,
    "lineNumber": 17,
    "undocument": true
  },
  {
    "__docId__": 634,
    "kind": "variable",
    "name": "isArray",
    "memberof": "src/utils/types/index.js",
    "static": true,
    "longname": "src/utils/types/index.js~isArray",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/types/index.js",
    "importStyle": "{isArray}",
    "description": null,
    "lineNumber": 20,
    "undocument": true
  },
  {
    "__docId__": 635,
    "kind": "variable",
    "name": "isFunction",
    "memberof": "src/utils/types/index.js",
    "static": true,
    "longname": "src/utils/types/index.js~isFunction",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/types/index.js",
    "importStyle": "{isFunction}",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 636,
    "kind": "variable",
    "name": "isString",
    "memberof": "src/utils/types/index.js",
    "static": true,
    "longname": "src/utils/types/index.js~isString",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/types/index.js",
    "importStyle": "{isString}",
    "description": null,
    "lineNumber": 26,
    "undocument": true
  },
  {
    "__docId__": 637,
    "kind": "file",
    "name": "src/utils/types/isArray.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * is the arr/object an array\n * @param  {any} arr\n * @return {Boolean}\n */\nexport default function isArray(arr) {\n\tif( !arr) return null;\n\tif(Array.isArray(arr)) return arr;\n\treturn (arr.constructor === Array || ArrayBuffer.isView(arr))?arr:null;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/types/isArray.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 638,
    "kind": "function",
    "name": "isArray",
    "memberof": "src/utils/types/isArray.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/types/isArray.js~isArray",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/types/isArray.js",
    "importStyle": "isArray",
    "description": "is the arr/object an array",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "arr",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 639,
    "kind": "file",
    "name": "src/utils/types/isEmpty.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n \nimport isArray from './isArray';\n/**\n * Check if an array is empty or an object has no attributes\n * @param  {[Any]} arrOrObj\n * @return {[Boolean]} - true if empty array or empty object\n */\nexport default function isEmpty(arrOrObj) {\n\tif(arrOrObj === '' || arrOrObj === undefined || arrOrObj === null) return true;\n\tif(isArray(arrOrObj) && arrOrObj.length === 0) return true;\n\tif(typeof arrOrObj === 'object' && \n\t\t\tObject.keys(arrOrObj).length === 0 ) return true;\n\treturn false;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/types/isEmpty.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 640,
    "kind": "function",
    "name": "isEmpty",
    "memberof": "src/utils/types/isEmpty.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/types/isEmpty.js~isEmpty",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/types/isEmpty.js",
    "importStyle": "isEmpty",
    "description": "Check if an array is empty or an object has no attributes",
    "lineNumber": 23,
    "params": [
      {
        "nullable": null,
        "types": [
          "[Any]"
        ],
        "spread": false,
        "optional": false,
        "name": "arrOrObj",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "[Boolean]"
      ],
      "spread": false,
      "description": "true if empty array or empty object"
    }
  },
  {
    "__docId__": 641,
    "kind": "file",
    "name": "src/utils/types/isFunction.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n\n/**\n * is obj a function\n * @param  {any} fun - is a object that may be a function object\n * @return {boolean} - true if it is a function, false otherwise\n */\nexport default function isFunction(fun) {\n\tif(typeof fun === 'function') return fun;\n\treturn !!(fun && fun.call && fun.apply)?fun:null;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/types/isFunction.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 642,
    "kind": "function",
    "name": "isFunction",
    "memberof": "src/utils/types/isFunction.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/types/isFunction.js~isFunction",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/types/isFunction.js",
    "importStyle": "isFunction",
    "description": "is obj a function",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "fun",
        "description": "is a object that may be a function object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if it is a function, false otherwise"
    }
  },
  {
    "__docId__": 643,
    "kind": "file",
    "name": "src/utils/types/isString.js",
    "content": "// jshint undef:true\n// jshint unused:true\n/*\nCopyright (c) 2020, Nurul Choudhury\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted, provided that the above\ncopyright notice and this permission notice appear in all copies.\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\nWITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR\nANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\nWHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\nACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF\nOR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n*/\n \n/**\n * is str a string\n * @param  {String} str\n * @return {boolean} - true if str is a string\n */\nexport default function isString(str) {\n\treturn (typeof str === 'string')?str:null;\n}\n\n",
    "static": true,
    "longname": "C:/Users/nurul/projects/data-frame/src/utils/types/isString.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 644,
    "kind": "function",
    "name": "isString",
    "memberof": "src/utils/types/isString.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils/types/isString.js~isString",
    "access": "public",
    "export": true,
    "importPath": "nurulc.github.io/src/utils/types/isString.js",
    "importStyle": "isString",
    "description": "is str a string",
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "true if str is a string"
    }
  },
  {
    "kind": "index",
    "content": "# nurulc.github.io\r\n\r\n[Go to the site](https://nurulc.github.io/)\r\n\r\n\r\nRemember to disable pre and post install scripts in **NPM**\r\n\r\n`bash\r\nnpm config  set ignore-scripts true\r\n`\r\n\r\n<script>\r\n  warn('hello');\r\n</script>\r\nTryIt\r\n\r\nSmall utility to create code to perform tryit functionality\r\n\r\n```html\r\n<div id=\"tryit1-container\" >\r\n  <div class=\"tryit-cotrol\">\r\n    <button onclick=\"tryIt('tryit1')\">Tryit</button>\r\n  </div>\r\n  \r\n    <textarea id=\"tryit1\" class=\"tryit-code\">\r\n      var x = {value: 1/2.0, name: 'This is my Name'};\r\n      x\r\n    </textarea>\r\n \r\n  <div id='tryit1-error' class=\"tryit-error\"></div>\r\n  <div id=\"tryit1-display\" class=\"tryit-display\"></div>\r\n</div>\r\n```\r\n\r\n<pre>tryit\r\nvar x = {value: 1/2.0, name: 'This is my Name'}; 1< x && x>5\r\nx\r\n</pre>\r\n# hello\r\n<pre>tryit\r\ny = 5\r\n\r\n\r\n\r\nz = 1\r\n</pre>\r\n",
    "longname": "C:\\Users\\nurul\\projects\\nurulc.github.io\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"nurulc.github.io\",\n  \"version\": \"1.0.0\",\n  \"description\": \"general web site\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"start\": \"reload .\",\n    \"build\": \"nodemon  --ext \\\"ex js\\\" gen-tryit.js\",\n    \"gen:doc\": \"esdoc\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/nurulc/nurulc.github.io.git\"\n  },\n  \"keywords\": [\n    \"website\"\n  ],\n  \"author\": \"Nurul Choudhury\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/nurulc/nurulc.github.io/issues\"\n  },\n  \"homepage\": \"https://github.com/nurulc/nurulc.github.io#readme\",\n  \"devDependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"esdoc-type-inference-plugin\": \"^1.0.2\",\n    \"showdown\": \"^1.9.1\",\n    \"str-data-frame\": \"^0.2.6\"\n  },\n  \"dependencies\": {}\n}\n",
    "longname": "C:\\Users\\nurul\\projects\\nurulc.github.io\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]