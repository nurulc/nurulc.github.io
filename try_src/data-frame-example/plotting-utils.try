!-- Utilities for doing line plots


!tryit
const capitalStr = phrase => phrase.replace(/\b\w/g, c => c.toUpperCase());
function nameDesc([col,desc]) {
  return [col, desc || capitalStr(col)];
}

function makeLines(aFrame,colList) {
   return function (iso) {
      let frame = aFrame.filter(ro => ro.iso_code === iso && ro.total_cases > 0); // get get the data for a country 
      var countryName = frame.asObj(0).location; // get the name of the country - from the first row

      const column = (key) => frame.rawColumn(key); // get a columns from the frame 

      let x = column('date'); 
      return colList
        .map(c => nameDesc(c.split('=')))
        .map(([col,desc]) => (
        {
          name: desc+'/'+countryName,
          x,
          y: column(col)
        }
        ));
   }
}

var colList = ['new_cases', 'new_deaths', 'mortality=% Mortality' ]


function doPlot(frame, isoList, aDiv, isLinear, otherOpts) {
  const getLines = makeLines(frame,colList);
  let lines;
  if(Array.isArray(isoList)) lines = isoList.flatMap(getLines).sort((a,b) => a.name<b.name?1:-1);
  else lines = getLines(isoList);

  var layout = {
    height: 800,
    title: ' Covid Results (with Rangeslider)',
//    xaxis: {rangeslider: {}, },
    yaxis: {type: isLinear?'linear':'log'      } // this can be 'linear' or 'log'
  };

  Plotly.newPlot(aDiv, lines, layout,otherOpts);
}

      
