@@include  ../divtools.try


!md
# Get Data - World Covid Report

## Use fetch to get raw data

We will use world covid-19 daily statistics, this is a csv file that we will split into an array of lines. We can use the fetch
function to pull data from the public repository on Github. Once the promise resolves, the data eill

!tryit
	
	var csvData;
	
	var WORLD_DATA_SRC ='https://raw.githubusercontent.com/owid/covid-19-data/master/public/data/owid-covid-data.csv';
	var p = fetch(WORLD_DATA_SRC)
  		.then(response => response.text())
  		.then(data => 
          Promise.resolve(csvData = data)
      );

// The result from the last expression is displayed automatically.
// The in-built display facility is Promise aware, and will unwrap the promise 
// before displaying the data.

p  // note p is a promise, the display will wait for the promise to resolve

!md
## Split into lines
!tryit

csvData.split('\n');

!md
##Create a frame from the data

Create a frame from string data representing the contents of a CSV file.
!tryit
  var { csvLine, arrProd, Frame} = DataFrame;

// frameFromBuffer is at its core the following code
//    var lines = csvData.split('\n').map(csvLine);
//    var covidFrame = new Frame(lines.slice(1), lines[0]);

  var covidFrame = Frame.frameFromString(csvData, csvLine);
  // Display the first 11 results
  covidFrame.slice(0,11);

!md

### What happened

We converted a string to a frames. 
* **csvData** _The string beinng the contents of a CSV (comma seperated values) representation of a table._
* **csvLine** _function to convert one row (in string form) into an array of strings



@@include plot-covid-frame.try
